/***************************************************************
    *  DO NOT EDIT THIS FILE!
    *         
    *  This file is automatically generated by HP Service Test.
    *  Manually changing the contents of this file may result in 
    *  loss of information.
    *          
    *  To edit the test, open the file ‘tb_sendhttpmessage_verification.st’ 
    *  in HP Service Test.
     ***************************************************************/
    
    namespace Script
    {
    using System;
    using System.Text;
    using System.Threading;
    using System.Xml;
    using System.Xml.Schema;
    using HP.ST.Fwk.ReporterFWK;
    using HP.ST.Shared.Utilities;
    using HP.ST.Ext.BindingImpl.Getters;
    using HP.ST.Ext.BindingImpl.Setters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.PropInfo;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Getters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Setters;
    using HP.ST.Fwk.RunTimeFWK;
    using HP.ST.Fwk.RunTimeFWK.Utilities;
    using HP.ST.Fwk.RunTimeFWK.HelperClasses;
    using HP.ST.Fwk.RunTimeFWK.CompositeActivities;
    using HP.ST.Ext.BindingImpl.Setters.DataSourceSetters;
    using HP.ST.Fwk.JVMLoader;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using HP.ST.Fwk.SOAReplayAPI;
    using HP.ST.Fwk.UFTLicensing;
    
    
    
    public partial class WorkFlowScript : STWorkFlowScriptBase
    {    
    	TestUserCode _userCode = null;
    	TestEntities _flow = null;
    	static Reporter reporter;
    	int reportLevelInTree;
        HP.ST.Fwk.ReportCreator.QTPEngine.QTPEngineReportCreator reportCreator;
    	
    	public BindDirection bind_dir1239 = null;
        public BindDirection bind_dir1240 = null;
        public HP.ST.Ext.BasicActivities.DataCursorActivity DataCursorActivity280 = null;
        public BindDirection bind_dir1241 = null;
        public HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy DataCursorActivity280_Policy = null;
        public BindDirection bind_dir1242 = null;
        public BindDirection bind_dir1243 = null;
        public BindDirection bind_dir1244 = null;
        public BindDirection bind_dir1245 = null;
        public BindDirection bind_dir1246 = null;
        public BindDirection bind_dir1247 = null;
        public BindDirection bind_dir1248 = null;
        public BindDirection bind_dir1249 = null;
        public BindDirection bind_dir1250 = null;
        public BindDirection bind_dir1251 = null;
        public BindDirection bind_dir1252 = null;
        public BindDirection bind_dir1253 = null;
        public BindDirection bind_dir1254 = null;
        public BindDirection bind_dir1255 = null;
        public BindDirection bind_dir1256 = null;
        public BindDirection bind_dir1257 = null;
        public BindDirection bind_dir1258 = null;
        public BindDirection bind_dir1259 = null;
        public BindDirection bind_dir1260 = null;
        public HP.ST.Ext.BasicActivities.DataCursorActivity DataCursorActivity281 = null;
        public BindDirection bind_dir1261 = null;
        public HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy DataCursorActivity281_Policy = null;
        public BindDirection bind_dir1262 = null;
        public BindDirection bind_dir1263 = null;
        public BindDirection bind_dir1264 = null;
        public BindDirection bind_dir1265 = null;
        public BindDirection bind_dir1266 = null;
        public BindDirection bind_dir1267 = null;
        public BindDirection bind_dir1268 = null;
        public BindDirection bind_dir1269 = null;
        public BindDirection bind_dir1270 = null;
        public BindDirection bind_dir1271 = null;
        public BindDirection bind_dir1272 = null;
        public BindDirection bind_dir1273 = null;
        public BindDirection bind_dir1274 = null;
        public BindDirection bind_dir1275 = null;
        public BindDirection bind_dir1276 = null;
        public BindDirection bind_dir1277 = null;
        public BindDirection bind_dir1278 = null;
        public BindDirection bind_dir1279 = null;
        public BindDirection bind_dir1280 = null;
        public BindDirection bind_dir1281 = null;
        public BindDirection bind_dir1282 = null;
        public BindDirection bind_dir1283 = null;
        public BindDirection bind_dir1284 = null;
        public BindDirection bind_dir1285 = null;
        public BindDirection bind_dir1286 = null;
        public BindDirection bind_dir1287 = null;
        public BindDirection bind_dir1288 = null;
        public BindDirection bind_dir1289 = null;
        public BindDirection bind_dir1290 = null;
        public BindDirection bind_dir1291 = null;
        public BindDirection bind_dir1292 = null;
        public BindDirection bind_dir1293 = null;
        public BindDirection bind_dir1294 = null;
        public BindDirection bind_dir1295 = null;
        public BindDirection bind_dir1296 = null;
        public BindDirection bind_dir1297 = null;
        public BindDirection bind_dir1298 = null;
        public BindDirection bind_dir1299 = null;
        public BindDirection bind_dir1300 = null;
        public BindDirection bind_dir1301 = null;
        public BindDirection bind_dir1302 = null;
        public BindDirection bind_dir1303 = null;
        public BindDirection bind_dir1304 = null;
        public BindDirection bind_dir1305 = null;
        public BindDirection bind_dir1306 = null;
        public BindDirection bind_dir1307 = null;
        public BindDirection bind_dir1308 = null;
        public BindDirection bind_dir1309 = null;
        public BindDirection bind_dir1310 = null;
        public BindDirection bind_dir1311 = null;
        public BindDirection bind_dir1312 = null;
        
        public IEnumerable<FeaturesGroup> LicensedFeatures
        {
        
        get
        {
        List<FeaturesGroup> features = new List<FeaturesGroup>();
        FeaturesGroup fg1 = new FeaturesGroup();
            fg1.Add(new LicenseFeature("UnifiedFunctionalTesting","1.0"));
            fg1.Add(new LicenseFeature("UnifiedFunctionalTesting","1.1"));
            fg1.Add(new LicenseFeature("UnifiedFunctionalTesting","1.2"));
            features.Add(fg1);
            FeaturesGroup fg2 = new FeaturesGroup();
            return features;
        
        }
        
        }
        
        public WorkFlowScript()
            : base(VuserClass.CommandLineArguments, new STRunTimeContext(), "test")
        {	
        	UpdateContextWithActionFolder(String.Empty);
        	
        }
        
        public WorkFlowScript(ISTRunTimeContext ctx)
            : base(VuserClass.CommandLineArguments, ctx, "test")
            
        {
        	this._context = ctx;
        	UpdateContextWithActionFolder(String.Empty);
        	UpdateTestSettings(ctx);
        }
        
        internal void InitializeComponent()
        {
        	LoadInput();
        	
        	InitReport();
        	
        	InitializeEncryptionManagerValues();
        
        	_userCode = new TestUserCode();
            _flow = _userCode;
            _flow.Context=this._context;
            
            
        
        	_flow.DataFetchActivity276 = new HP.ST.Ext.BasicActivities.DataFetchActivity(_context,"DataFetchActivity276");
            _flow.StartActivity1 = new HP.ST.Ext.BasicActivities.StartActivity(_context,"StartActivity1");
            _flow.Loop2 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Loop<Loop2Input>(_context,"Loop2",LoopType.For);
            _flow.DataExporterActivity278 = new HP.ST.Ext.BasicActivities.DataExporterActivity(_context,"DataExporterActivity278");
            _flow.DataExporterCloseActivity279 = new HP.ST.Ext.BasicActivities.DataExporterCloseActivity(_context,"DataExporterCloseActivity279");
            _flow.EndActivity3 = new HP.ST.Ext.BasicActivities.EndActivity(_context,"EndActivity3");
            _flow.DataDisconnectActivity277 = new HP.ST.Ext.BasicActivities.DataDisconnectActivity(_context,"DataDisconnectActivity277");
            this.DataCursorActivity280 = new HP.ST.Ext.BasicActivities.DataCursorActivity(_context,"DataCursorActivity280");
            this.DataCursorActivity280_Policy = new HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy();
            _flow.Sequence274 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Sequence(_context,"Sequence274");
            _flow.DbOpenConnection39 = new HP.ST.Ext.DatabaseRunTime.DbOpenConnection(_context,"DbOpenConnection39");
            _flow.DbFetchData58 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData58");
            _flow.DbFetchData256 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData256");
            _flow.DbFetchData269 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData269");
            _flow.DbFetchData270 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData270");
            _flow.Loop56 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Loop<Loop56Input>(_context,"Loop56",LoopType.For);
            _flow.CallQTPTest262 = new HP.ST.Ext.UFTActivity.QtpTestActivity(_context,"CallQTPTest262");
            _flow.DbFetchData263 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData263");
            _flow.ReplaceStringActivity268 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity268");
            _flow.HTTPActivity73 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity73");
            _flow.DbFetchData77 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData77");
            this.DataCursorActivity281 = new HP.ST.Ext.BasicActivities.DataCursorActivity(_context,"DataCursorActivity281");
            this.DataCursorActivity281_Policy = new HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy();
            _flow.Sequence275 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Sequence(_context,"Sequence275");
            _flow.DbFetchData57 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData57");
            _flow.ReplaceStringActivity271 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity271");
            _flow.ReplaceStringActivity272 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity272");
            _flow.ReplaceStringActivity273 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity273");
            _flow.CallQTPTest259 = new HP.ST.Ext.UFTActivity.QtpTestActivity(_context,"CallQTPTest259");
            _flow.DbFetchData260 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData260");
            _flow.ReplaceStringActivity261 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity261");
            _flow.ReplaceStringActivity267 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity267");
            _flow.ReplaceStringActivity266 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity266");
            _flow.HTTPActivity59 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity59");
            _flow.StringToJsonActivity60 = new HP.ST.Ext.TransformJsonActivity.StringToJsonActivity(_context,"StringToJsonActivity60");
            _flow.DbFetchData61 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData61");
            _flow.DbFetchData62 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData62");
            _flow.DbFetchData117 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData117");
            _flow.DbFetchData63 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData63");
            _flow.IfElse64 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.IfElse<IfElse64Input>(_context,"IfElse64");
            _flow.IfElseBranch65 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.IfElseBranch(_context,"IfElseBranch65");
            _flow.IfElseBranch66 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.IfElseBranch(_context,"IfElseBranch66");
            _flow.DbFetchData67 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData67");
            _flow.DbFetchData68 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData68");
            _flow.DataFetchActivity276.Comment = @"";
            _flow.DataFetchActivity276.IconPath = @"";
            _flow.DataFetchActivity276.AssemblyPath = @"AddIns\ServiceTest\BaseDataProviders\HP.ST.Ext.CustomDataProviders.dll";
            _flow.DataFetchActivity276.QueryClassName = @"HP.ST.Ext.CustomDataProviders.DbDataQuery";
            XmlDocument DataFetchActivity276_QueryParameters_Document = new XmlDocument();
            DataFetchActivity276_QueryParameters_Document.PreserveWhitespace = true;
            string xmlDataFetchActivity276Params = @"<Arguments><QueryParametersContainer><QueryParameter><Name>Id</Name><Value>3c16ad12-8441-44fc-ba3f-59f4289acca5</Value></QueryParameter><QueryParameter><Name>QueryName</Name><Value>tb_global_table</Value></QueryParameter><QueryParameter><Name>IsEmbedded</Name><Value>True</Value></QueryParameter><QueryParameter><Name>Externalized</Name><Value>False</Value></QueryParameter><QueryParameter><Name>GroupText</Name><Value></Value></QueryParameter><QueryParameter><Name>ConnectionString</Name><Value>DSN=192.168.50.11;Uid=ime;Pwd=www.365ime.com!;</Value></QueryParameter><QueryParameter><Name>SqlStatement</Name><Value>select * from tb_global_table where TestCase = '1'</Value></QueryParameter><QueryParameter><Name>Password</Name><Value>UqIq+/M1hvnEiRgp6HH+dg==</Value></QueryParameter><QueryParameter><Name>DatabaseType</Name><Value>ODBC</Value></QueryParameter></QueryParametersContainer></Arguments>";
            DataFetchActivity276_QueryParameters_Document.LoadXml(xmlDataFetchActivity276Params);
            _flow.DataFetchActivity276.QueryParameters = DataFetchActivity276_QueryParameters_Document;
            _flow.dataSourceNameToDataSource.Add("tb_global_table", _flow.DataFetchActivity276);
            this.Activities.Add (_flow.DataFetchActivity276);
            _flow.StartActivity1.Comment = @"";
            _flow.StartActivity1.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_code_activity.png";
            _flow.StartActivity1.Name = @"开始";
            this.Activities.Add (_flow.StartActivity1);
            _flow.Loop2.ConditionAsString = @"Run for 1 iteration";
            _flow.Loop2.NumberOfIterations = (int)1;
            _flow.Loop2.Comment = @"";
            _flow.Loop2.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_loop.png";
            _flow.Loop2.Name = @"测试流";
            _flow.Loop2.Activities.Add (this.DataCursorActivity280);
            _flow.Loop2.Activities.Add (_flow.Sequence274);
            this.Activities.Add (_flow.Loop2);
            _flow.DataExporterActivity278.Comment = @"";
            _flow.DataExporterActivity278.IconPath = @"";
            VTDPropertyInfoBase pi2513 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1275 = new VTDObjectGetter(pi2513);
            VTDPropertyInfoBase pi2514 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter1239 = new VTDObjectSetter(pi2514);
            binding_setter1239 = new StringFormaterDecorator(binding_setter1239,"{Step.DataFetchActivity276.OutTable}");
            bind_dir1239 = new BindDirection(_flow.DataFetchActivity276,binding_getter1275,binding_setter1239,BindTargetType.ToInProperty);
            _flow.DataExporterActivity278.InDirections.Add(bind_dir1239);
            this.Activities.Add (_flow.DataExporterActivity278);
            _flow.DataExporterCloseActivity279.Comment = @"";
            _flow.DataExporterCloseActivity279.IconPath = @"";
            this.Activities.Add (_flow.DataExporterCloseActivity279);
            _flow.EndActivity3.Comment = @"";
            _flow.EndActivity3.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_code_activity.png";
            _flow.EndActivity3.Name = @"结束";
            this.Activities.Add (_flow.EndActivity3);
            _flow.DataDisconnectActivity277.Comment = @"";
            _flow.DataDisconnectActivity277.IconPath = @"";
            VTDPropertyInfoBase pi2515 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1276 = new VTDObjectGetter(pi2515);
            VTDPropertyInfoBase pi2516 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter1240 = new VTDObjectSetter(pi2516);
            binding_setter1240 = new StringFormaterDecorator(binding_setter1240,"{Step.DataFetchActivity276.OutTable}");
            bind_dir1240 = new BindDirection(_flow.DataFetchActivity276,binding_getter1276,binding_setter1240,BindTargetType.ToInProperty);
            _flow.DataDisconnectActivity277.InDirections.Add(bind_dir1240);
            this.Activities.Add (_flow.DataDisconnectActivity277);
            this.DataCursorActivity280.Comment = @"";
            this.DataCursorActivity280.IconPath = @"";
            VTDPropertyInfoBase pi2517 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1277 = new VTDObjectGetter(pi2517);
            VTDPropertyInfoBase pi2518 = new VTDPropertyInfoBase("InTable");
            VTDBaseSetter binding_setter1241 = new VTDObjectSetter(pi2518);
            binding_setter1241 = new StringFormaterDecorator(binding_setter1241,"{Step.DataFetchActivity276.OutTable}");
            bind_dir1241 = new BindDirection(_flow.DataFetchActivity276,binding_getter1277,binding_setter1241,BindTargetType.ToInProperty);
            this.DataCursorActivity280.InDirections.Add(bind_dir1241);
            this.DataCursorActivity280_Policy.StartPosition = CursorStartPosition.FirstRecord;
            this.DataCursorActivity280_Policy.StartAtSpecificRow = 1;
            this.DataCursorActivity280_Policy.StartCondition.ColumnName = "";
            this.DataCursorActivity280_Policy.StartCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity280_Policy.StartCondition.Value = "";
            this.DataCursorActivity280_Policy.EndPosition = CursorEndPosition.LastRecord;
            this.DataCursorActivity280_Policy.EndAtSpecificRow = 1;
            this.DataCursorActivity280_Policy.EndCondition.ColumnName = "";
            this.DataCursorActivity280_Policy.EndCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity280_Policy.EndCondition.Value = "";
            this.DataCursorActivity280_Policy.StepType = CursorStepType.Forward;
            this.DataCursorActivity280_Policy.StepSize = 1;
            this.DataCursorActivity280_Policy.ActionAfterLastRecord = CursorActionAfterLastRecord.Wraparound;
            this.DataCursorActivity280.Policy = this.DataCursorActivity280_Policy;
            this.DataCursorActivity280.ReportStepData = true;
            _flow.Loop2.BeforeExecuteStepEvent += this.DataCursorActivity280.ResetCursor;
            _flow.Sequence274.Comment = @"";
            _flow.Sequence274.IconPath = @"";
            _flow.Sequence274.Name = @"序列274";
            _flow.Sequence274.Activities.Add (_flow.DbOpenConnection39);
            _flow.Sequence274.Activities.Add (_flow.DbFetchData58);
            _flow.Sequence274.Activities.Add (_flow.DbFetchData256);
            _flow.Sequence274.Activities.Add (_flow.DbFetchData269);
            _flow.Sequence274.Activities.Add (_flow.DbFetchData270);
            _flow.Sequence274.Activities.Add (_flow.Loop56);
            _flow.Sequence274.Activities.Add (_flow.CallQTPTest262);
            _flow.Sequence274.Activities.Add (_flow.DbFetchData263);
            _flow.Sequence274.Activities.Add (_flow.ReplaceStringActivity268);
            _flow.Sequence274.Activities.Add (_flow.HTTPActivity73);
            _flow.Sequence274.Activities.Add (_flow.DbFetchData77);
            _flow.DbOpenConnection39.ConnectionString = @"DSN=192.168.50.11;Uid=ime;Pwd=www.365ime.com!;";
            _flow.DbOpenConnection39.Password = @"";
            _flow.DbOpenConnection39.DatabaseType = HP.ST.Shared.Utilities.DB.DatabaseType.ODBC;
            _flow.DbOpenConnection39.Comment = @"";
            _flow.DbOpenConnection39.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_connect.png";
            _flow.DbOpenConnection39.Name = @"连接到mysql数据库";
            _flow.DbFetchData58.QueryString = @"select count(*) as 'Row' from tb_sendhttpmessage_verification";
            _flow.DbFetchData58.Timeout = (int)30;
            _flow.DbFetchData58.Comment = @"";
            _flow.DbFetchData58.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData58.Name = @"获取tb_sendhttpmessage_verification表有效行数";
            VTDPropertyInfoBase pi2519 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1278 = new VTDObjectGetter(pi2519);
            VTDPropertyInfoBase pi2520 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1242 = new VTDObjectSetter(pi2520);
            bind_dir1242 = new BindDirection(_flow.DbOpenConnection39,binding_getter1278,binding_setter1242,BindTargetType.ToInProperty);
            _flow.DbFetchData58.InDirections.Add(bind_dir1242);
            XmlDocument DbFetchData58_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData58_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData58_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><Row>37</Row></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData58.ExpectedOutputProperties = DbFetchData58_ExpectedOutputProperties_Document;
            set_DbFetchData58_checkpoints(_flow.DbFetchData58);
            _flow.DbFetchData256.QueryString = @"select ResponseXsid from tb_global_table where TestCase = 1";
            _flow.DbFetchData256.Timeout = (int)30;
            _flow.DbFetchData256.Comment = @"";
            _flow.DbFetchData256.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData256.Name = @"获取全局表中xsid值";
            VTDPropertyInfoBase pi2521 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1279 = new VTDObjectGetter(pi2521);
            VTDPropertyInfoBase pi2522 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1243 = new VTDObjectSetter(pi2522);
            bind_dir1243 = new BindDirection(_flow.DbOpenConnection39,binding_getter1279,binding_setter1243,BindTargetType.ToInProperty);
            _flow.DbFetchData256.InDirections.Add(bind_dir1243);
            XmlDocument DbFetchData256_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData256_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData256_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><ResponseXsid /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData256.ExpectedOutputProperties = DbFetchData256_ExpectedOutputProperties_Document;
            _flow.DbFetchData269.QueryString = @"select LoginTeacherUsername from tb_global_table where TestCase = 1";
            _flow.DbFetchData269.Timeout = (int)30;
            _flow.DbFetchData269.Comment = @"";
            _flow.DbFetchData269.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData269.Name = @"获取全局表中LoginTeacherUsername值";
            VTDPropertyInfoBase pi2523 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1280 = new VTDObjectGetter(pi2523);
            VTDPropertyInfoBase pi2524 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1244 = new VTDObjectSetter(pi2524);
            bind_dir1244 = new BindDirection(_flow.DbOpenConnection39,binding_getter1280,binding_setter1244,BindTargetType.ToInProperty);
            _flow.DbFetchData269.InDirections.Add(bind_dir1244);
            XmlDocument DbFetchData269_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData269_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData269_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><LoginTeacherUsername /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData269.ExpectedOutputProperties = DbFetchData269_ExpectedOutputProperties_Document;
            _flow.DbFetchData270.QueryString = @"select LoginStudentUsername from tb_global_table where TestCase = 1";
            _flow.DbFetchData270.Timeout = (int)30;
            _flow.DbFetchData270.Comment = @"";
            _flow.DbFetchData270.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData270.Name = @"获取全局表中LoginStudentUsername值";
            VTDPropertyInfoBase pi2525 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1281 = new VTDObjectGetter(pi2525);
            VTDPropertyInfoBase pi2526 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1245 = new VTDObjectSetter(pi2526);
            bind_dir1245 = new BindDirection(_flow.DbOpenConnection39,binding_getter1281,binding_setter1245,BindTargetType.ToInProperty);
            _flow.DbFetchData270.InDirections.Add(bind_dir1245);
            XmlDocument DbFetchData270_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData270_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData270_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><LoginStudentUsername /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData270.ExpectedOutputProperties = DbFetchData270_ExpectedOutputProperties_Document;
            _flow.Loop56.ConditionAsString = @"Run for 1 iteration";
            _flow.Loop56.NumberOfIterations = (int)1;
            _flow.Loop56.Comment = @"";
            _flow.Loop56.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_loop.png";
            _flow.Loop56.Name = @"循环执行tb_sendhttpmessage_verification中的测试用例";
            VTDPropertyInfoBase pi2527 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='Row'][1]");
            VTDBaseGetter binding_getter1282 = new VTDXPathGetter(pi2527,XmlTypeCode.Long);
            binding_getter1282 = new XPathGetterDecorator(binding_getter1282,"{Array0}",1);
            VTDPropertyInfoBase pi2528 = new VTDPropertyInfoBase("NumberOfIterations");
            VTDBaseSetter binding_setter1246 = new VTDObjectSetter(pi2528);
            bind_dir1246 = new BindDirection(_flow.DbFetchData58,binding_getter1282,binding_setter1246,BindTargetType.ToInProperty);
            _flow.Loop56.InDirections.Add(bind_dir1246);
            _flow.Loop56.Activities.Add (this.DataCursorActivity281);
            _flow.Loop56.Activities.Add (_flow.Sequence275);
            _flow.CallQTPTest262.Comment = @"";
            _flow.CallQTPTest262.IconPath = @"AddIns\ServiceTest\UFT\toolbox_qtp.png";
            _flow.CallQTPTest262.Name = @"Encryption.timestamps";
            _flow.CallQTPTest262.ScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest262.ScriptPath}")) ? @"..\Encryption" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest262.ScriptPath}");
            _flow.CallQTPTest262.ActionName = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest262.ActionName}")) ? @"timestamps" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest262.ActionName}");
            _flow.CallQTPTest262.Description = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest262.Description}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest262.Description}");
            _flow.CallQTPTest262.IsActionSelected = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest262.IsActionSelected}")) ? @"True" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest262.IsActionSelected}");
            _flow.CallQTPTest262.ResultLocation = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest262.ResultLocation}")) ? @"RunQTPReport\" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest262.ResultLocation}");
            _flow.CallQTPTest262.QCScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest262.QCScriptPath}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest262.QCScriptPath}");
            _flow.DbFetchData263.QueryString = @"select timestamps from tb_global_table where TestCase = 1";
            _flow.DbFetchData263.Timeout = (int)30;
            _flow.DbFetchData263.Comment = @"";
            _flow.DbFetchData263.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData263.Name = @"获取全局表中时间戳";
            VTDPropertyInfoBase pi2529 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1283 = new VTDObjectGetter(pi2529);
            VTDPropertyInfoBase pi2530 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1247 = new VTDObjectSetter(pi2530);
            bind_dir1247 = new BindDirection(_flow.DbOpenConnection39,binding_getter1283,binding_setter1247,BindTargetType.ToInProperty);
            _flow.DbFetchData263.InDirections.Add(bind_dir1247);
            XmlDocument DbFetchData263_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData263_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData263_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><timestamps /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData263.ExpectedOutputProperties = DbFetchData263_ExpectedOutputProperties_Document;
            _flow.ReplaceStringActivity268.SourceString = @"message={""content"":""测试"",""to"":""77401171@365ime.com"",""time"":1439108449,""from"":""77401169@365ime.com"",""messageID"":""{sourceType:0}_77401169_1439108449178"",""messageType"":""text\/markup"",""type"":""chat"",""thumbnailurl"":""http://download.ac-bj-oss.365ime.com/storage/2015-08-11/f67790eff7a55c1a0598e3d1af7c8e6bec1dde97"",""url"":""http://download.ac-bj-oss.365ime.com/storage/2015-08-11/bc87292b5c57359fd3ed9d3a2afb4cf2c60e016a"",""link"":""http://www.baidu.com"",""image"":""http://www.baidu.com/favicon.ico"",""duration"":""12"",""title"":""百度一下"",""name"":""张坤老师2"",""size"":""4"",""format"":""text/plain""}";
            _flow.ReplaceStringActivity268.SearchReplaceString = new Pair<string, string>[4];
            _flow.ReplaceStringActivity268.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity268.SearchReplaceString[0].Key = @"77401171";
            _flow.ReplaceStringActivity268.SearchReplaceString[0].Value = @"{DataSource.tb_global_table.LoginStudentUsername}";
            _flow.ReplaceStringActivity268.SearchReplaceString[1] = new Pair<string, string>();
            _flow.ReplaceStringActivity268.SearchReplaceString[1].Key = @"1439108449";
            _flow.ReplaceStringActivity268.SearchReplaceString[1].Value = @"{Step.OutputProperties.DbFetchData263.ResultTable.Row[1].timestamps}";
            _flow.ReplaceStringActivity268.SearchReplaceString[2] = new Pair<string, string>();
            _flow.ReplaceStringActivity268.SearchReplaceString[2].Key = @"77401169";
            _flow.ReplaceStringActivity268.SearchReplaceString[2].Value = @"{DataSource.tb_global_table.LoginTeacherUsername}";
            _flow.ReplaceStringActivity268.SearchReplaceString[3] = new Pair<string, string>();
            _flow.ReplaceStringActivity268.SearchReplaceString[3].Key = @"{sourceType:0}_77401169_1439108449178";
            _flow.ReplaceStringActivity268.SearchReplaceString[3].Value = @"{sourceType:0}_77401169_{Step.OutputProperties.DbFetchData263.ResultTable.Row[1].timestamps}";
            _flow.ReplaceStringActivity268.CaseSensitive = true;
            _flow.ReplaceStringActivity268.Comment = @"";
            _flow.ReplaceStringActivity268.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity268.Name = @"更换Json里头的信息";
            VTDPropertyInfoBase pi2531 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='timestamps'][1]");
            VTDBaseGetter binding_getter1284 = new VTDXPathGetter(pi2531,XmlTypeCode.String);
            binding_getter1284 = new XPathGetterDecorator(binding_getter1284,"{Array0}",1);
            VTDPropertyInfoBase pi2532 = new VTDPropertyInfoBase("SearchReplaceString[3].Value");
            VTDBaseSetter binding_setter1248 = new VTDObjectSetter(pi2532);
            binding_setter1248 = new StringFormaterDecorator(binding_setter1248,"{Step.OutputProperties.DbFetchData263.ResultTable.Row[1].timestamps}");
            bind_dir1248 = new BindDirection(_flow.DbFetchData263,binding_getter1284,binding_setter1248,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity268.InDirections.Add(bind_dir1248);
            VTDPropertyInfoBase pi2533 = new VTDPropertyInfoBase("LoginTeacherUsername");
            VTDBaseGetter binding_getter1285 = new VTDObjectGetter(pi2533);
            VTDPropertyInfoBase pi2534 = new VTDPropertyInfoBase("SearchReplaceString[2].Value");
            VTDBaseSetter binding_setter1249 = new VTDObjectSetter(pi2534);
            binding_setter1249 = new StringFormaterDecorator(binding_setter1249,"{DataSource.tb_global_table.LoginTeacherUsername}");
            bind_dir1249 = new BindDirection(this.DataCursorActivity280,binding_getter1285,binding_setter1249,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity268.InDirections.Add(bind_dir1249);
            VTDPropertyInfoBase pi2535 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='timestamps'][1]");
            VTDBaseGetter binding_getter1286 = new VTDXPathGetter(pi2535,XmlTypeCode.String);
            binding_getter1286 = new XPathGetterDecorator(binding_getter1286,"{Array0}",1);
            VTDPropertyInfoBase pi2536 = new VTDPropertyInfoBase("SearchReplaceString[1].Value");
            VTDBaseSetter binding_setter1250 = new VTDObjectSetter(pi2536);
            binding_setter1250 = new StringFormaterDecorator(binding_setter1250,"{Step.OutputProperties.DbFetchData263.ResultTable.Row[1].timestamps}");
            bind_dir1250 = new BindDirection(_flow.DbFetchData263,binding_getter1286,binding_setter1250,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity268.InDirections.Add(bind_dir1250);
            VTDPropertyInfoBase pi2537 = new VTDPropertyInfoBase("LoginStudentUsername");
            VTDBaseGetter binding_getter1287 = new VTDObjectGetter(pi2537);
            VTDPropertyInfoBase pi2538 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1251 = new VTDObjectSetter(pi2538);
            binding_setter1251 = new StringFormaterDecorator(binding_setter1251,"{DataSource.tb_global_table.LoginStudentUsername}");
            bind_dir1251 = new BindDirection(this.DataCursorActivity280,binding_getter1287,binding_setter1251,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity268.InDirections.Add(bind_dir1251);
            _flow.HTTPActivity73.TextBody = @"{Step.OutputProperties.ReplaceStringActivity268.Result}&chatID={DataSource.tb_global_table.LoginStudentUsername}@365ime.com&xsid={Step.OutputProperties.DbFetchData256.ResultTable.Row[1].ResponseXsid}";
            _flow.HTTPActivity73.TextXmlBody = @"";
            _flow.HTTPActivity73.FileBody = @"";
            _flow.HTTPActivity73.PostBody = @"";
            _flow.HTTPActivity73.Url = @"{DataSource.tb_global_table.msgHost}{DataSource.tb_global_table.SendHttpMessage}";
            _flow.HTTPActivity73.HttpMethod = @"POST";
            _flow.HTTPActivity73.HttpVersion = @"1.1";
            _flow.HTTPActivity73.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity73.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity73.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity73.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity73.Comment = @"";
            _flow.HTTPActivity73.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity73.RequestBodyType = @"Text";
            _flow.HTTPActivity73.ResponseType = @"Text";
            _flow.HTTPActivity73.Name = @"调用调用/Msg/SendHttpMessage";
            _flow.HTTPActivity73.Proxy.Server = @"";
            _flow.HTTPActivity73.Proxy.Username = @"";
            _flow.HTTPActivity73.Proxy.Password = @"";
            _flow.HTTPActivity73.Authentication.Username = @"";
            _flow.HTTPActivity73.Authentication.Password = @"";
            _flow.HTTPActivity73.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity73.Timeout = (int)100000;
            _flow.HTTPActivity73.ClientCertificate.Password = @"";
            _flow.HTTPActivity73.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity73.UseClientCertificate = false;
            _flow.HTTPActivity73.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity73.AllowRedirections = true;
            _flow.HTTPActivity73.ReuseCookies = false;
            _flow.HTTPActivity73.ExpectServerError = false;
            XmlDocument HTTPActivity73_XMLBody_Document = new XmlDocument();
            HTTPActivity73_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity73_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity73.XMLBody = HTTPActivity73_XMLBody_Document;
            XmlDocument HTTPActivity73_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity73_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity73_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity73.RequestMultipartInfoXml = HTTPActivity73_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity73.Multipart=false;
            VTDPropertyInfoBase pi2539 = new VTDPropertyInfoBase("msgHost");
            VTDBaseGetter binding_getter1288 = new VTDObjectGetter(pi2539);
            VTDPropertyInfoBase pi2540 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1252 = new VTDObjectSetter(pi2540);
            binding_setter1252 = new StringFormaterDecorator(binding_setter1252,"{DataSource.tb_global_table.msgHost}");
            bind_dir1252 = new BindDirection(this.DataCursorActivity280,binding_getter1288,binding_setter1252,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1252);
            VTDPropertyInfoBase pi2541 = new VTDPropertyInfoBase("SendHttpMessage");
            VTDBaseGetter binding_getter1289 = new VTDObjectGetter(pi2541);
            VTDPropertyInfoBase pi2542 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1253 = new VTDObjectSetter(pi2542);
            binding_setter1253 = new StringFormaterDecorator(binding_setter1253,"{DataSource.tb_global_table.SendHttpMessage}");
            bind_dir1253 = new BindDirection(this.DataCursorActivity280,binding_getter1289,binding_setter1253,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1253);
            VTDPropertyInfoBase pi2543 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1290 = new VTDObjectGetter(pi2543);
            VTDPropertyInfoBase pi2544 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1254 = new VTDObjectSetter(pi2544);
            binding_setter1254 = new StringFormaterDecorator(binding_setter1254,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1254 = new BindDirection(this.DataCursorActivity280,binding_getter1290,binding_setter1254,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1254);
            VTDPropertyInfoBase pi2545 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1291 = new VTDObjectGetter(pi2545);
            VTDPropertyInfoBase pi2546 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1255 = new VTDObjectSetter(pi2546);
            binding_setter1255 = new StringFormaterDecorator(binding_setter1255,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1255 = new BindDirection(this.DataCursorActivity280,binding_getter1291,binding_setter1255,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1255);
            VTDPropertyInfoBase pi2547 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1292 = new VTDObjectGetter(pi2547);
            VTDPropertyInfoBase pi2548 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1256 = new VTDObjectSetter(pi2548);
            binding_setter1256 = new StringFormaterDecorator(binding_setter1256,"{Step.OutputProperties.ReplaceStringActivity268.Result}");
            bind_dir1256 = new BindDirection(_flow.ReplaceStringActivity268,binding_getter1292,binding_setter1256,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1256);
            VTDPropertyInfoBase pi2549 = new VTDPropertyInfoBase("LoginStudentUsername");
            VTDBaseGetter binding_getter1293 = new VTDObjectGetter(pi2549);
            VTDPropertyInfoBase pi2550 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1257 = new VTDObjectSetter(pi2550);
            binding_setter1257 = new StringFormaterDecorator(binding_setter1257,"{DataSource.tb_global_table.LoginStudentUsername}");
            bind_dir1257 = new BindDirection(this.DataCursorActivity280,binding_getter1293,binding_setter1257,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1257);
            VTDPropertyInfoBase pi2551 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1294 = new VTDXPathGetter(pi2551,XmlTypeCode.String);
            binding_getter1294 = new XPathGetterDecorator(binding_getter1294,"{Array0}",1);
            VTDPropertyInfoBase pi2552 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1258 = new VTDObjectSetter(pi2552);
            binding_setter1258 = new StringFormaterDecorator(binding_setter1258,"{Step.OutputProperties.DbFetchData256.ResultTable.Row[1].ResponseXsid}");
            bind_dir1258 = new BindDirection(_flow.DbFetchData256,binding_getter1294,binding_setter1258,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1258);
            XmlDocument HTTPActivity73_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity73_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity73_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity73.ExpectedResponseXmlBody = HTTPActivity73_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity73_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity73_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity73_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity73.ExpectedResponseJsonBody = HTTPActivity73_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity73_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity73_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity73_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity73.ExpectedOutputProperties = HTTPActivity73_ExpectedOutputProperties_Document;
            _flow.DbFetchData77.QueryString = @"update tb_result_table set ResponseJson = '{Step.OutputProperties.HTTPActivity73.ResponseBody}' where InterfaceName = '/Msg/SendHttpMessage'";
            _flow.DbFetchData77.Timeout = (int)30;
            _flow.DbFetchData77.Comment = @"";
            _flow.DbFetchData77.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData77.Name = @"将接口返回的Json更新至tb_result_table";
            VTDPropertyInfoBase pi2553 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1295 = new VTDObjectGetter(pi2553);
            VTDPropertyInfoBase pi2554 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1259 = new VTDObjectSetter(pi2554);
            binding_setter1259 = new StringFormaterDecorator(binding_setter1259,"{Step.OutputProperties.HTTPActivity73.ResponseBody}");
            bind_dir1259 = new BindDirection(_flow.HTTPActivity73,binding_getter1295,binding_setter1259,BindTargetType.ToInProperty);
            _flow.DbFetchData77.InDirections.Add(bind_dir1259);
            VTDPropertyInfoBase pi2555 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1296 = new VTDObjectGetter(pi2555);
            VTDPropertyInfoBase pi2556 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1260 = new VTDObjectSetter(pi2556);
            bind_dir1260 = new BindDirection(_flow.DbOpenConnection39,binding_getter1296,binding_setter1260,BindTargetType.ToInProperty);
            _flow.DbFetchData77.InDirections.Add(bind_dir1260);
            XmlDocument DbFetchData77_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData77_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData77_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData77.ExpectedOutputProperties = DbFetchData77_ExpectedOutputProperties_Document;
            this.DataCursorActivity281.Comment = @"";
            this.DataCursorActivity281.IconPath = @"";
            VTDPropertyInfoBase pi2557 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1297 = new VTDObjectGetter(pi2557);
            VTDPropertyInfoBase pi2558 = new VTDPropertyInfoBase("InTable");
            VTDBaseSetter binding_setter1261 = new VTDObjectSetter(pi2558);
            binding_setter1261 = new StringFormaterDecorator(binding_setter1261,"{Step.DataFetchActivity276.OutTable}");
            bind_dir1261 = new BindDirection(_flow.DataFetchActivity276,binding_getter1297,binding_setter1261,BindTargetType.ToInProperty);
            this.DataCursorActivity281.InDirections.Add(bind_dir1261);
            this.DataCursorActivity281_Policy.StartPosition = CursorStartPosition.FirstRecord;
            this.DataCursorActivity281_Policy.StartAtSpecificRow = 1;
            this.DataCursorActivity281_Policy.StartCondition.ColumnName = "";
            this.DataCursorActivity281_Policy.StartCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity281_Policy.StartCondition.Value = "";
            this.DataCursorActivity281_Policy.EndPosition = CursorEndPosition.LastRecord;
            this.DataCursorActivity281_Policy.EndAtSpecificRow = 1;
            this.DataCursorActivity281_Policy.EndCondition.ColumnName = "";
            this.DataCursorActivity281_Policy.EndCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity281_Policy.EndCondition.Value = "";
            this.DataCursorActivity281_Policy.StepType = CursorStepType.Forward;
            this.DataCursorActivity281_Policy.StepSize = 1;
            this.DataCursorActivity281_Policy.ActionAfterLastRecord = CursorActionAfterLastRecord.Wraparound;
            this.DataCursorActivity281.Policy = this.DataCursorActivity281_Policy;
            this.DataCursorActivity281.ReportStepData = false;
            _flow.Loop56.BeforeExecuteStepEvent += this.DataCursorActivity281.ResetCursor;
            _flow.Sequence275.Comment = @"";
            _flow.Sequence275.IconPath = @"";
            _flow.Sequence275.Name = @"序列275";
            _flow.Sequence275.Activities.Add (_flow.DbFetchData57);
            _flow.Sequence275.Activities.Add (_flow.ReplaceStringActivity271);
            _flow.Sequence275.Activities.Add (_flow.ReplaceStringActivity272);
            _flow.Sequence275.Activities.Add (_flow.ReplaceStringActivity273);
            _flow.Sequence275.Activities.Add (_flow.CallQTPTest259);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData260);
            _flow.Sequence275.Activities.Add (_flow.ReplaceStringActivity261);
            _flow.Sequence275.Activities.Add (_flow.ReplaceStringActivity267);
            _flow.Sequence275.Activities.Add (_flow.ReplaceStringActivity266);
            _flow.Sequence275.Activities.Add (_flow.HTTPActivity59);
            _flow.Sequence275.Activities.Add (_flow.StringToJsonActivity60);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData61);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData62);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData117);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData63);
            _flow.Sequence275.Activities.Add (_flow.IfElse64);
            _flow.DbFetchData57.QueryString = @"select xsid,chatID,message_content,message_to,message_time,message_from,message_messageID,message_messageType,message_type,thumbnailurl,url,link,image,duration,title,name,size,format from tb_sendhttpmessage_verification where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData57.Timeout = (int)30;
            _flow.DbFetchData57.Comment = @"";
            _flow.DbFetchData57.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData57.Name = @"查询tb_sendhttpmessage_verification表中字段信息";
            VTDPropertyInfoBase pi2559 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1298 = new VTDObjectGetter(pi2559);
            VTDPropertyInfoBase pi2560 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1262 = new VTDObjectSetter(pi2560);
            binding_setter1262 = new StringFormaterDecorator(binding_setter1262,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1262 = new BindDirection(_flow.Loop56,binding_getter1298,binding_setter1262,BindTargetType.ToInProperty);
            _flow.DbFetchData57.InDirections.Add(bind_dir1262);
            VTDPropertyInfoBase pi2561 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1299 = new VTDObjectGetter(pi2561);
            VTDPropertyInfoBase pi2562 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1263 = new VTDObjectSetter(pi2562);
            bind_dir1263 = new BindDirection(_flow.DbOpenConnection39,binding_getter1299,binding_setter1263,BindTargetType.ToInProperty);
            _flow.DbFetchData57.InDirections.Add(bind_dir1263);
            XmlDocument DbFetchData57_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData57_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData57_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><xsid /><chatID /><message_content /><message_to /><message_time /><message_from /><message_messageID /><message_messageType /><message_type /><thumbnailurl /><url /><link /><image /><duration /><title /><name /><size /><format /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData57.ExpectedOutputProperties = DbFetchData57_ExpectedOutputProperties_Document;
            _flow.ReplaceStringActivity271.SourceString = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].message_from}";
            _flow.ReplaceStringActivity271.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity271.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity271.SearchReplaceString[0].Key = @"77401169";
            _flow.ReplaceStringActivity271.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData269.ResultTable.Row[1].LoginTeacherUsername}";
            _flow.ReplaceStringActivity271.CaseSensitive = true;
            _flow.ReplaceStringActivity271.Comment = @"";
            _flow.ReplaceStringActivity271.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity271.Name = @"将Myjid更新至最新";
            VTDPropertyInfoBase pi2563 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='message_from'][1]");
            VTDBaseGetter binding_getter1300 = new VTDXPathGetter(pi2563,XmlTypeCode.String);
            binding_getter1300 = new XPathGetterDecorator(binding_getter1300,"{Array0}",1);
            VTDPropertyInfoBase pi2564 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1264 = new VTDObjectSetter(pi2564);
            binding_setter1264 = new StringFormaterDecorator(binding_setter1264,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].message_from}");
            bind_dir1264 = new BindDirection(_flow.DbFetchData57,binding_getter1300,binding_setter1264,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity271.InDirections.Add(bind_dir1264);
            VTDPropertyInfoBase pi2565 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='LoginTeacherUsername'][1]");
            VTDBaseGetter binding_getter1301 = new VTDXPathGetter(pi2565,XmlTypeCode.String);
            binding_getter1301 = new XPathGetterDecorator(binding_getter1301,"{Array0}",1);
            VTDPropertyInfoBase pi2566 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1265 = new VTDObjectSetter(pi2566);
            binding_setter1265 = new StringFormaterDecorator(binding_setter1265,"{Step.OutputProperties.DbFetchData269.ResultTable.Row[1].LoginTeacherUsername}");
            bind_dir1265 = new BindDirection(_flow.DbFetchData269,binding_getter1301,binding_setter1265,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity271.InDirections.Add(bind_dir1265);
            _flow.ReplaceStringActivity272.SourceString = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].message_to}";
            _flow.ReplaceStringActivity272.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity272.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity272.SearchReplaceString[0].Key = @"77401170";
            _flow.ReplaceStringActivity272.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData270.ResultTable.Row[1].LoginStudentUsername}";
            _flow.ReplaceStringActivity272.CaseSensitive = true;
            _flow.ReplaceStringActivity272.Comment = @"";
            _flow.ReplaceStringActivity272.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity272.Name = @"将tojid更新至最新";
            VTDPropertyInfoBase pi2567 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='message_to'][1]");
            VTDBaseGetter binding_getter1302 = new VTDXPathGetter(pi2567,XmlTypeCode.String);
            binding_getter1302 = new XPathGetterDecorator(binding_getter1302,"{Array0}",1);
            VTDPropertyInfoBase pi2568 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1266 = new VTDObjectSetter(pi2568);
            binding_setter1266 = new StringFormaterDecorator(binding_setter1266,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].message_to}");
            bind_dir1266 = new BindDirection(_flow.DbFetchData57,binding_getter1302,binding_setter1266,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity272.InDirections.Add(bind_dir1266);
            VTDPropertyInfoBase pi2569 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='LoginStudentUsername'][1]");
            VTDBaseGetter binding_getter1303 = new VTDXPathGetter(pi2569,XmlTypeCode.String);
            binding_getter1303 = new XPathGetterDecorator(binding_getter1303,"{Array0}",1);
            VTDPropertyInfoBase pi2570 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1267 = new VTDObjectSetter(pi2570);
            binding_setter1267 = new StringFormaterDecorator(binding_setter1267,"{Step.OutputProperties.DbFetchData270.ResultTable.Row[1].LoginStudentUsername}");
            bind_dir1267 = new BindDirection(_flow.DbFetchData270,binding_getter1303,binding_setter1267,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity272.InDirections.Add(bind_dir1267);
            _flow.ReplaceStringActivity273.SourceString = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].chatID}";
            _flow.ReplaceStringActivity273.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity273.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity273.SearchReplaceString[0].Key = @"77401170";
            _flow.ReplaceStringActivity273.SearchReplaceString[0].Value = @"{Step.OutputProperties.ReplaceStringActivity272.Result}";
            _flow.ReplaceStringActivity273.CaseSensitive = true;
            _flow.ReplaceStringActivity273.Comment = @"";
            _flow.ReplaceStringActivity273.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity273.Name = @"将chatID更新至最新";
            VTDPropertyInfoBase pi2571 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='chatID'][1]");
            VTDBaseGetter binding_getter1304 = new VTDXPathGetter(pi2571,XmlTypeCode.String);
            binding_getter1304 = new XPathGetterDecorator(binding_getter1304,"{Array0}",1);
            VTDPropertyInfoBase pi2572 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1268 = new VTDObjectSetter(pi2572);
            binding_setter1268 = new StringFormaterDecorator(binding_setter1268,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].chatID}");
            bind_dir1268 = new BindDirection(_flow.DbFetchData57,binding_getter1304,binding_setter1268,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity273.InDirections.Add(bind_dir1268);
            VTDPropertyInfoBase pi2573 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1305 = new VTDObjectGetter(pi2573);
            VTDPropertyInfoBase pi2574 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1269 = new VTDObjectSetter(pi2574);
            binding_setter1269 = new StringFormaterDecorator(binding_setter1269,"{Step.OutputProperties.ReplaceStringActivity272.Result}");
            bind_dir1269 = new BindDirection(_flow.ReplaceStringActivity272,binding_getter1305,binding_setter1269,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity273.InDirections.Add(bind_dir1269);
            _flow.CallQTPTest259.Comment = @"";
            _flow.CallQTPTest259.IconPath = @"AddIns\ServiceTest\UFT\toolbox_qtp.png";
            _flow.CallQTPTest259.Name = @"Encryption.timestamps";
            _flow.CallQTPTest259.ScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest259.ScriptPath}")) ? @"..\Encryption" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest259.ScriptPath}");
            _flow.CallQTPTest259.ActionName = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest259.ActionName}")) ? @"timestamps" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest259.ActionName}");
            _flow.CallQTPTest259.Description = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest259.Description}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest259.Description}");
            _flow.CallQTPTest259.IsActionSelected = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest259.IsActionSelected}")) ? @"True" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest259.IsActionSelected}");
            _flow.CallQTPTest259.ResultLocation = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest259.ResultLocation}")) ? @"RunQTPReport\" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest259.ResultLocation}");
            _flow.CallQTPTest259.QCScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest259.QCScriptPath}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest259.QCScriptPath}");
            _flow.DbFetchData260.QueryString = @"select timestamps from tb_global_table where TestCase = 1";
            _flow.DbFetchData260.Timeout = (int)30;
            _flow.DbFetchData260.Comment = @"";
            _flow.DbFetchData260.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData260.Name = @"获取全局表中时间戳";
            VTDPropertyInfoBase pi2575 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1306 = new VTDObjectGetter(pi2575);
            VTDPropertyInfoBase pi2576 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1270 = new VTDObjectSetter(pi2576);
            bind_dir1270 = new BindDirection(_flow.DbOpenConnection39,binding_getter1306,binding_setter1270,BindTargetType.ToInProperty);
            _flow.DbFetchData260.InDirections.Add(bind_dir1270);
            XmlDocument DbFetchData260_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData260_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData260_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><timestamps /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData260.ExpectedOutputProperties = DbFetchData260_ExpectedOutputProperties_Document;
            _flow.ReplaceStringActivity261.SourceString = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].message_time}";
            _flow.ReplaceStringActivity261.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity261.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity261.SearchReplaceString[0].Key = @"1439108449";
            _flow.ReplaceStringActivity261.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData260.ResultTable.Row[1].timestamps}";
            _flow.ReplaceStringActivity261.CaseSensitive = true;
            _flow.ReplaceStringActivity261.Comment = @"";
            _flow.ReplaceStringActivity261.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity261.Name = @"将时间戳更新至最新";
            VTDPropertyInfoBase pi2577 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='message_time'][1]");
            VTDBaseGetter binding_getter1307 = new VTDXPathGetter(pi2577,XmlTypeCode.String);
            binding_getter1307 = new XPathGetterDecorator(binding_getter1307,"{Array0}",1);
            VTDPropertyInfoBase pi2578 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1271 = new VTDObjectSetter(pi2578);
            binding_setter1271 = new StringFormaterDecorator(binding_setter1271,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].message_time}");
            bind_dir1271 = new BindDirection(_flow.DbFetchData57,binding_getter1307,binding_setter1271,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity261.InDirections.Add(bind_dir1271);
            VTDPropertyInfoBase pi2579 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='timestamps'][1]");
            VTDBaseGetter binding_getter1308 = new VTDXPathGetter(pi2579,XmlTypeCode.String);
            binding_getter1308 = new XPathGetterDecorator(binding_getter1308,"{Array0}",1);
            VTDPropertyInfoBase pi2580 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1272 = new VTDObjectSetter(pi2580);
            binding_setter1272 = new StringFormaterDecorator(binding_setter1272,"{Step.OutputProperties.DbFetchData260.ResultTable.Row[1].timestamps}");
            bind_dir1272 = new BindDirection(_flow.DbFetchData260,binding_getter1308,binding_setter1272,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity261.InDirections.Add(bind_dir1272);
            _flow.ReplaceStringActivity267.SourceString = @"message={""content"":""测试"",""to"":""77401170@365ime.com"",""time"":1439108449,""from"":""77401169@365ime.com"",""messageID"":""{sourceType:0}_77401169_1439108449178"",""messageType"":""text\/markup"",""type"":""chat"",""thumbnailurl"":""http://download.ac-bj-oss.365ime.com/storage/2015-08-11/f67790eff7a55c1a0598e3d1af7c8e6bec1dde97"",""url"":""http://download.ac-bj-oss.365ime.com/storage/2015-08-11/bc87292b5c57359fd3ed9d3a2afb4cf2c60e016a"",""link"":""http://www.baidu.com"",""image"":""http://www.baidu.com/favicon.ico"",""duration"":""12"",""title"":""百度一下"",""name"":""张坤老师2"",""size"":""4"",""format"":""text/plain""}";
            _flow.ReplaceStringActivity267.SearchReplaceString = new Pair<string, string>[16];
            _flow.ReplaceStringActivity267.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity267.SearchReplaceString[0].Key = @"测试";
            _flow.ReplaceStringActivity267.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].message_content}";
            _flow.ReplaceStringActivity267.SearchReplaceString[1] = new Pair<string, string>();
            _flow.ReplaceStringActivity267.SearchReplaceString[1].Key = @"77401170@365ime.com";
            _flow.ReplaceStringActivity267.SearchReplaceString[1].Value = @"{Step.OutputProperties.ReplaceStringActivity272.Result}";
            _flow.ReplaceStringActivity267.SearchReplaceString[2] = new Pair<string, string>();
            _flow.ReplaceStringActivity267.SearchReplaceString[2].Key = @"1439108449";
            _flow.ReplaceStringActivity267.SearchReplaceString[2].Value = @"{Step.OutputProperties.ReplaceStringActivity261.Result}";
            _flow.ReplaceStringActivity267.SearchReplaceString[3] = new Pair<string, string>();
            _flow.ReplaceStringActivity267.SearchReplaceString[3].Key = @"77401169@365ime.com";
            _flow.ReplaceStringActivity267.SearchReplaceString[3].Value = @"{Step.OutputProperties.ReplaceStringActivity271.Result}";
            _flow.ReplaceStringActivity267.SearchReplaceString[4] = new Pair<string, string>();
            _flow.ReplaceStringActivity267.SearchReplaceString[4].Key = @"{sourceType:0}_77401169_1439108449178";
            _flow.ReplaceStringActivity267.SearchReplaceString[4].Value = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].message_messageID}";
            _flow.ReplaceStringActivity267.SearchReplaceString[5] = new Pair<string, string>();
            _flow.ReplaceStringActivity267.SearchReplaceString[5].Key = @"text/markup";
            _flow.ReplaceStringActivity267.SearchReplaceString[5].Value = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].message_type}";
            _flow.ReplaceStringActivity267.SearchReplaceString[6] = new Pair<string, string>();
            _flow.ReplaceStringActivity267.SearchReplaceString[6].Key = @"chat";
            _flow.ReplaceStringActivity267.SearchReplaceString[6].Value = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].message_type}";
            _flow.ReplaceStringActivity267.SearchReplaceString[7] = new Pair<string, string>();
            _flow.ReplaceStringActivity267.SearchReplaceString[7].Key = @"http://download.ac-bj-oss.365ime.com/storage/2015-08-11/f67790eff7a55c1a0598e3d1af7c8e6bec1dde97";
            _flow.ReplaceStringActivity267.SearchReplaceString[7].Value = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].thumbnailurl}";
            _flow.ReplaceStringActivity267.SearchReplaceString[8] = new Pair<string, string>();
            _flow.ReplaceStringActivity267.SearchReplaceString[8].Key = @"http://download.ac-bj-oss.365ime.com/storage/2015-08-11/bc87292b5c57359fd3ed9d3a2afb4cf2c60e016a";
            _flow.ReplaceStringActivity267.SearchReplaceString[8].Value = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].url}";
            _flow.ReplaceStringActivity267.SearchReplaceString[9] = new Pair<string, string>();
            _flow.ReplaceStringActivity267.SearchReplaceString[9].Key = @"http://www.baidu.com";
            _flow.ReplaceStringActivity267.SearchReplaceString[9].Value = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].link}";
            _flow.ReplaceStringActivity267.SearchReplaceString[10] = new Pair<string, string>();
            _flow.ReplaceStringActivity267.SearchReplaceString[10].Key = @"http://www.baidu.com/favicon.ico";
            _flow.ReplaceStringActivity267.SearchReplaceString[10].Value = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].image}";
            _flow.ReplaceStringActivity267.SearchReplaceString[11] = new Pair<string, string>();
            _flow.ReplaceStringActivity267.SearchReplaceString[11].Key = @"12";
            _flow.ReplaceStringActivity267.SearchReplaceString[11].Value = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].duration}";
            _flow.ReplaceStringActivity267.SearchReplaceString[12] = new Pair<string, string>();
            _flow.ReplaceStringActivity267.SearchReplaceString[12].Key = @"百度一下";
            _flow.ReplaceStringActivity267.SearchReplaceString[12].Value = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].title}";
            _flow.ReplaceStringActivity267.SearchReplaceString[13] = new Pair<string, string>();
            _flow.ReplaceStringActivity267.SearchReplaceString[13].Key = @"张坤老师2";
            _flow.ReplaceStringActivity267.SearchReplaceString[13].Value = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].name}";
            _flow.ReplaceStringActivity267.SearchReplaceString[14] = new Pair<string, string>();
            _flow.ReplaceStringActivity267.SearchReplaceString[14].Key = @"4";
            _flow.ReplaceStringActivity267.SearchReplaceString[14].Value = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].size}";
            _flow.ReplaceStringActivity267.SearchReplaceString[15] = new Pair<string, string>();
            _flow.ReplaceStringActivity267.SearchReplaceString[15].Key = @"text/plain";
            _flow.ReplaceStringActivity267.SearchReplaceString[15].Value = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].format}";
            _flow.ReplaceStringActivity267.CaseSensitive = true;
            _flow.ReplaceStringActivity267.Comment = @"";
            _flow.ReplaceStringActivity267.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity267.Name = @"更新本地表中JSON信息";
            VTDPropertyInfoBase pi2581 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='url'][1]");
            VTDBaseGetter binding_getter1309 = new VTDXPathGetter(pi2581,XmlTypeCode.String);
            binding_getter1309 = new XPathGetterDecorator(binding_getter1309,"{Array0}",1);
            VTDPropertyInfoBase pi2582 = new VTDPropertyInfoBase("SearchReplaceString[8].Value");
            VTDBaseSetter binding_setter1273 = new VTDObjectSetter(pi2582);
            binding_setter1273 = new StringFormaterDecorator(binding_setter1273,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].url}");
            bind_dir1273 = new BindDirection(_flow.DbFetchData57,binding_getter1309,binding_setter1273,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity267.InDirections.Add(bind_dir1273);
            VTDPropertyInfoBase pi2583 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='thumbnailurl'][1]");
            VTDBaseGetter binding_getter1310 = new VTDXPathGetter(pi2583,XmlTypeCode.String);
            binding_getter1310 = new XPathGetterDecorator(binding_getter1310,"{Array0}",1);
            VTDPropertyInfoBase pi2584 = new VTDPropertyInfoBase("SearchReplaceString[7].Value");
            VTDBaseSetter binding_setter1274 = new VTDObjectSetter(pi2584);
            binding_setter1274 = new StringFormaterDecorator(binding_setter1274,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].thumbnailurl}");
            bind_dir1274 = new BindDirection(_flow.DbFetchData57,binding_getter1310,binding_setter1274,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity267.InDirections.Add(bind_dir1274);
            VTDPropertyInfoBase pi2585 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='message_type'][1]");
            VTDBaseGetter binding_getter1311 = new VTDXPathGetter(pi2585,XmlTypeCode.String);
            binding_getter1311 = new XPathGetterDecorator(binding_getter1311,"{Array0}",1);
            VTDPropertyInfoBase pi2586 = new VTDPropertyInfoBase("SearchReplaceString[6].Value");
            VTDBaseSetter binding_setter1275 = new VTDObjectSetter(pi2586);
            binding_setter1275 = new StringFormaterDecorator(binding_setter1275,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].message_type}");
            bind_dir1275 = new BindDirection(_flow.DbFetchData57,binding_getter1311,binding_setter1275,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity267.InDirections.Add(bind_dir1275);
            VTDPropertyInfoBase pi2587 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='message_type'][1]");
            VTDBaseGetter binding_getter1312 = new VTDXPathGetter(pi2587,XmlTypeCode.String);
            binding_getter1312 = new XPathGetterDecorator(binding_getter1312,"{Array0}",1);
            VTDPropertyInfoBase pi2588 = new VTDPropertyInfoBase("SearchReplaceString[5].Value");
            VTDBaseSetter binding_setter1276 = new VTDObjectSetter(pi2588);
            binding_setter1276 = new StringFormaterDecorator(binding_setter1276,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].message_type}");
            bind_dir1276 = new BindDirection(_flow.DbFetchData57,binding_getter1312,binding_setter1276,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity267.InDirections.Add(bind_dir1276);
            VTDPropertyInfoBase pi2589 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='message_messageID'][1]");
            VTDBaseGetter binding_getter1313 = new VTDXPathGetter(pi2589,XmlTypeCode.String);
            binding_getter1313 = new XPathGetterDecorator(binding_getter1313,"{Array0}",1);
            VTDPropertyInfoBase pi2590 = new VTDPropertyInfoBase("SearchReplaceString[4].Value");
            VTDBaseSetter binding_setter1277 = new VTDObjectSetter(pi2590);
            binding_setter1277 = new StringFormaterDecorator(binding_setter1277,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].message_messageID}");
            bind_dir1277 = new BindDirection(_flow.DbFetchData57,binding_getter1313,binding_setter1277,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity267.InDirections.Add(bind_dir1277);
            VTDPropertyInfoBase pi2591 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1314 = new VTDObjectGetter(pi2591);
            VTDPropertyInfoBase pi2592 = new VTDPropertyInfoBase("SearchReplaceString[3].Value");
            VTDBaseSetter binding_setter1278 = new VTDObjectSetter(pi2592);
            binding_setter1278 = new StringFormaterDecorator(binding_setter1278,"{Step.OutputProperties.ReplaceStringActivity271.Result}");
            bind_dir1278 = new BindDirection(_flow.ReplaceStringActivity271,binding_getter1314,binding_setter1278,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity267.InDirections.Add(bind_dir1278);
            VTDPropertyInfoBase pi2593 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1315 = new VTDObjectGetter(pi2593);
            VTDPropertyInfoBase pi2594 = new VTDPropertyInfoBase("SearchReplaceString[2].Value");
            VTDBaseSetter binding_setter1279 = new VTDObjectSetter(pi2594);
            binding_setter1279 = new StringFormaterDecorator(binding_setter1279,"{Step.OutputProperties.ReplaceStringActivity261.Result}");
            bind_dir1279 = new BindDirection(_flow.ReplaceStringActivity261,binding_getter1315,binding_setter1279,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity267.InDirections.Add(bind_dir1279);
            VTDPropertyInfoBase pi2595 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1316 = new VTDObjectGetter(pi2595);
            VTDPropertyInfoBase pi2596 = new VTDPropertyInfoBase("SearchReplaceString[1].Value");
            VTDBaseSetter binding_setter1280 = new VTDObjectSetter(pi2596);
            binding_setter1280 = new StringFormaterDecorator(binding_setter1280,"{Step.OutputProperties.ReplaceStringActivity272.Result}");
            bind_dir1280 = new BindDirection(_flow.ReplaceStringActivity272,binding_getter1316,binding_setter1280,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity267.InDirections.Add(bind_dir1280);
            VTDPropertyInfoBase pi2597 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='format'][1]");
            VTDBaseGetter binding_getter1317 = new VTDXPathGetter(pi2597,XmlTypeCode.String);
            binding_getter1317 = new XPathGetterDecorator(binding_getter1317,"{Array0}",1);
            VTDPropertyInfoBase pi2598 = new VTDPropertyInfoBase("SearchReplaceString[15].Value");
            VTDBaseSetter binding_setter1281 = new VTDObjectSetter(pi2598);
            binding_setter1281 = new StringFormaterDecorator(binding_setter1281,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].format}");
            bind_dir1281 = new BindDirection(_flow.DbFetchData57,binding_getter1317,binding_setter1281,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity267.InDirections.Add(bind_dir1281);
            VTDPropertyInfoBase pi2599 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='size'][1]");
            VTDBaseGetter binding_getter1318 = new VTDXPathGetter(pi2599,XmlTypeCode.String);
            binding_getter1318 = new XPathGetterDecorator(binding_getter1318,"{Array0}",1);
            VTDPropertyInfoBase pi2600 = new VTDPropertyInfoBase("SearchReplaceString[14].Value");
            VTDBaseSetter binding_setter1282 = new VTDObjectSetter(pi2600);
            binding_setter1282 = new StringFormaterDecorator(binding_setter1282,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].size}");
            bind_dir1282 = new BindDirection(_flow.DbFetchData57,binding_getter1318,binding_setter1282,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity267.InDirections.Add(bind_dir1282);
            VTDPropertyInfoBase pi2601 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='name'][1]");
            VTDBaseGetter binding_getter1319 = new VTDXPathGetter(pi2601,XmlTypeCode.String);
            binding_getter1319 = new XPathGetterDecorator(binding_getter1319,"{Array0}",1);
            VTDPropertyInfoBase pi2602 = new VTDPropertyInfoBase("SearchReplaceString[13].Value");
            VTDBaseSetter binding_setter1283 = new VTDObjectSetter(pi2602);
            binding_setter1283 = new StringFormaterDecorator(binding_setter1283,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].name}");
            bind_dir1283 = new BindDirection(_flow.DbFetchData57,binding_getter1319,binding_setter1283,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity267.InDirections.Add(bind_dir1283);
            VTDPropertyInfoBase pi2603 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='title'][1]");
            VTDBaseGetter binding_getter1320 = new VTDXPathGetter(pi2603,XmlTypeCode.String);
            binding_getter1320 = new XPathGetterDecorator(binding_getter1320,"{Array0}",1);
            VTDPropertyInfoBase pi2604 = new VTDPropertyInfoBase("SearchReplaceString[12].Value");
            VTDBaseSetter binding_setter1284 = new VTDObjectSetter(pi2604);
            binding_setter1284 = new StringFormaterDecorator(binding_setter1284,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].title}");
            bind_dir1284 = new BindDirection(_flow.DbFetchData57,binding_getter1320,binding_setter1284,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity267.InDirections.Add(bind_dir1284);
            VTDPropertyInfoBase pi2605 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='duration'][1]");
            VTDBaseGetter binding_getter1321 = new VTDXPathGetter(pi2605,XmlTypeCode.String);
            binding_getter1321 = new XPathGetterDecorator(binding_getter1321,"{Array0}",1);
            VTDPropertyInfoBase pi2606 = new VTDPropertyInfoBase("SearchReplaceString[11].Value");
            VTDBaseSetter binding_setter1285 = new VTDObjectSetter(pi2606);
            binding_setter1285 = new StringFormaterDecorator(binding_setter1285,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].duration}");
            bind_dir1285 = new BindDirection(_flow.DbFetchData57,binding_getter1321,binding_setter1285,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity267.InDirections.Add(bind_dir1285);
            VTDPropertyInfoBase pi2607 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='image'][1]");
            VTDBaseGetter binding_getter1322 = new VTDXPathGetter(pi2607,XmlTypeCode.String);
            binding_getter1322 = new XPathGetterDecorator(binding_getter1322,"{Array0}",1);
            VTDPropertyInfoBase pi2608 = new VTDPropertyInfoBase("SearchReplaceString[10].Value");
            VTDBaseSetter binding_setter1286 = new VTDObjectSetter(pi2608);
            binding_setter1286 = new StringFormaterDecorator(binding_setter1286,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].image}");
            bind_dir1286 = new BindDirection(_flow.DbFetchData57,binding_getter1322,binding_setter1286,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity267.InDirections.Add(bind_dir1286);
            VTDPropertyInfoBase pi2609 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='link'][1]");
            VTDBaseGetter binding_getter1323 = new VTDXPathGetter(pi2609,XmlTypeCode.String);
            binding_getter1323 = new XPathGetterDecorator(binding_getter1323,"{Array0}",1);
            VTDPropertyInfoBase pi2610 = new VTDPropertyInfoBase("SearchReplaceString[9].Value");
            VTDBaseSetter binding_setter1287 = new VTDObjectSetter(pi2610);
            binding_setter1287 = new StringFormaterDecorator(binding_setter1287,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].link}");
            bind_dir1287 = new BindDirection(_flow.DbFetchData57,binding_getter1323,binding_setter1287,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity267.InDirections.Add(bind_dir1287);
            VTDPropertyInfoBase pi2611 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='message_content'][1]");
            VTDBaseGetter binding_getter1324 = new VTDXPathGetter(pi2611,XmlTypeCode.String);
            binding_getter1324 = new XPathGetterDecorator(binding_getter1324,"{Array0}",1);
            VTDPropertyInfoBase pi2612 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1288 = new VTDObjectSetter(pi2612);
            binding_setter1288 = new StringFormaterDecorator(binding_setter1288,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].message_content}");
            bind_dir1288 = new BindDirection(_flow.DbFetchData57,binding_getter1324,binding_setter1288,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity267.InDirections.Add(bind_dir1288);
            _flow.ReplaceStringActivity266.SourceString = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].xsid}";
            _flow.ReplaceStringActivity266.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity266.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity266.SearchReplaceString[0].Key = @"x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00";
            _flow.ReplaceStringActivity266.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData256.ResultTable.Row[1].ResponseXsid}";
            _flow.ReplaceStringActivity266.CaseSensitive = true;
            _flow.ReplaceStringActivity266.Comment = @"";
            _flow.ReplaceStringActivity266.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity266.Name = @"将xsid更新至最新";
            VTDPropertyInfoBase pi2613 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='xsid'][1]");
            VTDBaseGetter binding_getter1325 = new VTDXPathGetter(pi2613,XmlTypeCode.String);
            binding_getter1325 = new XPathGetterDecorator(binding_getter1325,"{Array0}",1);
            VTDPropertyInfoBase pi2614 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1289 = new VTDObjectSetter(pi2614);
            binding_setter1289 = new StringFormaterDecorator(binding_setter1289,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].xsid}");
            bind_dir1289 = new BindDirection(_flow.DbFetchData57,binding_getter1325,binding_setter1289,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity266.InDirections.Add(bind_dir1289);
            VTDPropertyInfoBase pi2615 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1326 = new VTDXPathGetter(pi2615,XmlTypeCode.String);
            binding_getter1326 = new XPathGetterDecorator(binding_getter1326,"{Array0}",1);
            VTDPropertyInfoBase pi2616 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1290 = new VTDObjectSetter(pi2616);
            binding_setter1290 = new StringFormaterDecorator(binding_setter1290,"{Step.OutputProperties.DbFetchData256.ResultTable.Row[1].ResponseXsid}");
            bind_dir1290 = new BindDirection(_flow.DbFetchData256,binding_getter1326,binding_setter1290,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity266.InDirections.Add(bind_dir1290);
            _flow.HTTPActivity59.TextBody = @"{Step.OutputProperties.ReplaceStringActivity267.Result}&chatID={Step.OutputProperties.DbFetchData57.ResultTable.Row[1].chatID}&xsid={Step.OutputProperties.ReplaceStringActivity266.Result}";
            _flow.HTTPActivity59.TextXmlBody = @"";
            _flow.HTTPActivity59.FileBody = @"";
            _flow.HTTPActivity59.PostBody = @"";
            _flow.HTTPActivity59.Url = @"{DataSource.tb_global_table.msgHost}{DataSource.tb_global_table.SendHttpMessage}";
            _flow.HTTPActivity59.HttpMethod = @"POST";
            _flow.HTTPActivity59.HttpVersion = @"1.1";
            _flow.HTTPActivity59.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity59.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity59.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity59.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity59.Comment = @"";
            _flow.HTTPActivity59.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity59.RequestBodyType = @"Text";
            _flow.HTTPActivity59.ResponseType = @"Text";
            _flow.HTTPActivity59.Name = @"调用/Msg/SendHttpMessage";
            _flow.HTTPActivity59.Proxy.Server = @"";
            _flow.HTTPActivity59.Proxy.Username = @"";
            _flow.HTTPActivity59.Proxy.Password = @"";
            _flow.HTTPActivity59.Authentication.Username = @"";
            _flow.HTTPActivity59.Authentication.Password = @"";
            _flow.HTTPActivity59.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity59.Timeout = (int)100000;
            _flow.HTTPActivity59.ClientCertificate.Password = @"";
            _flow.HTTPActivity59.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity59.UseClientCertificate = false;
            _flow.HTTPActivity59.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity59.AllowRedirections = true;
            _flow.HTTPActivity59.ReuseCookies = false;
            _flow.HTTPActivity59.ExpectServerError = false;
            XmlDocument HTTPActivity59_XMLBody_Document = new XmlDocument();
            HTTPActivity59_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity59_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity59.XMLBody = HTTPActivity59_XMLBody_Document;
            XmlDocument HTTPActivity59_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity59_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity59_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity59.RequestMultipartInfoXml = HTTPActivity59_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity59.Multipart=false;
            VTDPropertyInfoBase pi2617 = new VTDPropertyInfoBase("msgHost");
            VTDBaseGetter binding_getter1327 = new VTDObjectGetter(pi2617);
            VTDPropertyInfoBase pi2618 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1291 = new VTDObjectSetter(pi2618);
            binding_setter1291 = new StringFormaterDecorator(binding_setter1291,"{DataSource.tb_global_table.msgHost}");
            bind_dir1291 = new BindDirection(this.DataCursorActivity281,binding_getter1327,binding_setter1291,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1291);
            VTDPropertyInfoBase pi2619 = new VTDPropertyInfoBase("SendHttpMessage");
            VTDBaseGetter binding_getter1328 = new VTDObjectGetter(pi2619);
            VTDPropertyInfoBase pi2620 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1292 = new VTDObjectSetter(pi2620);
            binding_setter1292 = new StringFormaterDecorator(binding_setter1292,"{DataSource.tb_global_table.SendHttpMessage}");
            bind_dir1292 = new BindDirection(this.DataCursorActivity281,binding_getter1328,binding_setter1292,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1292);
            VTDPropertyInfoBase pi2621 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1329 = new VTDObjectGetter(pi2621);
            VTDPropertyInfoBase pi2622 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1293 = new VTDObjectSetter(pi2622);
            binding_setter1293 = new StringFormaterDecorator(binding_setter1293,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1293 = new BindDirection(this.DataCursorActivity281,binding_getter1329,binding_setter1293,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1293);
            VTDPropertyInfoBase pi2623 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1330 = new VTDObjectGetter(pi2623);
            VTDPropertyInfoBase pi2624 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1294 = new VTDObjectSetter(pi2624);
            binding_setter1294 = new StringFormaterDecorator(binding_setter1294,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1294 = new BindDirection(this.DataCursorActivity281,binding_getter1330,binding_setter1294,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1294);
            VTDPropertyInfoBase pi2625 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1331 = new VTDObjectGetter(pi2625);
            VTDPropertyInfoBase pi2626 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1295 = new VTDObjectSetter(pi2626);
            binding_setter1295 = new StringFormaterDecorator(binding_setter1295,"{Step.OutputProperties.ReplaceStringActivity267.Result}");
            bind_dir1295 = new BindDirection(_flow.ReplaceStringActivity267,binding_getter1331,binding_setter1295,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1295);
            VTDPropertyInfoBase pi2627 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='chatID'][1]");
            VTDBaseGetter binding_getter1332 = new VTDXPathGetter(pi2627,XmlTypeCode.String);
            binding_getter1332 = new XPathGetterDecorator(binding_getter1332,"{Array0}",1);
            VTDPropertyInfoBase pi2628 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1296 = new VTDObjectSetter(pi2628);
            binding_setter1296 = new StringFormaterDecorator(binding_setter1296,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].chatID}");
            bind_dir1296 = new BindDirection(_flow.DbFetchData57,binding_getter1332,binding_setter1296,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1296);
            VTDPropertyInfoBase pi2629 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1333 = new VTDObjectGetter(pi2629);
            VTDPropertyInfoBase pi2630 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1297 = new VTDObjectSetter(pi2630);
            binding_setter1297 = new StringFormaterDecorator(binding_setter1297,"{Step.OutputProperties.ReplaceStringActivity266.Result}");
            bind_dir1297 = new BindDirection(_flow.ReplaceStringActivity266,binding_getter1333,binding_setter1297,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1297);
            XmlDocument HTTPActivity59_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity59_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity59_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity59.ExpectedResponseXmlBody = HTTPActivity59_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity59_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity59_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity59_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity59.ExpectedResponseJsonBody = HTTPActivity59_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity59_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity59_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity59_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity59.ExpectedOutputProperties = HTTPActivity59_ExpectedOutputProperties_Document;
            _flow.StringToJsonActivity60.InputString = @"{Step.OutputProperties.HTTPActivity59.ResponseBody}";
            _flow.StringToJsonActivity60.Comment = @"";
            _flow.StringToJsonActivity60.IconPath = @"AddIns\ServiceTest\TransformJson\ictb_string_to_json_16.png";
            _flow.StringToJsonActivity60.Name = @"获取返回值转换为JSON";
            VTDPropertyInfoBase pi2631 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1334 = new VTDObjectGetter(pi2631);
            VTDPropertyInfoBase pi2632 = new VTDPropertyInfoBase("InputString");
            VTDBaseSetter binding_setter1298 = new VTDObjectSetter(pi2632);
            binding_setter1298 = new StringFormaterDecorator(binding_setter1298,"{Step.OutputProperties.HTTPActivity59.ResponseBody}");
            bind_dir1298 = new BindDirection(_flow.HTTPActivity59,binding_getter1334,binding_setter1298,BindTargetType.ToInProperty);
            _flow.StringToJsonActivity60.InDirections.Add(bind_dir1298);
            _flow.DbFetchData61.QueryString = @"UPDATE tb_sendhttpmessage_verification set InterfaceResponse = '{Step.OutputProperties.HTTPActivity59.ResponseBody}' where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData61.Timeout = (int)30;
            _flow.DbFetchData61.Comment = @"";
            _flow.DbFetchData61.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData61.Name = @"将获取到的JSON插入到sql中";
            VTDPropertyInfoBase pi2633 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1335 = new VTDObjectGetter(pi2633);
            VTDPropertyInfoBase pi2634 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1299 = new VTDObjectSetter(pi2634);
            binding_setter1299 = new StringFormaterDecorator(binding_setter1299,"{Step.OutputProperties.HTTPActivity59.ResponseBody}");
            bind_dir1299 = new BindDirection(_flow.HTTPActivity59,binding_getter1335,binding_setter1299,BindTargetType.ToInProperty);
            _flow.DbFetchData61.InDirections.Add(bind_dir1299);
            VTDPropertyInfoBase pi2635 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1336 = new VTDObjectGetter(pi2635);
            VTDPropertyInfoBase pi2636 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1300 = new VTDObjectSetter(pi2636);
            binding_setter1300 = new StringFormaterDecorator(binding_setter1300,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1300 = new BindDirection(_flow.Loop56,binding_getter1336,binding_setter1300,BindTargetType.ToInProperty);
            _flow.DbFetchData61.InDirections.Add(bind_dir1300);
            VTDPropertyInfoBase pi2637 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1337 = new VTDObjectGetter(pi2637);
            VTDPropertyInfoBase pi2638 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1301 = new VTDObjectSetter(pi2638);
            bind_dir1301 = new BindDirection(_flow.DbOpenConnection39,binding_getter1337,binding_setter1301,BindTargetType.ToInProperty);
            _flow.DbFetchData61.InDirections.Add(bind_dir1301);
            XmlDocument DbFetchData61_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData61_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData61_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData61.ExpectedOutputProperties = DbFetchData61_ExpectedOutputProperties_Document;
            _flow.DbFetchData62.QueryString = @"update tb_sendhttpmessage_verification set OutputValue = 'errorCode={Step.JsonContent.StringToJsonActivity60.errorCode}' where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData62.Timeout = (int)30;
            _flow.DbFetchData62.Comment = @"";
            _flow.DbFetchData62.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData62.Name = @"将errorcode更新到sql中";
            VTDPropertyInfoBase pi2639 = new VTDPropertyInfoBase("JsonContent","/*[local-name(.)='Object'][1]/*[local-name(.)='errorCode'][1]");
            VTDBaseGetter binding_getter1338 = new VTDJsonGetter(pi2639);
            VTDPropertyInfoBase pi2640 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1302 = new VTDObjectSetter(pi2640);
            binding_setter1302 = new StringFormaterDecorator(binding_setter1302,"{Step.JsonContent.StringToJsonActivity60.errorCode}");
            bind_dir1302 = new BindDirection(_flow.StringToJsonActivity60,binding_getter1338,binding_setter1302,BindTargetType.ToInProperty);
            _flow.DbFetchData62.InDirections.Add(bind_dir1302);
            VTDPropertyInfoBase pi2641 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1339 = new VTDObjectGetter(pi2641);
            VTDPropertyInfoBase pi2642 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1303 = new VTDObjectSetter(pi2642);
            binding_setter1303 = new StringFormaterDecorator(binding_setter1303,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1303 = new BindDirection(_flow.Loop56,binding_getter1339,binding_setter1303,BindTargetType.ToInProperty);
            _flow.DbFetchData62.InDirections.Add(bind_dir1303);
            VTDPropertyInfoBase pi2643 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1340 = new VTDObjectGetter(pi2643);
            VTDPropertyInfoBase pi2644 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1304 = new VTDObjectSetter(pi2644);
            bind_dir1304 = new BindDirection(_flow.DbOpenConnection39,binding_getter1340,binding_setter1304,BindTargetType.ToInProperty);
            _flow.DbFetchData62.InDirections.Add(bind_dir1304);
            XmlDocument DbFetchData62_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData62_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData62_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData62.ExpectedOutputProperties = DbFetchData62_ExpectedOutputProperties_Document;
            _flow.DbFetchData117.QueryString = @"select OutputValue from tb_sendhttpmessage_verification where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData117.Timeout = (int)30;
            _flow.DbFetchData117.Comment = @"";
            _flow.DbFetchData117.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData117.Name = @"获取当前Case的实际值";
            VTDPropertyInfoBase pi2645 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1341 = new VTDObjectGetter(pi2645);
            VTDPropertyInfoBase pi2646 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1305 = new VTDObjectSetter(pi2646);
            binding_setter1305 = new StringFormaterDecorator(binding_setter1305,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1305 = new BindDirection(_flow.Loop56,binding_getter1341,binding_setter1305,BindTargetType.ToInProperty);
            _flow.DbFetchData117.InDirections.Add(bind_dir1305);
            VTDPropertyInfoBase pi2647 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1342 = new VTDObjectGetter(pi2647);
            VTDPropertyInfoBase pi2648 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1306 = new VTDObjectSetter(pi2648);
            bind_dir1306 = new BindDirection(_flow.DbOpenConnection39,binding_getter1342,binding_setter1306,BindTargetType.ToInProperty);
            _flow.DbFetchData117.InDirections.Add(bind_dir1306);
            XmlDocument DbFetchData117_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData117_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData117_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><OutputValue /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData117.ExpectedOutputProperties = DbFetchData117_ExpectedOutputProperties_Document;
            _flow.DbFetchData63.QueryString = @"select ExpectationValue from tb_sendhttpmessage_verification where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData63.Timeout = (int)30;
            _flow.DbFetchData63.Comment = @"";
            _flow.DbFetchData63.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData63.Name = @"获取当前Case的期待值";
            VTDPropertyInfoBase pi2649 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1343 = new VTDObjectGetter(pi2649);
            VTDPropertyInfoBase pi2650 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1307 = new VTDObjectSetter(pi2650);
            binding_setter1307 = new StringFormaterDecorator(binding_setter1307,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1307 = new BindDirection(_flow.Loop56,binding_getter1343,binding_setter1307,BindTargetType.ToInProperty);
            _flow.DbFetchData63.InDirections.Add(bind_dir1307);
            VTDPropertyInfoBase pi2651 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1344 = new VTDObjectGetter(pi2651);
            VTDPropertyInfoBase pi2652 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1308 = new VTDObjectSetter(pi2652);
            bind_dir1308 = new BindDirection(_flow.DbOpenConnection39,binding_getter1344,binding_setter1308,BindTargetType.ToInProperty);
            _flow.DbFetchData63.InDirections.Add(bind_dir1308);
            XmlDocument DbFetchData63_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData63_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData63_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><ExpectationValue /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData63.ExpectedOutputProperties = DbFetchData63_ExpectedOutputProperties_Document;
            _flow.IfElse64.ConditionAsString = @"{Step.OutputProperties.DbFetchData117.ResultTable.Row[1].OutputValue} Equal {Step.OutputProperties.DbFetchData63.ResultTable.Row[1].ExpectationValue}";
            _flow.IfElse64.Comment = @"";
            _flow.IfElse64.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_if_else.png";
            _flow.IfElse64.Name = @"填写Result";
            _flow.IfElse64.Activities.Add (_flow.IfElseBranch65);
            _flow.IfElse64.Activities.Add (_flow.IfElseBranch66);
            _flow.IfElseBranch65.Condition += delegate(object sender,EventArgs e)
            {
            	try
            	{
            VTDPropertyInfoBase pi2653 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='OutputValue'][1]");
            VTDBaseGetter binding_getter1345 = new VTDXPathGetter(pi2653,XmlTypeCode.String);
            binding_getter1345 = new XPathGetterDecorator(binding_getter1345,"{Array0}",1);
            		System.String expr00 = (System.String)HP.ST.Fwk.RunTimeFWK.Utilities.Utils.ConvertValue(_flow.DbFetchData117.GetParam(binding_getter1345),typeof(System.String));
            		var result0 = expr00;
            VTDPropertyInfoBase pi2654 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ExpectationValue'][1]");
            VTDBaseGetter binding_getter1346 = new VTDXPathGetter(pi2654,XmlTypeCode.String);
            binding_getter1346 = new XPathGetterDecorator(binding_getter1346,"{Array0}",1);
            		System.String expr10 = (System.String)HP.ST.Fwk.RunTimeFWK.Utilities.Utils.ConvertValue(_flow.DbFetchData63.GetParam(binding_getter1346),typeof(System.String));
            		var result1 = expr10;
            		return (result0 == result1);
            	}
            	catch(Exception exp)
            	{
            		if (exp is System.InvalidCastException)
            		{
            			throw;
            		}
            		else
            		{
            			return false;
            		}
            	};
            };
            _flow.IfElseBranch65.Comment = @"";
            _flow.IfElseBranch65.IconPath = @"";
            _flow.IfElseBranch65.Name = @"是";
            _flow.IfElseBranch65.Activities.Add (_flow.DbFetchData67);
            _flow.IfElseBranch66.Condition += delegate(object sender,EventArgs e)
            {
            return true;
            };
            _flow.IfElseBranch66.Comment = @"";
            _flow.IfElseBranch66.IconPath = @"";
            _flow.IfElseBranch66.Name = @"否";
            _flow.IfElseBranch66.Activities.Add (_flow.DbFetchData68);
            _flow.DbFetchData67.QueryString = @"update tb_sendhttpmessage_verification set Result = 'True' where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData67.Timeout = (int)30;
            _flow.DbFetchData67.Comment = @"";
            _flow.DbFetchData67.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData67.Name = @"在Result字段插入True";
            VTDPropertyInfoBase pi2655 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1347 = new VTDObjectGetter(pi2655);
            VTDPropertyInfoBase pi2656 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1309 = new VTDObjectSetter(pi2656);
            binding_setter1309 = new StringFormaterDecorator(binding_setter1309,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1309 = new BindDirection(_flow.Loop56,binding_getter1347,binding_setter1309,BindTargetType.ToInProperty);
            _flow.DbFetchData67.InDirections.Add(bind_dir1309);
            VTDPropertyInfoBase pi2657 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1348 = new VTDObjectGetter(pi2657);
            VTDPropertyInfoBase pi2658 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1310 = new VTDObjectSetter(pi2658);
            bind_dir1310 = new BindDirection(_flow.DbOpenConnection39,binding_getter1348,binding_setter1310,BindTargetType.ToInProperty);
            _flow.DbFetchData67.InDirections.Add(bind_dir1310);
            XmlDocument DbFetchData67_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData67_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData67_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData67.ExpectedOutputProperties = DbFetchData67_ExpectedOutputProperties_Document;
            _flow.DbFetchData68.QueryString = @"update tb_sendhttpmessage_verification set Result = 'False' where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData68.Timeout = (int)30;
            _flow.DbFetchData68.Comment = @"";
            _flow.DbFetchData68.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData68.Name = @"在Result字段插入False";
            VTDPropertyInfoBase pi2659 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1349 = new VTDObjectGetter(pi2659);
            VTDPropertyInfoBase pi2660 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1311 = new VTDObjectSetter(pi2660);
            binding_setter1311 = new StringFormaterDecorator(binding_setter1311,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1311 = new BindDirection(_flow.Loop56,binding_getter1349,binding_setter1311,BindTargetType.ToInProperty);
            _flow.DbFetchData68.InDirections.Add(bind_dir1311);
            VTDPropertyInfoBase pi2661 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1350 = new VTDObjectGetter(pi2661);
            VTDPropertyInfoBase pi2662 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1312 = new VTDObjectSetter(pi2662);
            bind_dir1312 = new BindDirection(_flow.DbOpenConnection39,binding_getter1350,binding_setter1312,BindTargetType.ToInProperty);
            _flow.DbFetchData68.InDirections.Add(bind_dir1312);
            XmlDocument DbFetchData68_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData68_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData68_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData68.ExpectedOutputProperties = DbFetchData68_ExpectedOutputProperties_Document;
            
        }
        
        internal void InitializeEncryptionManagerValues()
        {
        
        }
        	
    	bool useReport = true;
    
    	protected override STExecutionResult ExecuteStep()
        {
            return base.ExecuteStep();
        }
    
        public void Start()
        {
    	    try
    		{
    		  Workflow_Executing();
    		  this.ExecuteStep();
    		}
    		finally
    		{
    		  WorkFlowScript_Completed();
    		}
        }
    
    	private void InitReport()
    	{
    		if (useReport)
    		{	
    			// Intialize Reporter
    			string reportDBDir = Path.Combine(this._context.ReportDirectory, @"Report");
    			CleanupReport(reportDBDir);        	
    			string reportDBPath = Path.Combine(reportDBDir, "VTDReport.mdb");        	
    			if (reporter == null)
    			{
    				reporter = new Reporter(reportDBPath);
    			}
    			_context.Reporter = reporter;
    		}
    	}
    
        public static void CopyDirectory(string Src, string Dst)
        {
            String[] Files;
    
            if (Dst[Dst.Length - 1] != Path.DirectorySeparatorChar)
                Dst += Path.DirectorySeparatorChar;
            if (!Directory.Exists(Dst)) Directory.CreateDirectory(Dst);
            Files = Directory.GetFileSystemEntries(Src);
            foreach (string Element in Files)
            {
                // Sub directories
                if (Directory.Exists(Element))
                    CopyDirectory(Element, Dst + Path.GetFileName(Element));
                // Files in directory
                else
                    File.Copy(Element, Dst + Path.GetFileName(Element), true);
            }
        }
        
        private void CleanupReport(string reportDBDir)
        {   
    		if (useReport)
    		{             
    			string reportTemplateDir = Path.Combine(ServiceTestRunner.GetInstallPath(),@"bin\ReportResources");                
    			try
    			{
            		CopyDirectory(reportTemplateDir, reportDBDir);
    			}
    			catch //(Exception ex)
    			{
    				//ToDo: LoggingService.Warn("Report Cleanup Error", ex);
    			}
    		}
        }
    
        void Workflow_Executing()
        {   
        	InitReportNode();
                       
        }
    
    	private void InitReportNode()
    	{
    		if (useReport)
    		{	
        		// Init report creator
    			this.reportCreator = new HP.ST.Fwk.ReportCreator.QTPEngine.QTPEngineReportCreator();
    			this.reportLevelInTree = reportCreator.Init(_context.EnvironmentProfile.GetVariableValue("TestName"), _context);
                
    			STActivityBase activity = this;
    			string workflowID = activity.GetHashCode().ToString();
    			ReportNodeCreationData newNodeData =
    			new ReportNodeCreationData(workflowID, workflowID, DateTime.Now);
    			reporter.CreateReportNode(newNodeData);
            
    			ReportInfoData newReportData = new ReportInfoData(workflowID, ReportKeywords.TypeKeywordTag, this.GetType().ToString());
    			reporter.SendReportData(newReportData);
    			newReportData = new ReportInfoData(workflowID, ReportKeywords.NameKeywordTag, this.Name);
    			//TrackData(ReportInfoData.InfoDataTag, newReportData);
    			reporter.SendReportData(newReportData);            
            }
    	}
        
        void WorkFlowScript_Completed()
        {   
    		
    
    		CreateReportFiles();
    					
        	// Write all snapshots to disk
    		this._context.SnapshotManager.WriteSnapshotsToDisk();
    			
    		
    
    		OnExecutionCompleted();
    		
        }
    
    	private void CreateReportFiles()
    	{
    		if (useReport)
    		{	
    			//Dispose reporter inorder to close connection to report DB
           		this._context.Reporter.Dispose();
            	
           		// Run report creator
    			reportCreator.RunOnDBAndCreateFiles();
    		}
    	}
    
        
        void Workflow_Faulting()
        {
    		
    
    		CreateReportFiles();
            // Write all snapshots to disk
    		this._context.SnapshotManager.WriteSnapshotsToDisk();
           
    		OnExecutionCompleted();
        }
    
    	protected override QcSystemVariables GetRuntimeQcVariables(ISTRunTimeContext context)
    	{
    		return new HP.ST.Ext.BasicActivities.RuntimeQcVariables(this._context);
    	}
            
    	protected override TestSystemVariables GetTestSystemVariables(ISTRunTimeContext context)
    	{
    		return new HP.ST.Ext.BasicActivities.RuntimeTestVariables(this._context);
    	}
    
    	private void UpdateTestSettings(ISTRunTimeContext ctx)
        {
    		ctx.PropertyBag["StopTestOnStepFailure"] = true;
    	}
    
    protected override void OnThreadStart()
    {
    
    }
    }
    
    public partial class VuserClass
    {
    	public static string[] CommandLineArguments;
    	public static string[] DotNetResolverPaths;
    	
    	
    	public static void InitJavaEnv(string classPath, string additionalVMargs)
    	{
    		JVMLoader.LoadJVM(classPath, additionalVMargs);
    	}
    	
    	
    		
        public VuserClass()
        {
    				
    		AssemblyResolver.AddSTPathsToResolutionPaths();
    		AssemblyResolver.AttachToAppdomain();
        }
    
        private void AddAssemblyResolver()
        {
    		AssemblyResolver.AddTestPathToResolutionPaths(GetTestPath());
    		AssemblyResolver.AddPathsForAssemblyResolution(DotNetResolverPaths);
        }
    	
        public int STAction()
        {	
            AddAssemblyResolver();
            STRunTimeContext ctx = new STRunTimeContext(Directory.GetParent(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)).FullName, string.Empty);
            WorkFlowScript script = new WorkFlowScript(ctx);
            script.InitializeComponent();
            script.Start();       
            
            return 0;
        }
        
        public void NotifyLicenseException(string msg)
        {
        		
    		try
    		{
    		    STRunTimeContext ctx = new STRunTimeContext(Directory.GetParent(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)).FullName, string.Empty);
                WorkFlowScript script = new WorkFlowScript(ctx);
                script.InitializeComponent();
                script.Context.ReplayClient.OnLicenseFailure(msg);
                
            }
            catch (Exception)
            {
    			// ToDo: log the error message
            }        
        }
    
    	 protected string GetTestPath()
            {
                if (CommandLineArguments != null)
                {
                    for (int i = 0; i < CommandLineArguments.Length; i++)
                    {
                        if (CommandLineArguments[i].Equals("-test", StringComparison.OrdinalIgnoreCase))
                        {
                            return CommandLineArguments[i + 1];
                        }
                    }
                }
                return String.Empty;
            }
        
    }
    
    }
    