/***************************************************************
    *  DO NOT EDIT THIS FILE!
    *         
    *  This file is automatically generated by HP Service Test.
    *  Manually changing the contents of this file may result in 
    *  loss of information.
    *          
    *  To edit the test, open the file ‘tb_removeroster_verification.st’ 
    *  in HP Service Test.
     ***************************************************************/
    
    namespace Script
    {
    using System;
    using System.Text;
    using System.Threading;
    using System.Xml;
    using System.Xml.Schema;
    using HP.ST.Fwk.ReporterFWK;
    using HP.ST.Shared.Utilities;
    using HP.ST.Ext.BindingImpl.Getters;
    using HP.ST.Ext.BindingImpl.Setters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.PropInfo;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Getters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Setters;
    using HP.ST.Fwk.RunTimeFWK;
    using HP.ST.Fwk.RunTimeFWK.Utilities;
    using HP.ST.Fwk.RunTimeFWK.HelperClasses;
    using HP.ST.Fwk.RunTimeFWK.CompositeActivities;
    using HP.ST.Ext.BindingImpl.Setters.DataSourceSetters;
    using HP.ST.Fwk.JVMLoader;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using HP.ST.Fwk.SOAReplayAPI;
    using HP.ST.Fwk.UFTLicensing;
    
    
    
    public partial class WorkFlowScript : STWorkFlowScriptBase
    {    
    	TestUserCode _userCode = null;
    	TestEntities _flow = null;
    	static Reporter reporter;
    	int reportLevelInTree;
        HP.ST.Fwk.ReportCreator.QTPEngine.QTPEngineReportCreator reportCreator;
    	
    	public BindDirection bind_dir1100 = null;
        public BindDirection bind_dir1101 = null;
        public BindDirection bind_dir1102 = null;
        public BindDirection bind_dir1103 = null;
        public HP.ST.Ext.BasicActivities.DataCursorActivity DataCursorActivity284 = null;
        public BindDirection bind_dir1104 = null;
        public HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy DataCursorActivity284_Policy = null;
        public BindDirection bind_dir1105 = null;
        public BindDirection bind_dir1106 = null;
        public BindDirection bind_dir1107 = null;
        public BindDirection bind_dir1108 = null;
        public BindDirection bind_dir1109 = null;
        public BindDirection bind_dir1110 = null;
        public BindDirection bind_dir1111 = null;
        public BindDirection bind_dir1112 = null;
        public BindDirection bind_dir1113 = null;
        public BindDirection bind_dir1114 = null;
        public BindDirection bind_dir1115 = null;
        public BindDirection bind_dir1116 = null;
        public BindDirection bind_dir1117 = null;
        public BindDirection bind_dir1118 = null;
        public BindDirection bind_dir1119 = null;
        public BindDirection bind_dir1120 = null;
        public BindDirection bind_dir1121 = null;
        public BindDirection bind_dir1122 = null;
        public BindDirection bind_dir1123 = null;
        public BindDirection bind_dir1124 = null;
        public BindDirection bind_dir1125 = null;
        public BindDirection bind_dir1126 = null;
        public BindDirection bind_dir1127 = null;
        public BindDirection bind_dir1128 = null;
        public BindDirection bind_dir1129 = null;
        public BindDirection bind_dir1130 = null;
        public BindDirection bind_dir1131 = null;
        public BindDirection bind_dir1132 = null;
        public BindDirection bind_dir1133 = null;
        public BindDirection bind_dir1134 = null;
        public BindDirection bind_dir1135 = null;
        public BindDirection bind_dir1136 = null;
        public BindDirection bind_dir1137 = null;
        public BindDirection bind_dir1138 = null;
        public BindDirection bind_dir1139 = null;
        public BindDirection bind_dir1140 = null;
        public BindDirection bind_dir1141 = null;
        public BindDirection bind_dir1142 = null;
        public BindDirection bind_dir1143 = null;
        public BindDirection bind_dir1144 = null;
        public BindDirection bind_dir1145 = null;
        public BindDirection bind_dir1146 = null;
        public BindDirection bind_dir1147 = null;
        public BindDirection bind_dir1148 = null;
        public BindDirection bind_dir1149 = null;
        public BindDirection bind_dir1150 = null;
        public HP.ST.Ext.BasicActivities.DataCursorActivity DataCursorActivity285 = null;
        public BindDirection bind_dir1151 = null;
        public HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy DataCursorActivity285_Policy = null;
        public BindDirection bind_dir1152 = null;
        public BindDirection bind_dir1153 = null;
        public BindDirection bind_dir1154 = null;
        public BindDirection bind_dir1155 = null;
        public BindDirection bind_dir1156 = null;
        public BindDirection bind_dir1157 = null;
        public BindDirection bind_dir1158 = null;
        public BindDirection bind_dir1159 = null;
        public BindDirection bind_dir1160 = null;
        public BindDirection bind_dir1161 = null;
        public BindDirection bind_dir1162 = null;
        public BindDirection bind_dir1163 = null;
        public BindDirection bind_dir1164 = null;
        public BindDirection bind_dir1165 = null;
        public BindDirection bind_dir1166 = null;
        public BindDirection bind_dir1167 = null;
        public BindDirection bind_dir1168 = null;
        public BindDirection bind_dir1169 = null;
        public BindDirection bind_dir1170 = null;
        public BindDirection bind_dir1171 = null;
        public BindDirection bind_dir1172 = null;
        public BindDirection bind_dir1173 = null;
        public BindDirection bind_dir1174 = null;
        public BindDirection bind_dir1175 = null;
        public BindDirection bind_dir1176 = null;
        public BindDirection bind_dir1177 = null;
        public BindDirection bind_dir1178 = null;
        public BindDirection bind_dir1179 = null;
        public BindDirection bind_dir1180 = null;
        public BindDirection bind_dir1181 = null;
        public BindDirection bind_dir1182 = null;
        public BindDirection bind_dir1183 = null;
        public BindDirection bind_dir1184 = null;
        public BindDirection bind_dir1185 = null;
        public BindDirection bind_dir1186 = null;
        public BindDirection bind_dir1187 = null;
        public BindDirection bind_dir1188 = null;
        public BindDirection bind_dir1189 = null;
        public BindDirection bind_dir1190 = null;
        public BindDirection bind_dir1191 = null;
        public BindDirection bind_dir1192 = null;
        public BindDirection bind_dir1193 = null;
        public BindDirection bind_dir1194 = null;
        public BindDirection bind_dir1195 = null;
        public BindDirection bind_dir1196 = null;
        public BindDirection bind_dir1197 = null;
        public BindDirection bind_dir1198 = null;
        public BindDirection bind_dir1199 = null;
        public BindDirection bind_dir1200 = null;
        public BindDirection bind_dir1201 = null;
        
        public IEnumerable<FeaturesGroup> LicensedFeatures
        {
        
        get
        {
        List<FeaturesGroup> features = new List<FeaturesGroup>();
        FeaturesGroup fg1 = new FeaturesGroup();
            fg1.Add(new LicenseFeature("UnifiedFunctionalTesting","1.0"));
            fg1.Add(new LicenseFeature("UnifiedFunctionalTesting","1.1"));
            fg1.Add(new LicenseFeature("UnifiedFunctionalTesting","1.2"));
            features.Add(fg1);
            FeaturesGroup fg2 = new FeaturesGroup();
            FeaturesGroup fg3 = new FeaturesGroup();
            FeaturesGroup fg4 = new FeaturesGroup();
            return features;
        
        }
        
        }
        
        public WorkFlowScript()
            : base(VuserClass.CommandLineArguments, new STRunTimeContext(), "test")
        {	
        	UpdateContextWithActionFolder(String.Empty);
        	
        }
        
        public WorkFlowScript(ISTRunTimeContext ctx)
            : base(VuserClass.CommandLineArguments, ctx, "test")
            
        {
        	this._context = ctx;
        	UpdateContextWithActionFolder(String.Empty);
        	UpdateTestSettings(ctx);
        }
        
        internal void InitializeComponent()
        {
        	LoadInput();
        	
        	InitReport();
        	
        	InitializeEncryptionManagerValues();
        
        	_userCode = new TestUserCode();
            _flow = _userCode;
            _flow.Context=this._context;
            
            
        
        	_flow.DataFetchActivity280 = new HP.ST.Ext.BasicActivities.DataFetchActivity(_context,"DataFetchActivity280");
            _flow.DataFetchActivity277 = new HP.ST.Ext.BasicActivities.DataFetchActivity(_context,"DataFetchActivity277");
            _flow.StartActivity1 = new HP.ST.Ext.BasicActivities.StartActivity(_context,"StartActivity1");
            _flow.Loop2 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Loop<Loop2Input>(_context,"Loop2",LoopType.For);
            _flow.DataExporterActivity279 = new HP.ST.Ext.BasicActivities.DataExporterActivity(_context,"DataExporterActivity279");
            _flow.DataExporterActivity282 = new HP.ST.Ext.BasicActivities.DataExporterActivity(_context,"DataExporterActivity282");
            _flow.DataExporterCloseActivity283 = new HP.ST.Ext.BasicActivities.DataExporterCloseActivity(_context,"DataExporterCloseActivity283");
            _flow.EndActivity3 = new HP.ST.Ext.BasicActivities.EndActivity(_context,"EndActivity3");
            _flow.DataDisconnectActivity278 = new HP.ST.Ext.BasicActivities.DataDisconnectActivity(_context,"DataDisconnectActivity278");
            _flow.DataDisconnectActivity281 = new HP.ST.Ext.BasicActivities.DataDisconnectActivity(_context,"DataDisconnectActivity281");
            this.DataCursorActivity284 = new HP.ST.Ext.BasicActivities.DataCursorActivity(_context,"DataCursorActivity284");
            this.DataCursorActivity284_Policy = new HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy();
            _flow.Sequence275 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Sequence(_context,"Sequence275");
            _flow.DbOpenConnection39 = new HP.ST.Ext.DatabaseRunTime.DbOpenConnection(_context,"DbOpenConnection39");
            _flow.DbFetchData58 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData58");
            _flow.DbFetchData247 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData247");
            _flow.DbFetchData249 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData249");
            _flow.DbFetchData252 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData252");
            _flow.CallQTPTest253 = new HP.ST.Ext.UFTActivity.QtpTestActivity(_context,"CallQTPTest253");
            _flow.DbFetchData254 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData254");
            _flow.CallQTPTest255 = new HP.ST.Ext.UFTActivity.QtpTestActivity(_context,"CallQTPTest255");
            _flow.DbFetchData256 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData256");
            _flow.HTTPActivity250 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity250");
            _flow.StringToJsonActivity251 = new HP.ST.Ext.TransformJsonActivity.StringToJsonActivity(_context,"StringToJsonActivity251");
            _flow.Loop56 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Loop<Loop56Input>(_context,"Loop56",LoopType.For);
            _flow.HTTPActivity270 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity270");
            _flow.HTTPActivity271 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity271");
            _flow.StringToJsonActivity272 = new HP.ST.Ext.TransformJsonActivity.StringToJsonActivity(_context,"StringToJsonActivity272");
            _flow.HTTPActivity273 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity273");
            _flow.DbFetchData74 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData74");
            _flow.CallQTPTest75 = new HP.ST.Ext.UFTActivity.QtpTestActivity(_context,"CallQTPTest75");
            _flow.DbFetchData76 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData76");
            _flow.HTTPActivity73 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity73");
            _flow.DbFetchData77 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData77");
            this.DataCursorActivity285 = new HP.ST.Ext.BasicActivities.DataCursorActivity(_context,"DataCursorActivity285");
            this.DataCursorActivity285_Policy = new HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy();
            _flow.Sequence276 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Sequence(_context,"Sequence276");
            _flow.HTTPActivity257 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity257");
            _flow.HTTPActivity259 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity259");
            _flow.StringToJsonActivity260 = new HP.ST.Ext.TransformJsonActivity.StringToJsonActivity(_context,"StringToJsonActivity260");
            _flow.HTTPActivity263 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity263");
            _flow.DbFetchData57 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData57");
            _flow.ReplaceStringActivity264 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity264");
            _flow.ReplaceStringActivity274 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity274");
            _flow.DbFetchData265 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData265");
            _flow.CallQTPTest266 = new HP.ST.Ext.UFTActivity.QtpTestActivity(_context,"CallQTPTest266");
            _flow.DbFetchData267 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData267");
            _flow.ReplaceStringActivity268 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity268");
            _flow.HTTPActivity59 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity59");
            _flow.StringToJsonActivity60 = new HP.ST.Ext.TransformJsonActivity.StringToJsonActivity(_context,"StringToJsonActivity60");
            _flow.DbFetchData61 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData61");
            _flow.DbFetchData62 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData62");
            _flow.DbFetchData117 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData117");
            _flow.DbFetchData63 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData63");
            _flow.IfElse64 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.IfElse<IfElse64Input>(_context,"IfElse64");
            _flow.IfElseBranch65 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.IfElseBranch(_context,"IfElseBranch65");
            _flow.IfElseBranch66 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.IfElseBranch(_context,"IfElseBranch66");
            _flow.DbFetchData67 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData67");
            _flow.DbFetchData68 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData68");
            _flow.DataFetchActivity280.Comment = @"";
            _flow.DataFetchActivity280.IconPath = @"";
            _flow.DataFetchActivity280.AssemblyPath = @"AddIns\ServiceTest\BaseDataProviders\HP.ST.Ext.CustomDataProviders.dll";
            _flow.DataFetchActivity280.QueryClassName = @"HP.ST.Ext.CustomDataProviders.DbDataQuery";
            XmlDocument DataFetchActivity280_QueryParameters_Document = new XmlDocument();
            DataFetchActivity280_QueryParameters_Document.PreserveWhitespace = true;
            string xmlDataFetchActivity280Params = @"<Arguments><QueryParametersContainer><QueryParameter><Name>Id</Name><Value>6704d522-5d6d-4d1f-b543-b5d5e85e7f33</Value></QueryParameter><QueryParameter><Name>QueryName</Name><Value>tb_sso_authorize_verification</Value></QueryParameter><QueryParameter><Name>IsEmbedded</Name><Value>True</Value></QueryParameter><QueryParameter><Name>Externalized</Name><Value>False</Value></QueryParameter><QueryParameter><Name>GroupText</Name><Value></Value></QueryParameter><QueryParameter><Name>ConnectionString</Name><Value>DSN=localhost;Uid=root;Pwd={PWD};</Value></QueryParameter><QueryParameter><Name>SqlStatement</Name><Value>select * from tb_sso_authorize_verification</Value></QueryParameter><QueryParameter><Name>Password</Name><Value>UqIq+/M1hvnEiRgp6HH+dg==</Value></QueryParameter><QueryParameter><Name>DatabaseType</Name><Value>ODBC</Value></QueryParameter></QueryParametersContainer></Arguments>";
            DataFetchActivity280_QueryParameters_Document.LoadXml(xmlDataFetchActivity280Params);
            _flow.DataFetchActivity280.QueryParameters = DataFetchActivity280_QueryParameters_Document;
            _flow.dataSourceNameToDataSource.Add("tb_sso_authorize_verification", _flow.DataFetchActivity280);
            this.Activities.Add (_flow.DataFetchActivity280);
            _flow.DataFetchActivity277.Comment = @"";
            _flow.DataFetchActivity277.IconPath = @"";
            _flow.DataFetchActivity277.AssemblyPath = @"AddIns\ServiceTest\BaseDataProviders\HP.ST.Ext.CustomDataProviders.dll";
            _flow.DataFetchActivity277.QueryClassName = @"HP.ST.Ext.CustomDataProviders.DbDataQuery";
            XmlDocument DataFetchActivity277_QueryParameters_Document = new XmlDocument();
            DataFetchActivity277_QueryParameters_Document.PreserveWhitespace = true;
            string xmlDataFetchActivity277Params = @"<Arguments><QueryParametersContainer><QueryParameter><Name>Id</Name><Value>3c16ad12-8441-44fc-ba3f-59f4289acca5</Value></QueryParameter><QueryParameter><Name>QueryName</Name><Value>tb_global_table</Value></QueryParameter><QueryParameter><Name>IsEmbedded</Name><Value>True</Value></QueryParameter><QueryParameter><Name>Externalized</Name><Value>False</Value></QueryParameter><QueryParameter><Name>GroupText</Name><Value></Value></QueryParameter><QueryParameter><Name>ConnectionString</Name><Value>DSN=localhost;Uid=root;Pwd={PWD};</Value></QueryParameter><QueryParameter><Name>SqlStatement</Name><Value>select * from tb_global_table where TestCase = '1'</Value></QueryParameter><QueryParameter><Name>Password</Name><Value>UqIq+/M1hvnEiRgp6HH+dg==</Value></QueryParameter><QueryParameter><Name>DatabaseType</Name><Value>ODBC</Value></QueryParameter></QueryParametersContainer></Arguments>";
            DataFetchActivity277_QueryParameters_Document.LoadXml(xmlDataFetchActivity277Params);
            _flow.DataFetchActivity277.QueryParameters = DataFetchActivity277_QueryParameters_Document;
            _flow.dataSourceNameToDataSource.Add("tb_global_table", _flow.DataFetchActivity277);
            this.Activities.Add (_flow.DataFetchActivity277);
            _flow.StartActivity1.Comment = @"";
            _flow.StartActivity1.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_code_activity.png";
            _flow.StartActivity1.Name = @"开始";
            this.Activities.Add (_flow.StartActivity1);
            _flow.Loop2.ConditionAsString = @"Run for 1 iteration";
            _flow.Loop2.NumberOfIterations = (int)1;
            _flow.Loop2.Comment = @"";
            _flow.Loop2.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_loop.png";
            _flow.Loop2.Name = @"测试流";
            _flow.Loop2.Activities.Add (this.DataCursorActivity284);
            _flow.Loop2.Activities.Add (_flow.Sequence275);
            this.Activities.Add (_flow.Loop2);
            _flow.DataExporterActivity279.Comment = @"";
            _flow.DataExporterActivity279.IconPath = @"";
            VTDPropertyInfoBase pi2239 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1140 = new VTDObjectGetter(pi2239);
            VTDPropertyInfoBase pi2240 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter1100 = new VTDObjectSetter(pi2240);
            binding_setter1100 = new StringFormaterDecorator(binding_setter1100,"{Step.DataFetchActivity277.OutTable}");
            bind_dir1100 = new BindDirection(_flow.DataFetchActivity277,binding_getter1140,binding_setter1100,BindTargetType.ToInProperty);
            _flow.DataExporterActivity279.InDirections.Add(bind_dir1100);
            this.Activities.Add (_flow.DataExporterActivity279);
            _flow.DataExporterActivity282.Comment = @"";
            _flow.DataExporterActivity282.IconPath = @"";
            VTDPropertyInfoBase pi2241 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1141 = new VTDObjectGetter(pi2241);
            VTDPropertyInfoBase pi2242 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter1101 = new VTDObjectSetter(pi2242);
            binding_setter1101 = new StringFormaterDecorator(binding_setter1101,"{Step.DataFetchActivity280.OutTable}");
            bind_dir1101 = new BindDirection(_flow.DataFetchActivity280,binding_getter1141,binding_setter1101,BindTargetType.ToInProperty);
            _flow.DataExporterActivity282.InDirections.Add(bind_dir1101);
            this.Activities.Add (_flow.DataExporterActivity282);
            _flow.DataExporterCloseActivity283.Comment = @"";
            _flow.DataExporterCloseActivity283.IconPath = @"";
            this.Activities.Add (_flow.DataExporterCloseActivity283);
            _flow.EndActivity3.Comment = @"";
            _flow.EndActivity3.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_code_activity.png";
            _flow.EndActivity3.Name = @"结束";
            this.Activities.Add (_flow.EndActivity3);
            _flow.DataDisconnectActivity278.Comment = @"";
            _flow.DataDisconnectActivity278.IconPath = @"";
            VTDPropertyInfoBase pi2243 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1142 = new VTDObjectGetter(pi2243);
            VTDPropertyInfoBase pi2244 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter1102 = new VTDObjectSetter(pi2244);
            binding_setter1102 = new StringFormaterDecorator(binding_setter1102,"{Step.DataFetchActivity277.OutTable}");
            bind_dir1102 = new BindDirection(_flow.DataFetchActivity277,binding_getter1142,binding_setter1102,BindTargetType.ToInProperty);
            _flow.DataDisconnectActivity278.InDirections.Add(bind_dir1102);
            this.Activities.Add (_flow.DataDisconnectActivity278);
            _flow.DataDisconnectActivity281.Comment = @"";
            _flow.DataDisconnectActivity281.IconPath = @"";
            VTDPropertyInfoBase pi2245 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1143 = new VTDObjectGetter(pi2245);
            VTDPropertyInfoBase pi2246 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter1103 = new VTDObjectSetter(pi2246);
            binding_setter1103 = new StringFormaterDecorator(binding_setter1103,"{Step.DataFetchActivity280.OutTable}");
            bind_dir1103 = new BindDirection(_flow.DataFetchActivity280,binding_getter1143,binding_setter1103,BindTargetType.ToInProperty);
            _flow.DataDisconnectActivity281.InDirections.Add(bind_dir1103);
            this.Activities.Add (_flow.DataDisconnectActivity281);
            this.DataCursorActivity284.Comment = @"";
            this.DataCursorActivity284.IconPath = @"";
            VTDPropertyInfoBase pi2247 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1144 = new VTDObjectGetter(pi2247);
            VTDPropertyInfoBase pi2248 = new VTDPropertyInfoBase("InTable");
            VTDBaseSetter binding_setter1104 = new VTDObjectSetter(pi2248);
            binding_setter1104 = new StringFormaterDecorator(binding_setter1104,"{Step.DataFetchActivity277.OutTable}");
            bind_dir1104 = new BindDirection(_flow.DataFetchActivity277,binding_getter1144,binding_setter1104,BindTargetType.ToInProperty);
            this.DataCursorActivity284.InDirections.Add(bind_dir1104);
            this.DataCursorActivity284_Policy.StartPosition = CursorStartPosition.FirstRecord;
            this.DataCursorActivity284_Policy.StartAtSpecificRow = 1;
            this.DataCursorActivity284_Policy.StartCondition.ColumnName = "";
            this.DataCursorActivity284_Policy.StartCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity284_Policy.StartCondition.Value = "";
            this.DataCursorActivity284_Policy.EndPosition = CursorEndPosition.LastRecord;
            this.DataCursorActivity284_Policy.EndAtSpecificRow = 1;
            this.DataCursorActivity284_Policy.EndCondition.ColumnName = "";
            this.DataCursorActivity284_Policy.EndCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity284_Policy.EndCondition.Value = "";
            this.DataCursorActivity284_Policy.StepType = CursorStepType.Forward;
            this.DataCursorActivity284_Policy.StepSize = 1;
            this.DataCursorActivity284_Policy.ActionAfterLastRecord = CursorActionAfterLastRecord.Wraparound;
            this.DataCursorActivity284.Policy = this.DataCursorActivity284_Policy;
            this.DataCursorActivity284.ReportStepData = true;
            _flow.Loop2.BeforeExecuteStepEvent += this.DataCursorActivity284.ResetCursor;
            _flow.Sequence275.Comment = @"";
            _flow.Sequence275.IconPath = @"";
            _flow.Sequence275.Name = @"序列275";
            _flow.Sequence275.Activities.Add (_flow.DbOpenConnection39);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData58);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData247);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData249);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData252);
            _flow.Sequence275.Activities.Add (_flow.CallQTPTest253);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData254);
            _flow.Sequence275.Activities.Add (_flow.CallQTPTest255);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData256);
            _flow.Sequence275.Activities.Add (_flow.HTTPActivity250);
            _flow.Sequence275.Activities.Add (_flow.StringToJsonActivity251);
            _flow.Sequence275.Activities.Add (_flow.Loop56);
            _flow.Sequence275.Activities.Add (_flow.HTTPActivity270);
            _flow.Sequence275.Activities.Add (_flow.HTTPActivity271);
            _flow.Sequence275.Activities.Add (_flow.StringToJsonActivity272);
            _flow.Sequence275.Activities.Add (_flow.HTTPActivity273);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData74);
            _flow.Sequence275.Activities.Add (_flow.CallQTPTest75);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData76);
            _flow.Sequence275.Activities.Add (_flow.HTTPActivity73);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData77);
            _flow.DbOpenConnection39.ConnectionString = @"DSN=localhost;Uid=root;Pwd={PWD};";
            _flow.DbOpenConnection39.Password = @"UqIq+/M1hvnEiRgp6HH+dg==";
            _flow.DbOpenConnection39.DatabaseType = HP.ST.Shared.Utilities.DB.DatabaseType.ODBC;
            _flow.DbOpenConnection39.Comment = @"";
            _flow.DbOpenConnection39.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_connect.png";
            _flow.DbOpenConnection39.Name = @"连接到mysql数据库";
            _flow.DbFetchData58.QueryString = @"select count(*) as 'Row' from tb_removeroster_verification";
            _flow.DbFetchData58.Timeout = (int)30;
            _flow.DbFetchData58.Comment = @"";
            _flow.DbFetchData58.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData58.Name = @"获取到tb_removeroster_verification表有效行数";
            VTDPropertyInfoBase pi2249 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1145 = new VTDObjectGetter(pi2249);
            VTDPropertyInfoBase pi2250 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1105 = new VTDObjectSetter(pi2250);
            bind_dir1105 = new BindDirection(_flow.DbOpenConnection39,binding_getter1145,binding_setter1105,BindTargetType.ToInProperty);
            _flow.DbFetchData58.InDirections.Add(bind_dir1105);
            XmlDocument DbFetchData58_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData58_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData58_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><Row>37</Row></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData58.ExpectedOutputProperties = DbFetchData58_ExpectedOutputProperties_Document;
            set_DbFetchData58_checkpoints(_flow.DbFetchData58);
            _flow.DbFetchData247.QueryString = @"select ResponseXsid from tb_global_table where TestCase = 1";
            _flow.DbFetchData247.Timeout = (int)30;
            _flow.DbFetchData247.Comment = @"";
            _flow.DbFetchData247.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData247.Name = @"查询tb_global_table表中ResponseXsid值";
            VTDPropertyInfoBase pi2251 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1146 = new VTDObjectGetter(pi2251);
            VTDPropertyInfoBase pi2252 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1106 = new VTDObjectSetter(pi2252);
            bind_dir1106 = new BindDirection(_flow.DbOpenConnection39,binding_getter1146,binding_setter1106,BindTargetType.ToInProperty);
            _flow.DbFetchData247.InDirections.Add(bind_dir1106);
            XmlDocument DbFetchData247_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData247_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData247_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><ResponseXsid /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData247.ExpectedOutputProperties = DbFetchData247_ExpectedOutputProperties_Document;
            _flow.DbFetchData249.QueryString = @"select LoginStudentUsername,LoginPassword from tb_global_table where TestCase = 1";
            _flow.DbFetchData249.Timeout = (int)30;
            _flow.DbFetchData249.Comment = @"";
            _flow.DbFetchData249.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData249.Name = @"获取全局表中用户名密码";
            VTDPropertyInfoBase pi2253 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1147 = new VTDObjectGetter(pi2253);
            VTDPropertyInfoBase pi2254 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1107 = new VTDObjectSetter(pi2254);
            bind_dir1107 = new BindDirection(_flow.DbOpenConnection39,binding_getter1147,binding_setter1107,BindTargetType.ToInProperty);
            _flow.DbFetchData249.InDirections.Add(bind_dir1107);
            XmlDocument DbFetchData249_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData249_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData249_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><LoginStudentUsername /><LoginPassword /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData249.ExpectedOutputProperties = DbFetchData249_ExpectedOutputProperties_Document;
            _flow.DbFetchData252.QueryString = @"update tb_global_table set EncryptionStr = '{DataSource.tb_global_table.LoginPassword}' where TestCase = 1";
            _flow.DbFetchData252.Timeout = (int)30;
            _flow.DbFetchData252.Comment = @"";
            _flow.DbFetchData252.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData252.Name = @"将需要加密的信息赋值到全局表中EncryptionStr";
            VTDPropertyInfoBase pi2255 = new VTDPropertyInfoBase("LoginPassword");
            VTDBaseGetter binding_getter1148 = new VTDObjectGetter(pi2255);
            VTDPropertyInfoBase pi2256 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1108 = new VTDObjectSetter(pi2256);
            binding_setter1108 = new StringFormaterDecorator(binding_setter1108,"{DataSource.tb_global_table.LoginPassword}");
            bind_dir1108 = new BindDirection(this.DataCursorActivity284,binding_getter1148,binding_setter1108,BindTargetType.ToInProperty);
            _flow.DbFetchData252.InDirections.Add(bind_dir1108);
            VTDPropertyInfoBase pi2257 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1149 = new VTDObjectGetter(pi2257);
            VTDPropertyInfoBase pi2258 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1109 = new VTDObjectSetter(pi2258);
            bind_dir1109 = new BindDirection(_flow.DbOpenConnection39,binding_getter1149,binding_setter1109,BindTargetType.ToInProperty);
            _flow.DbFetchData252.InDirections.Add(bind_dir1109);
            XmlDocument DbFetchData252_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData252_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData252_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData252.ExpectedOutputProperties = DbFetchData252_ExpectedOutputProperties_Document;
            _flow.CallQTPTest253.Comment = @"";
            _flow.CallQTPTest253.IconPath = @"AddIns\ServiceTest\UFT\toolbox_qtp.png";
            _flow.CallQTPTest253.Name = @"Encryption.SHA1";
            _flow.CallQTPTest253.ScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.ScriptPath}")) ? @"..\Encryption" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.ScriptPath}");
            _flow.CallQTPTest253.ActionName = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.ActionName}")) ? @"SHA1" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.ActionName}");
            _flow.CallQTPTest253.Description = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.Description}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.Description}");
            _flow.CallQTPTest253.IsActionSelected = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.IsActionSelected}")) ? @"True" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.IsActionSelected}");
            _flow.CallQTPTest253.ResultLocation = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.ResultLocation}")) ? @"RunQTPReport\" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.ResultLocation}");
            _flow.CallQTPTest253.QCScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.QCScriptPath}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.QCScriptPath}");
            _flow.DbFetchData254.QueryString = @"select EncryptionResult from tb_global_table where TestCase = 1";
            _flow.DbFetchData254.Timeout = (int)30;
            _flow.DbFetchData254.Comment = @"";
            _flow.DbFetchData254.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData254.Name = @"查询出全局表中EncryptionResult字段";
            VTDPropertyInfoBase pi2259 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1150 = new VTDObjectGetter(pi2259);
            VTDPropertyInfoBase pi2260 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1110 = new VTDObjectSetter(pi2260);
            bind_dir1110 = new BindDirection(_flow.DbOpenConnection39,binding_getter1150,binding_setter1110,BindTargetType.ToInProperty);
            _flow.DbFetchData254.InDirections.Add(bind_dir1110);
            XmlDocument DbFetchData254_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData254_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData254_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><EncryptionResult /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData254.ExpectedOutputProperties = DbFetchData254_ExpectedOutputProperties_Document;
            _flow.CallQTPTest255.Comment = @"";
            _flow.CallQTPTest255.IconPath = @"AddIns\ServiceTest\UFT\toolbox_qtp.png";
            _flow.CallQTPTest255.Name = @"Encryption.SHA1";
            _flow.CallQTPTest255.ScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest255.ScriptPath}")) ? @"..\Encryption" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest255.ScriptPath}");
            _flow.CallQTPTest255.ActionName = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest255.ActionName}")) ? @"SHA1" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest255.ActionName}");
            _flow.CallQTPTest255.Description = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest255.Description}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest255.Description}");
            _flow.CallQTPTest255.IsActionSelected = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest255.IsActionSelected}")) ? @"True" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest255.IsActionSelected}");
            _flow.CallQTPTest255.ResultLocation = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest255.ResultLocation}")) ? @"RunQTPReport\" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest255.ResultLocation}");
            _flow.CallQTPTest255.QCScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest255.QCScriptPath}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest255.QCScriptPath}");
            _flow.DbFetchData256.QueryString = @"select EncryptionResult from tb_global_table where TestCase = 1";
            _flow.DbFetchData256.Timeout = (int)30;
            _flow.DbFetchData256.Comment = @"";
            _flow.DbFetchData256.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData256.Name = @"查询出全局表中EncryptionResult字段";
            VTDPropertyInfoBase pi2261 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1151 = new VTDObjectGetter(pi2261);
            VTDPropertyInfoBase pi2262 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1111 = new VTDObjectSetter(pi2262);
            bind_dir1111 = new BindDirection(_flow.DbOpenConnection39,binding_getter1151,binding_setter1111,BindTargetType.ToInProperty);
            _flow.DbFetchData256.InDirections.Add(bind_dir1111);
            XmlDocument DbFetchData256_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData256_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData256_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><EncryptionResult /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData256.ExpectedOutputProperties = DbFetchData256_ExpectedOutputProperties_Document;
            _flow.HTTPActivity250.TextBody = @"username={DataSource.tb_global_table.LoginStudentUsername}&response_type=xsid&sha1shadow={Step.OutputProperties.DbFetchData254.ResultTable.Row[1].EncryptionResult}&logintype=username&ver=2.6.9&client_id=ime_android&password=hjkj&md5shadow={Step.OutputProperties.DbFetchData256.ResultTable.Row[1].EncryptionResult}";
            _flow.HTTPActivity250.TextXmlBody = @"";
            _flow.HTTPActivity250.FileBody = @"";
            _flow.HTTPActivity250.PostBody = @"";
            _flow.HTTPActivity250.Url = @"{DataSource.tb_global_table.qdHost}{DataSource.tb_global_table.login}";
            _flow.HTTPActivity250.HttpMethod = @"POST";
            _flow.HTTPActivity250.HttpVersion = @"1.1";
            _flow.HTTPActivity250.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity250.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity250.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity250.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity250.Comment = @"";
            _flow.HTTPActivity250.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity250.RequestBodyType = @"Text";
            _flow.HTTPActivity250.ResponseType = @"Text";
            _flow.HTTPActivity250.Name = @"调用登录接口进行学生登录操作";
            _flow.HTTPActivity250.Proxy.Server = @"";
            _flow.HTTPActivity250.Proxy.Username = @"";
            _flow.HTTPActivity250.Proxy.Password = @"";
            _flow.HTTPActivity250.Authentication.Username = @"";
            _flow.HTTPActivity250.Authentication.Password = @"";
            _flow.HTTPActivity250.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity250.Timeout = (int)100000;
            _flow.HTTPActivity250.ClientCertificate.Password = @"";
            _flow.HTTPActivity250.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity250.UseClientCertificate = false;
            _flow.HTTPActivity250.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity250.AllowRedirections = true;
            _flow.HTTPActivity250.ReuseCookies = false;
            _flow.HTTPActivity250.ExpectServerError = false;
            XmlDocument HTTPActivity250_XMLBody_Document = new XmlDocument();
            HTTPActivity250_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity250_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity250.XMLBody = HTTPActivity250_XMLBody_Document;
            XmlDocument HTTPActivity250_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity250_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity250_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity250.RequestMultipartInfoXml = HTTPActivity250_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity250.Multipart=false;
            VTDPropertyInfoBase pi2263 = new VTDPropertyInfoBase("qdHost");
            VTDBaseGetter binding_getter1152 = new VTDObjectGetter(pi2263);
            VTDPropertyInfoBase pi2264 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1112 = new VTDObjectSetter(pi2264);
            binding_setter1112 = new StringFormaterDecorator(binding_setter1112,"{DataSource.tb_global_table.qdHost}");
            bind_dir1112 = new BindDirection(this.DataCursorActivity284,binding_getter1152,binding_setter1112,BindTargetType.ToInProperty);
            _flow.HTTPActivity250.InDirections.Add(bind_dir1112);
            VTDPropertyInfoBase pi2265 = new VTDPropertyInfoBase("login");
            VTDBaseGetter binding_getter1153 = new VTDObjectGetter(pi2265);
            VTDPropertyInfoBase pi2266 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1113 = new VTDObjectSetter(pi2266);
            binding_setter1113 = new StringFormaterDecorator(binding_setter1113,"{DataSource.tb_global_table.login}");
            bind_dir1113 = new BindDirection(this.DataCursorActivity284,binding_getter1153,binding_setter1113,BindTargetType.ToInProperty);
            _flow.HTTPActivity250.InDirections.Add(bind_dir1113);
            VTDPropertyInfoBase pi2267 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1154 = new VTDObjectGetter(pi2267);
            VTDPropertyInfoBase pi2268 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1114 = new VTDObjectSetter(pi2268);
            binding_setter1114 = new StringFormaterDecorator(binding_setter1114,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1114 = new BindDirection(this.DataCursorActivity284,binding_getter1154,binding_setter1114,BindTargetType.ToInProperty);
            _flow.HTTPActivity250.InDirections.Add(bind_dir1114);
            VTDPropertyInfoBase pi2269 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1155 = new VTDObjectGetter(pi2269);
            VTDPropertyInfoBase pi2270 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1115 = new VTDObjectSetter(pi2270);
            binding_setter1115 = new StringFormaterDecorator(binding_setter1115,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1115 = new BindDirection(this.DataCursorActivity284,binding_getter1155,binding_setter1115,BindTargetType.ToInProperty);
            _flow.HTTPActivity250.InDirections.Add(bind_dir1115);
            VTDPropertyInfoBase pi2271 = new VTDPropertyInfoBase("LoginStudentUsername");
            VTDBaseGetter binding_getter1156 = new VTDObjectGetter(pi2271);
            VTDPropertyInfoBase pi2272 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1116 = new VTDObjectSetter(pi2272);
            binding_setter1116 = new StringFormaterDecorator(binding_setter1116,"{DataSource.tb_global_table.LoginStudentUsername}");
            bind_dir1116 = new BindDirection(this.DataCursorActivity284,binding_getter1156,binding_setter1116,BindTargetType.ToInProperty);
            _flow.HTTPActivity250.InDirections.Add(bind_dir1116);
            VTDPropertyInfoBase pi2273 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='EncryptionResult'][1]");
            VTDBaseGetter binding_getter1157 = new VTDXPathGetter(pi2273,XmlTypeCode.String);
            binding_getter1157 = new XPathGetterDecorator(binding_getter1157,"{Array0}",1);
            VTDPropertyInfoBase pi2274 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1117 = new VTDObjectSetter(pi2274);
            binding_setter1117 = new StringFormaterDecorator(binding_setter1117,"{Step.OutputProperties.DbFetchData254.ResultTable.Row[1].EncryptionResult}");
            bind_dir1117 = new BindDirection(_flow.DbFetchData254,binding_getter1157,binding_setter1117,BindTargetType.ToInProperty);
            _flow.HTTPActivity250.InDirections.Add(bind_dir1117);
            VTDPropertyInfoBase pi2275 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='EncryptionResult'][1]");
            VTDBaseGetter binding_getter1158 = new VTDXPathGetter(pi2275,XmlTypeCode.String);
            binding_getter1158 = new XPathGetterDecorator(binding_getter1158,"{Array0}",1);
            VTDPropertyInfoBase pi2276 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1118 = new VTDObjectSetter(pi2276);
            binding_setter1118 = new StringFormaterDecorator(binding_setter1118,"{Step.OutputProperties.DbFetchData256.ResultTable.Row[1].EncryptionResult}");
            bind_dir1118 = new BindDirection(_flow.DbFetchData256,binding_getter1158,binding_setter1118,BindTargetType.ToInProperty);
            _flow.HTTPActivity250.InDirections.Add(bind_dir1118);
            XmlDocument HTTPActivity250_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity250_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity250_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity250.ExpectedResponseXmlBody = HTTPActivity250_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity250_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity250_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity250_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity250.ExpectedResponseJsonBody = HTTPActivity250_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity250_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity250_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity250_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity250.ExpectedOutputProperties = HTTPActivity250_ExpectedOutputProperties_Document;
            _flow.StringToJsonActivity251.InputString = @"{Step.OutputProperties.HTTPActivity250.ResponseBody}";
            _flow.StringToJsonActivity251.Comment = @"";
            _flow.StringToJsonActivity251.IconPath = @"AddIns\ServiceTest\TransformJson\ictb_string_to_json_16.png";
            _flow.StringToJsonActivity251.Name = @"将登录接口返回的response转换为JSON";
            VTDPropertyInfoBase pi2277 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1159 = new VTDObjectGetter(pi2277);
            VTDPropertyInfoBase pi2278 = new VTDPropertyInfoBase("InputString");
            VTDBaseSetter binding_setter1119 = new VTDObjectSetter(pi2278);
            binding_setter1119 = new StringFormaterDecorator(binding_setter1119,"{Step.OutputProperties.HTTPActivity250.ResponseBody}");
            bind_dir1119 = new BindDirection(_flow.HTTPActivity250,binding_getter1159,binding_setter1119,BindTargetType.ToInProperty);
            _flow.StringToJsonActivity251.InDirections.Add(bind_dir1119);
            _flow.Loop56.ConditionAsString = @"Run for 1 iteration";
            _flow.Loop56.NumberOfIterations = (int)1;
            _flow.Loop56.Comment = @"";
            _flow.Loop56.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_loop.png";
            _flow.Loop56.Name = @"循环执行tb_removeroster_verification中的测试用例";
            _flow.Loop56.Activities.Add (this.DataCursorActivity285);
            _flow.Loop56.Activities.Add (_flow.Sequence276);
            _flow.HTTPActivity270.TextBody = @"message=你好，我是张坤测试保存我为你的联系人吧&receiver_jid={DataSource.tb_global_table.LoginTeacherUsername}@365ime.com&xsid=x_021at4j48cc115hc644atbj52bbd3132n7a9dd0990c872t9q596a3ieu0006u";
            _flow.HTTPActivity270.TextXmlBody = @"";
            _flow.HTTPActivity270.FileBody = @"";
            _flow.HTTPActivity270.PostBody = @"";
            _flow.HTTPActivity270.Url = @"{DataSource.tb_global_table.qdHost}{DataSource.tb_global_table.ClientFriendRequest_create}";
            _flow.HTTPActivity270.HttpMethod = @"POST";
            _flow.HTTPActivity270.HttpVersion = @"1.1";
            _flow.HTTPActivity270.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity270.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity270.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity270.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity270.Comment = @"";
            _flow.HTTPActivity270.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity270.RequestBodyType = @"Text";
            _flow.HTTPActivity270.ResponseType = @"Text";
            _flow.HTTPActivity270.Name = @"调用发起加好友申请请求";
            _flow.HTTPActivity270.Proxy.Server = @"";
            _flow.HTTPActivity270.Proxy.Username = @"";
            _flow.HTTPActivity270.Proxy.Password = @"";
            _flow.HTTPActivity270.Authentication.Username = @"";
            _flow.HTTPActivity270.Authentication.Password = @"";
            _flow.HTTPActivity270.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity270.Timeout = (int)100000;
            _flow.HTTPActivity270.ClientCertificate.Password = @"";
            _flow.HTTPActivity270.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity270.UseClientCertificate = false;
            _flow.HTTPActivity270.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity270.AllowRedirections = true;
            _flow.HTTPActivity270.ReuseCookies = false;
            _flow.HTTPActivity270.ExpectServerError = false;
            XmlDocument HTTPActivity270_XMLBody_Document = new XmlDocument();
            HTTPActivity270_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity270_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity270.XMLBody = HTTPActivity270_XMLBody_Document;
            XmlDocument HTTPActivity270_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity270_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity270_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity270.RequestMultipartInfoXml = HTTPActivity270_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity270.Multipart=false;
            VTDPropertyInfoBase pi2279 = new VTDPropertyInfoBase("qdHost");
            VTDBaseGetter binding_getter1160 = new VTDObjectGetter(pi2279);
            VTDPropertyInfoBase pi2280 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1120 = new VTDObjectSetter(pi2280);
            binding_setter1120 = new StringFormaterDecorator(binding_setter1120,"{DataSource.tb_global_table.qdHost}");
            bind_dir1120 = new BindDirection(this.DataCursorActivity284,binding_getter1160,binding_setter1120,BindTargetType.ToInProperty);
            _flow.HTTPActivity270.InDirections.Add(bind_dir1120);
            VTDPropertyInfoBase pi2281 = new VTDPropertyInfoBase("ClientFriendRequest_create");
            VTDBaseGetter binding_getter1161 = new VTDObjectGetter(pi2281);
            VTDPropertyInfoBase pi2282 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1121 = new VTDObjectSetter(pi2282);
            binding_setter1121 = new StringFormaterDecorator(binding_setter1121,"{DataSource.tb_global_table.ClientFriendRequest_create}");
            bind_dir1121 = new BindDirection(this.DataCursorActivity284,binding_getter1161,binding_setter1121,BindTargetType.ToInProperty);
            _flow.HTTPActivity270.InDirections.Add(bind_dir1121);
            VTDPropertyInfoBase pi2283 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1162 = new VTDObjectGetter(pi2283);
            VTDPropertyInfoBase pi2284 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1122 = new VTDObjectSetter(pi2284);
            binding_setter1122 = new StringFormaterDecorator(binding_setter1122,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1122 = new BindDirection(this.DataCursorActivity284,binding_getter1162,binding_setter1122,BindTargetType.ToInProperty);
            _flow.HTTPActivity270.InDirections.Add(bind_dir1122);
            VTDPropertyInfoBase pi2285 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1163 = new VTDObjectGetter(pi2285);
            VTDPropertyInfoBase pi2286 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1123 = new VTDObjectSetter(pi2286);
            binding_setter1123 = new StringFormaterDecorator(binding_setter1123,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1123 = new BindDirection(this.DataCursorActivity284,binding_getter1163,binding_setter1123,BindTargetType.ToInProperty);
            _flow.HTTPActivity270.InDirections.Add(bind_dir1123);
            VTDPropertyInfoBase pi2287 = new VTDPropertyInfoBase("LoginTeacherUsername");
            VTDBaseGetter binding_getter1164 = new VTDObjectGetter(pi2287);
            VTDPropertyInfoBase pi2288 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1124 = new VTDObjectSetter(pi2288);
            binding_setter1124 = new StringFormaterDecorator(binding_setter1124,"{DataSource.tb_global_table.LoginTeacherUsername}");
            bind_dir1124 = new BindDirection(this.DataCursorActivity284,binding_getter1164,binding_setter1124,BindTargetType.ToInProperty);
            _flow.HTTPActivity270.InDirections.Add(bind_dir1124);
            XmlDocument HTTPActivity270_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity270_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity270_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity270.ExpectedResponseXmlBody = HTTPActivity270_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity270_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity270_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity270_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity270.ExpectedResponseJsonBody = HTTPActivity270_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity270_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity270_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity270_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity270.ExpectedOutputProperties = HTTPActivity270_ExpectedOutputProperties_Document;
            _flow.HTTPActivity271.TextBody = @"xsid={Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}";
            _flow.HTTPActivity271.TextXmlBody = @"";
            _flow.HTTPActivity271.FileBody = @"";
            _flow.HTTPActivity271.PostBody = @"";
            _flow.HTTPActivity271.Url = @"{DataSource.tb_global_table.qdHost}{DataSource.tb_global_table.ClientFriendRequest_all}";
            _flow.HTTPActivity271.HttpMethod = @"POST";
            _flow.HTTPActivity271.HttpVersion = @"1.1";
            _flow.HTTPActivity271.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity271.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity271.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity271.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity271.Comment = @"";
            _flow.HTTPActivity271.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity271.RequestBodyType = @"Text";
            _flow.HTTPActivity271.ResponseType = @"Text";
            _flow.HTTPActivity271.Name = @"调用获取所有请求申请接口";
            _flow.HTTPActivity271.Proxy.Server = @"";
            _flow.HTTPActivity271.Proxy.Username = @"";
            _flow.HTTPActivity271.Proxy.Password = @"";
            _flow.HTTPActivity271.Authentication.Username = @"";
            _flow.HTTPActivity271.Authentication.Password = @"";
            _flow.HTTPActivity271.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity271.Timeout = (int)100000;
            _flow.HTTPActivity271.ClientCertificate.Password = @"";
            _flow.HTTPActivity271.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity271.UseClientCertificate = false;
            _flow.HTTPActivity271.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity271.AllowRedirections = true;
            _flow.HTTPActivity271.ReuseCookies = false;
            _flow.HTTPActivity271.ExpectServerError = false;
            XmlDocument HTTPActivity271_XMLBody_Document = new XmlDocument();
            HTTPActivity271_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity271_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity271.XMLBody = HTTPActivity271_XMLBody_Document;
            XmlDocument HTTPActivity271_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity271_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity271_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity271.RequestMultipartInfoXml = HTTPActivity271_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity271.Multipart=false;
            VTDPropertyInfoBase pi2289 = new VTDPropertyInfoBase("qdHost");
            VTDBaseGetter binding_getter1165 = new VTDObjectGetter(pi2289);
            VTDPropertyInfoBase pi2290 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1125 = new VTDObjectSetter(pi2290);
            binding_setter1125 = new StringFormaterDecorator(binding_setter1125,"{DataSource.tb_global_table.qdHost}");
            bind_dir1125 = new BindDirection(this.DataCursorActivity284,binding_getter1165,binding_setter1125,BindTargetType.ToInProperty);
            _flow.HTTPActivity271.InDirections.Add(bind_dir1125);
            VTDPropertyInfoBase pi2291 = new VTDPropertyInfoBase("ClientFriendRequest_all");
            VTDBaseGetter binding_getter1166 = new VTDObjectGetter(pi2291);
            VTDPropertyInfoBase pi2292 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1126 = new VTDObjectSetter(pi2292);
            binding_setter1126 = new StringFormaterDecorator(binding_setter1126,"{DataSource.tb_global_table.ClientFriendRequest_all}");
            bind_dir1126 = new BindDirection(this.DataCursorActivity284,binding_getter1166,binding_setter1126,BindTargetType.ToInProperty);
            _flow.HTTPActivity271.InDirections.Add(bind_dir1126);
            VTDPropertyInfoBase pi2293 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1167 = new VTDObjectGetter(pi2293);
            VTDPropertyInfoBase pi2294 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1127 = new VTDObjectSetter(pi2294);
            binding_setter1127 = new StringFormaterDecorator(binding_setter1127,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1127 = new BindDirection(this.DataCursorActivity284,binding_getter1167,binding_setter1127,BindTargetType.ToInProperty);
            _flow.HTTPActivity271.InDirections.Add(bind_dir1127);
            VTDPropertyInfoBase pi2295 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1168 = new VTDObjectGetter(pi2295);
            VTDPropertyInfoBase pi2296 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1128 = new VTDObjectSetter(pi2296);
            binding_setter1128 = new StringFormaterDecorator(binding_setter1128,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1128 = new BindDirection(this.DataCursorActivity284,binding_getter1168,binding_setter1128,BindTargetType.ToInProperty);
            _flow.HTTPActivity271.InDirections.Add(bind_dir1128);
            VTDPropertyInfoBase pi2297 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1169 = new VTDXPathGetter(pi2297,XmlTypeCode.String);
            binding_getter1169 = new XPathGetterDecorator(binding_getter1169,"{Array0}",1);
            VTDPropertyInfoBase pi2298 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1129 = new VTDObjectSetter(pi2298);
            binding_setter1129 = new StringFormaterDecorator(binding_setter1129,"{Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}");
            bind_dir1129 = new BindDirection(_flow.DbFetchData247,binding_getter1169,binding_setter1129,BindTargetType.ToInProperty);
            _flow.HTTPActivity271.InDirections.Add(bind_dir1129);
            XmlDocument HTTPActivity271_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity271_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity271_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity271.ExpectedResponseXmlBody = HTTPActivity271_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity271_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity271_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity271_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity271.ExpectedResponseJsonBody = HTTPActivity271_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity271_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity271_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity271_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity271.ExpectedOutputProperties = HTTPActivity271_ExpectedOutputProperties_Document;
            _flow.StringToJsonActivity272.InputString = @"{Step.OutputProperties.HTTPActivity271.ResponseBody}";
            _flow.StringToJsonActivity272.Comment = @"";
            _flow.StringToJsonActivity272.IconPath = @"AddIns\ServiceTest\TransformJson\ictb_string_to_json_16.png";
            _flow.StringToJsonActivity272.Name = @"获取教师账号中所有的请求申请";
            VTDPropertyInfoBase pi2299 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1170 = new VTDObjectGetter(pi2299);
            VTDPropertyInfoBase pi2300 = new VTDPropertyInfoBase("InputString");
            VTDBaseSetter binding_setter1130 = new VTDObjectSetter(pi2300);
            binding_setter1130 = new StringFormaterDecorator(binding_setter1130,"{Step.OutputProperties.HTTPActivity271.ResponseBody}");
            bind_dir1130 = new BindDirection(_flow.HTTPActivity271,binding_getter1170,binding_setter1130,BindTargetType.ToInProperty);
            _flow.StringToJsonActivity272.InDirections.Add(bind_dir1130);
            _flow.HTTPActivity273.TextBody = @"id={Step.JsonContent.StringToJsonActivity272.data.Object1.id}&xsid={Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}";
            _flow.HTTPActivity273.TextXmlBody = @"";
            _flow.HTTPActivity273.FileBody = @"";
            _flow.HTTPActivity273.PostBody = @"";
            _flow.HTTPActivity273.Url = @"{DataSource.tb_global_table.qdHost}{DataSource.tb_global_table.ClientFriendRequest_approve}";
            _flow.HTTPActivity273.HttpMethod = @"POST";
            _flow.HTTPActivity273.HttpVersion = @"1.1";
            _flow.HTTPActivity273.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity273.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity273.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity273.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity273.Comment = @"";
            _flow.HTTPActivity273.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity273.RequestBodyType = @"Text";
            _flow.HTTPActivity273.ResponseType = @"Text";
            _flow.HTTPActivity273.Name = @"调用同意申请接口";
            _flow.HTTPActivity273.Proxy.Server = @"";
            _flow.HTTPActivity273.Proxy.Username = @"";
            _flow.HTTPActivity273.Proxy.Password = @"";
            _flow.HTTPActivity273.Authentication.Username = @"";
            _flow.HTTPActivity273.Authentication.Password = @"";
            _flow.HTTPActivity273.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity273.Timeout = (int)100000;
            _flow.HTTPActivity273.ClientCertificate.Password = @"";
            _flow.HTTPActivity273.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity273.UseClientCertificate = false;
            _flow.HTTPActivity273.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity273.AllowRedirections = true;
            _flow.HTTPActivity273.ReuseCookies = false;
            _flow.HTTPActivity273.ExpectServerError = false;
            XmlDocument HTTPActivity273_XMLBody_Document = new XmlDocument();
            HTTPActivity273_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity273_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity273.XMLBody = HTTPActivity273_XMLBody_Document;
            XmlDocument HTTPActivity273_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity273_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity273_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity273.RequestMultipartInfoXml = HTTPActivity273_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity273.Multipart=false;
            VTDPropertyInfoBase pi2301 = new VTDPropertyInfoBase("qdHost");
            VTDBaseGetter binding_getter1171 = new VTDObjectGetter(pi2301);
            VTDPropertyInfoBase pi2302 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1131 = new VTDObjectSetter(pi2302);
            binding_setter1131 = new StringFormaterDecorator(binding_setter1131,"{DataSource.tb_global_table.qdHost}");
            bind_dir1131 = new BindDirection(this.DataCursorActivity284,binding_getter1171,binding_setter1131,BindTargetType.ToInProperty);
            _flow.HTTPActivity273.InDirections.Add(bind_dir1131);
            VTDPropertyInfoBase pi2303 = new VTDPropertyInfoBase("ClientFriendRequest_approve");
            VTDBaseGetter binding_getter1172 = new VTDObjectGetter(pi2303);
            VTDPropertyInfoBase pi2304 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1132 = new VTDObjectSetter(pi2304);
            binding_setter1132 = new StringFormaterDecorator(binding_setter1132,"{DataSource.tb_global_table.ClientFriendRequest_approve}");
            bind_dir1132 = new BindDirection(this.DataCursorActivity284,binding_getter1172,binding_setter1132,BindTargetType.ToInProperty);
            _flow.HTTPActivity273.InDirections.Add(bind_dir1132);
            VTDPropertyInfoBase pi2305 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1173 = new VTDObjectGetter(pi2305);
            VTDPropertyInfoBase pi2306 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1133 = new VTDObjectSetter(pi2306);
            binding_setter1133 = new StringFormaterDecorator(binding_setter1133,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1133 = new BindDirection(this.DataCursorActivity284,binding_getter1173,binding_setter1133,BindTargetType.ToInProperty);
            _flow.HTTPActivity273.InDirections.Add(bind_dir1133);
            VTDPropertyInfoBase pi2307 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1174 = new VTDObjectGetter(pi2307);
            VTDPropertyInfoBase pi2308 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1134 = new VTDObjectSetter(pi2308);
            binding_setter1134 = new StringFormaterDecorator(binding_setter1134,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1134 = new BindDirection(this.DataCursorActivity284,binding_getter1174,binding_setter1134,BindTargetType.ToInProperty);
            _flow.HTTPActivity273.InDirections.Add(bind_dir1134);
            VTDPropertyInfoBase pi2309 = new VTDPropertyInfoBase("JsonContent","/*[local-name(.)='Object'][1]/*[local-name(.)='data'][1]/*[local-name(.)='Object1'][1]/*[local-name(.)='id'][1]");
            VTDBaseGetter binding_getter1175 = new VTDJsonGetter(pi2309);
            VTDPropertyInfoBase pi2310 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1135 = new VTDObjectSetter(pi2310);
            binding_setter1135 = new StringFormaterDecorator(binding_setter1135,"{Step.JsonContent.StringToJsonActivity272.data.Object1.id}");
            bind_dir1135 = new BindDirection(_flow.StringToJsonActivity272,binding_getter1175,binding_setter1135,BindTargetType.ToInProperty);
            _flow.HTTPActivity273.InDirections.Add(bind_dir1135);
            VTDPropertyInfoBase pi2311 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1176 = new VTDXPathGetter(pi2311,XmlTypeCode.String);
            binding_getter1176 = new XPathGetterDecorator(binding_getter1176,"{Array0}",1);
            VTDPropertyInfoBase pi2312 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1136 = new VTDObjectSetter(pi2312);
            binding_setter1136 = new StringFormaterDecorator(binding_setter1136,"{Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}");
            bind_dir1136 = new BindDirection(_flow.DbFetchData247,binding_getter1176,binding_setter1136,BindTargetType.ToInProperty);
            _flow.HTTPActivity273.InDirections.Add(bind_dir1136);
            XmlDocument HTTPActivity273_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity273_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity273_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity273.ExpectedResponseXmlBody = HTTPActivity273_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity273_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity273_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity273_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity273.ExpectedResponseJsonBody = HTTPActivity273_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity273_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity273_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity273_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity273.ExpectedOutputProperties = HTTPActivity273_ExpectedOutputProperties_Document;
            _flow.DbFetchData74.QueryString = @"update tb_global_table set EncryptionStr = '{Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}DcVvwMFWs5{DataSource.tb_global_table.LoginStudentUsername}@365ime.com' where TestCase = 1";
            _flow.DbFetchData74.Timeout = (int)30;
            _flow.DbFetchData74.Comment = @"";
            _flow.DbFetchData74.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData74.Name = @"对/xmp/createGroup.php接口token实行加密";
            VTDPropertyInfoBase pi2313 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1177 = new VTDXPathGetter(pi2313,XmlTypeCode.String);
            binding_getter1177 = new XPathGetterDecorator(binding_getter1177,"{Array0}",1);
            VTDPropertyInfoBase pi2314 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1137 = new VTDObjectSetter(pi2314);
            binding_setter1137 = new StringFormaterDecorator(binding_setter1137,"{Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}");
            bind_dir1137 = new BindDirection(_flow.DbFetchData247,binding_getter1177,binding_setter1137,BindTargetType.ToInProperty);
            _flow.DbFetchData74.InDirections.Add(bind_dir1137);
            VTDPropertyInfoBase pi2315 = new VTDPropertyInfoBase("LoginStudentUsername");
            VTDBaseGetter binding_getter1178 = new VTDObjectGetter(pi2315);
            VTDPropertyInfoBase pi2316 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1138 = new VTDObjectSetter(pi2316);
            binding_setter1138 = new StringFormaterDecorator(binding_setter1138,"{DataSource.tb_global_table.LoginStudentUsername}");
            bind_dir1138 = new BindDirection(this.DataCursorActivity284,binding_getter1178,binding_setter1138,BindTargetType.ToInProperty);
            _flow.DbFetchData74.InDirections.Add(bind_dir1138);
            VTDPropertyInfoBase pi2317 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1179 = new VTDObjectGetter(pi2317);
            VTDPropertyInfoBase pi2318 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1139 = new VTDObjectSetter(pi2318);
            bind_dir1139 = new BindDirection(_flow.DbOpenConnection39,binding_getter1179,binding_setter1139,BindTargetType.ToInProperty);
            _flow.DbFetchData74.InDirections.Add(bind_dir1139);
            XmlDocument DbFetchData74_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData74_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData74_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData74.ExpectedOutputProperties = DbFetchData74_ExpectedOutputProperties_Document;
            _flow.CallQTPTest75.Comment = @"";
            _flow.CallQTPTest75.IconPath = @"AddIns\ServiceTest\UFT\toolbox_qtp.png";
            _flow.CallQTPTest75.Name = @"Encryption.SHA1";
            _flow.CallQTPTest75.ScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.ScriptPath}")) ? @"..\Encryption" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.ScriptPath}");
            _flow.CallQTPTest75.ActionName = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.ActionName}")) ? @"SHA1" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.ActionName}");
            _flow.CallQTPTest75.Description = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.Description}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.Description}");
            _flow.CallQTPTest75.IsActionSelected = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.IsActionSelected}")) ? @"True" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.IsActionSelected}");
            _flow.CallQTPTest75.ResultLocation = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.ResultLocation}")) ? @"RunQTPReport\" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.ResultLocation}");
            _flow.CallQTPTest75.QCScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.QCScriptPath}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.QCScriptPath}");
            _flow.DbFetchData76.QueryString = @"select EncryptionResult from tb_global_table where TestCase = 1";
            _flow.DbFetchData76.Timeout = (int)30;
            _flow.DbFetchData76.Comment = @"";
            _flow.DbFetchData76.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData76.Name = @"查询出加密后EncryptionResult字段的值";
            VTDPropertyInfoBase pi2319 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1180 = new VTDObjectGetter(pi2319);
            VTDPropertyInfoBase pi2320 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1140 = new VTDObjectSetter(pi2320);
            bind_dir1140 = new BindDirection(_flow.DbOpenConnection39,binding_getter1180,binding_setter1140,BindTargetType.ToInProperty);
            _flow.DbFetchData76.InDirections.Add(bind_dir1140);
            XmlDocument DbFetchData76_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData76_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData76_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><EncryptionResult /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData76.ExpectedOutputProperties = DbFetchData76_ExpectedOutputProperties_Document;
            _flow.HTTPActivity73.TextBody = @"xsid={Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}&Jid={DataSource.tb_global_table.LoginTeacherUsername}@365ime.com&rosterJid={DataSource.tb_global_table.LoginStudentUsername}@365ime.com&token={Step.OutputProperties.DbFetchData76.ResultTable.Row[1].EncryptionResult}";
            _flow.HTTPActivity73.TextXmlBody = @"";
            _flow.HTTPActivity73.FileBody = @"";
            _flow.HTTPActivity73.PostBody = @"";
            _flow.HTTPActivity73.Url = @"{DataSource.tb_global_table.JXTInfoHost}{DataSource.tb_global_table.removeRoster}";
            _flow.HTTPActivity73.HttpMethod = @"POST";
            _flow.HTTPActivity73.HttpVersion = @"1.1";
            _flow.HTTPActivity73.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity73.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity73.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity73.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity73.Comment = @"";
            _flow.HTTPActivity73.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity73.RequestBodyType = @"Text";
            _flow.HTTPActivity73.ResponseType = @"Text";
            _flow.HTTPActivity73.Name = @"调用/xmp/removeRoster.php";
            _flow.HTTPActivity73.Proxy.Server = @"";
            _flow.HTTPActivity73.Proxy.Username = @"";
            _flow.HTTPActivity73.Proxy.Password = @"";
            _flow.HTTPActivity73.Authentication.Username = @"";
            _flow.HTTPActivity73.Authentication.Password = @"";
            _flow.HTTPActivity73.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity73.Timeout = (int)100000;
            _flow.HTTPActivity73.ClientCertificate.Password = @"";
            _flow.HTTPActivity73.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity73.UseClientCertificate = false;
            _flow.HTTPActivity73.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity73.AllowRedirections = true;
            _flow.HTTPActivity73.ReuseCookies = false;
            _flow.HTTPActivity73.ExpectServerError = false;
            XmlDocument HTTPActivity73_XMLBody_Document = new XmlDocument();
            HTTPActivity73_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity73_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity73.XMLBody = HTTPActivity73_XMLBody_Document;
            XmlDocument HTTPActivity73_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity73_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity73_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity73.RequestMultipartInfoXml = HTTPActivity73_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity73.Multipart=false;
            VTDPropertyInfoBase pi2321 = new VTDPropertyInfoBase("JXTInfoHost");
            VTDBaseGetter binding_getter1181 = new VTDObjectGetter(pi2321);
            VTDPropertyInfoBase pi2322 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1141 = new VTDObjectSetter(pi2322);
            binding_setter1141 = new StringFormaterDecorator(binding_setter1141,"{DataSource.tb_global_table.JXTInfoHost}");
            bind_dir1141 = new BindDirection(this.DataCursorActivity284,binding_getter1181,binding_setter1141,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1141);
            VTDPropertyInfoBase pi2323 = new VTDPropertyInfoBase("removeRoster");
            VTDBaseGetter binding_getter1182 = new VTDObjectGetter(pi2323);
            VTDPropertyInfoBase pi2324 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1142 = new VTDObjectSetter(pi2324);
            binding_setter1142 = new StringFormaterDecorator(binding_setter1142,"{DataSource.tb_global_table.removeRoster}");
            bind_dir1142 = new BindDirection(this.DataCursorActivity284,binding_getter1182,binding_setter1142,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1142);
            VTDPropertyInfoBase pi2325 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1183 = new VTDObjectGetter(pi2325);
            VTDPropertyInfoBase pi2326 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1143 = new VTDObjectSetter(pi2326);
            binding_setter1143 = new StringFormaterDecorator(binding_setter1143,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1143 = new BindDirection(this.DataCursorActivity284,binding_getter1183,binding_setter1143,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1143);
            VTDPropertyInfoBase pi2327 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1184 = new VTDObjectGetter(pi2327);
            VTDPropertyInfoBase pi2328 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1144 = new VTDObjectSetter(pi2328);
            binding_setter1144 = new StringFormaterDecorator(binding_setter1144,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1144 = new BindDirection(this.DataCursorActivity284,binding_getter1184,binding_setter1144,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1144);
            VTDPropertyInfoBase pi2329 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1185 = new VTDXPathGetter(pi2329,XmlTypeCode.String);
            binding_getter1185 = new XPathGetterDecorator(binding_getter1185,"{Array0}",1);
            VTDPropertyInfoBase pi2330 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1145 = new VTDObjectSetter(pi2330);
            binding_setter1145 = new StringFormaterDecorator(binding_setter1145,"{Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}");
            bind_dir1145 = new BindDirection(_flow.DbFetchData247,binding_getter1185,binding_setter1145,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1145);
            VTDPropertyInfoBase pi2331 = new VTDPropertyInfoBase("LoginTeacherUsername");
            VTDBaseGetter binding_getter1186 = new VTDObjectGetter(pi2331);
            VTDPropertyInfoBase pi2332 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1146 = new VTDObjectSetter(pi2332);
            binding_setter1146 = new StringFormaterDecorator(binding_setter1146,"{DataSource.tb_global_table.LoginTeacherUsername}");
            bind_dir1146 = new BindDirection(this.DataCursorActivity284,binding_getter1186,binding_setter1146,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1146);
            VTDPropertyInfoBase pi2333 = new VTDPropertyInfoBase("LoginStudentUsername");
            VTDBaseGetter binding_getter1187 = new VTDObjectGetter(pi2333);
            VTDPropertyInfoBase pi2334 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1147 = new VTDObjectSetter(pi2334);
            binding_setter1147 = new StringFormaterDecorator(binding_setter1147,"{DataSource.tb_global_table.LoginStudentUsername}");
            bind_dir1147 = new BindDirection(this.DataCursorActivity284,binding_getter1187,binding_setter1147,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1147);
            VTDPropertyInfoBase pi2335 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='EncryptionResult'][1]");
            VTDBaseGetter binding_getter1188 = new VTDXPathGetter(pi2335,XmlTypeCode.String);
            binding_getter1188 = new XPathGetterDecorator(binding_getter1188,"{Array0}",1);
            VTDPropertyInfoBase pi2336 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1148 = new VTDObjectSetter(pi2336);
            binding_setter1148 = new StringFormaterDecorator(binding_setter1148,"{Step.OutputProperties.DbFetchData76.ResultTable.Row[1].EncryptionResult}");
            bind_dir1148 = new BindDirection(_flow.DbFetchData76,binding_getter1188,binding_setter1148,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1148);
            XmlDocument HTTPActivity73_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity73_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity73_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity73.ExpectedResponseXmlBody = HTTPActivity73_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity73_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity73_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity73_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity73.ExpectedResponseJsonBody = HTTPActivity73_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity73_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity73_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity73_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity73.ExpectedOutputProperties = HTTPActivity73_ExpectedOutputProperties_Document;
            _flow.DbFetchData77.QueryString = @"update tb_result_table set ResponseJson = '{Step.OutputProperties.HTTPActivity73.ResponseBody}' where InterfaceName = '/xmp/removeRoster.php'";
            _flow.DbFetchData77.Timeout = (int)30;
            _flow.DbFetchData77.Comment = @"";
            _flow.DbFetchData77.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData77.Name = @"将接口返回的Json更新至tb_result_table";
            VTDPropertyInfoBase pi2337 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1189 = new VTDObjectGetter(pi2337);
            VTDPropertyInfoBase pi2338 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1149 = new VTDObjectSetter(pi2338);
            binding_setter1149 = new StringFormaterDecorator(binding_setter1149,"{Step.OutputProperties.HTTPActivity73.ResponseBody}");
            bind_dir1149 = new BindDirection(_flow.HTTPActivity73,binding_getter1189,binding_setter1149,BindTargetType.ToInProperty);
            _flow.DbFetchData77.InDirections.Add(bind_dir1149);
            VTDPropertyInfoBase pi2339 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1190 = new VTDObjectGetter(pi2339);
            VTDPropertyInfoBase pi2340 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1150 = new VTDObjectSetter(pi2340);
            bind_dir1150 = new BindDirection(_flow.DbOpenConnection39,binding_getter1190,binding_setter1150,BindTargetType.ToInProperty);
            _flow.DbFetchData77.InDirections.Add(bind_dir1150);
            XmlDocument DbFetchData77_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData77_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData77_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData77.ExpectedOutputProperties = DbFetchData77_ExpectedOutputProperties_Document;
            this.DataCursorActivity285.Comment = @"";
            this.DataCursorActivity285.IconPath = @"";
            VTDPropertyInfoBase pi2341 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1191 = new VTDObjectGetter(pi2341);
            VTDPropertyInfoBase pi2342 = new VTDPropertyInfoBase("InTable");
            VTDBaseSetter binding_setter1151 = new VTDObjectSetter(pi2342);
            binding_setter1151 = new StringFormaterDecorator(binding_setter1151,"{Step.DataFetchActivity277.OutTable}");
            bind_dir1151 = new BindDirection(_flow.DataFetchActivity277,binding_getter1191,binding_setter1151,BindTargetType.ToInProperty);
            this.DataCursorActivity285.InDirections.Add(bind_dir1151);
            this.DataCursorActivity285_Policy.StartPosition = CursorStartPosition.FirstRecord;
            this.DataCursorActivity285_Policy.StartAtSpecificRow = 1;
            this.DataCursorActivity285_Policy.StartCondition.ColumnName = "";
            this.DataCursorActivity285_Policy.StartCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity285_Policy.StartCondition.Value = "";
            this.DataCursorActivity285_Policy.EndPosition = CursorEndPosition.LastRecord;
            this.DataCursorActivity285_Policy.EndAtSpecificRow = 1;
            this.DataCursorActivity285_Policy.EndCondition.ColumnName = "";
            this.DataCursorActivity285_Policy.EndCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity285_Policy.EndCondition.Value = "";
            this.DataCursorActivity285_Policy.StepType = CursorStepType.Forward;
            this.DataCursorActivity285_Policy.StepSize = 1;
            this.DataCursorActivity285_Policy.ActionAfterLastRecord = CursorActionAfterLastRecord.Wraparound;
            this.DataCursorActivity285.Policy = this.DataCursorActivity285_Policy;
            this.DataCursorActivity285.ReportStepData = false;
            _flow.Loop56.BeforeExecuteStepEvent += this.DataCursorActivity285.ResetCursor;
            _flow.Sequence276.Comment = @"";
            _flow.Sequence276.IconPath = @"";
            _flow.Sequence276.Name = @"序列276";
            _flow.Sequence276.Activities.Add (_flow.HTTPActivity257);
            _flow.Sequence276.Activities.Add (_flow.HTTPActivity259);
            _flow.Sequence276.Activities.Add (_flow.StringToJsonActivity260);
            _flow.Sequence276.Activities.Add (_flow.HTTPActivity263);
            _flow.Sequence276.Activities.Add (_flow.DbFetchData57);
            _flow.Sequence276.Activities.Add (_flow.ReplaceStringActivity264);
            _flow.Sequence276.Activities.Add (_flow.ReplaceStringActivity274);
            _flow.Sequence276.Activities.Add (_flow.DbFetchData265);
            _flow.Sequence276.Activities.Add (_flow.CallQTPTest266);
            _flow.Sequence276.Activities.Add (_flow.DbFetchData267);
            _flow.Sequence276.Activities.Add (_flow.ReplaceStringActivity268);
            _flow.Sequence276.Activities.Add (_flow.HTTPActivity59);
            _flow.Sequence276.Activities.Add (_flow.StringToJsonActivity60);
            _flow.Sequence276.Activities.Add (_flow.DbFetchData61);
            _flow.Sequence276.Activities.Add (_flow.DbFetchData62);
            _flow.Sequence276.Activities.Add (_flow.DbFetchData117);
            _flow.Sequence276.Activities.Add (_flow.DbFetchData63);
            _flow.Sequence276.Activities.Add (_flow.IfElse64);
            _flow.HTTPActivity257.TextBody = @"message=你好，我是测试张坤保存我为你的联系人吧&receiver_jid={DataSource.tb_global_table.LoginStudentUsername}@365ime.com&xsid=x_021at4j48cc115hc644atbj52bbd3132n7a9dd0990c872t9q596a3ieu0006u";
            _flow.HTTPActivity257.TextXmlBody = @"";
            _flow.HTTPActivity257.FileBody = @"";
            _flow.HTTPActivity257.PostBody = @"";
            _flow.HTTPActivity257.Url = @"{DataSource.tb_global_table.qdHost}{DataSource.tb_global_table.ClientFriendRequest_create}";
            _flow.HTTPActivity257.HttpMethod = @"POST";
            _flow.HTTPActivity257.HttpVersion = @"1.1";
            _flow.HTTPActivity257.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity257.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity257.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity257.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity257.Comment = @"";
            _flow.HTTPActivity257.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity257.RequestBodyType = @"Text";
            _flow.HTTPActivity257.ResponseType = @"Text";
            _flow.HTTPActivity257.Name = @"调用发起加好友申请请求";
            _flow.HTTPActivity257.Proxy.Server = @"";
            _flow.HTTPActivity257.Proxy.Username = @"";
            _flow.HTTPActivity257.Proxy.Password = @"";
            _flow.HTTPActivity257.Authentication.Username = @"";
            _flow.HTTPActivity257.Authentication.Password = @"";
            _flow.HTTPActivity257.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity257.Timeout = (int)100000;
            _flow.HTTPActivity257.ClientCertificate.Password = @"";
            _flow.HTTPActivity257.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity257.UseClientCertificate = false;
            _flow.HTTPActivity257.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity257.AllowRedirections = true;
            _flow.HTTPActivity257.ReuseCookies = false;
            _flow.HTTPActivity257.ExpectServerError = false;
            XmlDocument HTTPActivity257_XMLBody_Document = new XmlDocument();
            HTTPActivity257_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity257_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity257.XMLBody = HTTPActivity257_XMLBody_Document;
            XmlDocument HTTPActivity257_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity257_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity257_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity257.RequestMultipartInfoXml = HTTPActivity257_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity257.Multipart=false;
            VTDPropertyInfoBase pi2343 = new VTDPropertyInfoBase("qdHost");
            VTDBaseGetter binding_getter1192 = new VTDObjectGetter(pi2343);
            VTDPropertyInfoBase pi2344 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1152 = new VTDObjectSetter(pi2344);
            binding_setter1152 = new StringFormaterDecorator(binding_setter1152,"{DataSource.tb_global_table.qdHost}");
            bind_dir1152 = new BindDirection(this.DataCursorActivity285,binding_getter1192,binding_setter1152,BindTargetType.ToInProperty);
            _flow.HTTPActivity257.InDirections.Add(bind_dir1152);
            VTDPropertyInfoBase pi2345 = new VTDPropertyInfoBase("ClientFriendRequest_create");
            VTDBaseGetter binding_getter1193 = new VTDObjectGetter(pi2345);
            VTDPropertyInfoBase pi2346 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1153 = new VTDObjectSetter(pi2346);
            binding_setter1153 = new StringFormaterDecorator(binding_setter1153,"{DataSource.tb_global_table.ClientFriendRequest_create}");
            bind_dir1153 = new BindDirection(this.DataCursorActivity285,binding_getter1193,binding_setter1153,BindTargetType.ToInProperty);
            _flow.HTTPActivity257.InDirections.Add(bind_dir1153);
            VTDPropertyInfoBase pi2347 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1194 = new VTDObjectGetter(pi2347);
            VTDPropertyInfoBase pi2348 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1154 = new VTDObjectSetter(pi2348);
            binding_setter1154 = new StringFormaterDecorator(binding_setter1154,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1154 = new BindDirection(this.DataCursorActivity285,binding_getter1194,binding_setter1154,BindTargetType.ToInProperty);
            _flow.HTTPActivity257.InDirections.Add(bind_dir1154);
            VTDPropertyInfoBase pi2349 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1195 = new VTDObjectGetter(pi2349);
            VTDPropertyInfoBase pi2350 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1155 = new VTDObjectSetter(pi2350);
            binding_setter1155 = new StringFormaterDecorator(binding_setter1155,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1155 = new BindDirection(this.DataCursorActivity285,binding_getter1195,binding_setter1155,BindTargetType.ToInProperty);
            _flow.HTTPActivity257.InDirections.Add(bind_dir1155);
            VTDPropertyInfoBase pi2351 = new VTDPropertyInfoBase("LoginStudentUsername");
            VTDBaseGetter binding_getter1196 = new VTDObjectGetter(pi2351);
            VTDPropertyInfoBase pi2352 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1156 = new VTDObjectSetter(pi2352);
            binding_setter1156 = new StringFormaterDecorator(binding_setter1156,"{DataSource.tb_global_table.LoginStudentUsername}");
            bind_dir1156 = new BindDirection(this.DataCursorActivity285,binding_getter1196,binding_setter1156,BindTargetType.ToInProperty);
            _flow.HTTPActivity257.InDirections.Add(bind_dir1156);
            XmlDocument HTTPActivity257_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity257_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity257_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity257.ExpectedResponseXmlBody = HTTPActivity257_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity257_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity257_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity257_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity257.ExpectedResponseJsonBody = HTTPActivity257_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity257_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity257_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity257_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity257.ExpectedOutputProperties = HTTPActivity257_ExpectedOutputProperties_Document;
            _flow.HTTPActivity259.TextBody = @"xsid={Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}";
            _flow.HTTPActivity259.TextXmlBody = @"";
            _flow.HTTPActivity259.FileBody = @"";
            _flow.HTTPActivity259.PostBody = @"";
            _flow.HTTPActivity259.Url = @"{DataSource.tb_global_table.qdHost}{DataSource.tb_global_table.ClientFriendRequest_all}";
            _flow.HTTPActivity259.HttpMethod = @"POST";
            _flow.HTTPActivity259.HttpVersion = @"1.1";
            _flow.HTTPActivity259.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity259.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity259.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity259.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity259.Comment = @"";
            _flow.HTTPActivity259.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity259.RequestBodyType = @"Text";
            _flow.HTTPActivity259.ResponseType = @"Text";
            _flow.HTTPActivity259.Name = @"调用获取所有请求申请接口";
            _flow.HTTPActivity259.Proxy.Server = @"";
            _flow.HTTPActivity259.Proxy.Username = @"";
            _flow.HTTPActivity259.Proxy.Password = @"";
            _flow.HTTPActivity259.Authentication.Username = @"";
            _flow.HTTPActivity259.Authentication.Password = @"";
            _flow.HTTPActivity259.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity259.Timeout = (int)100000;
            _flow.HTTPActivity259.ClientCertificate.Password = @"";
            _flow.HTTPActivity259.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity259.UseClientCertificate = false;
            _flow.HTTPActivity259.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity259.AllowRedirections = true;
            _flow.HTTPActivity259.ReuseCookies = false;
            _flow.HTTPActivity259.ExpectServerError = false;
            XmlDocument HTTPActivity259_XMLBody_Document = new XmlDocument();
            HTTPActivity259_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity259_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity259.XMLBody = HTTPActivity259_XMLBody_Document;
            XmlDocument HTTPActivity259_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity259_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity259_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity259.RequestMultipartInfoXml = HTTPActivity259_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity259.Multipart=false;
            VTDPropertyInfoBase pi2353 = new VTDPropertyInfoBase("qdHost");
            VTDBaseGetter binding_getter1197 = new VTDObjectGetter(pi2353);
            VTDPropertyInfoBase pi2354 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1157 = new VTDObjectSetter(pi2354);
            binding_setter1157 = new StringFormaterDecorator(binding_setter1157,"{DataSource.tb_global_table.qdHost}");
            bind_dir1157 = new BindDirection(this.DataCursorActivity285,binding_getter1197,binding_setter1157,BindTargetType.ToInProperty);
            _flow.HTTPActivity259.InDirections.Add(bind_dir1157);
            VTDPropertyInfoBase pi2355 = new VTDPropertyInfoBase("ClientFriendRequest_all");
            VTDBaseGetter binding_getter1198 = new VTDObjectGetter(pi2355);
            VTDPropertyInfoBase pi2356 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1158 = new VTDObjectSetter(pi2356);
            binding_setter1158 = new StringFormaterDecorator(binding_setter1158,"{DataSource.tb_global_table.ClientFriendRequest_all}");
            bind_dir1158 = new BindDirection(this.DataCursorActivity285,binding_getter1198,binding_setter1158,BindTargetType.ToInProperty);
            _flow.HTTPActivity259.InDirections.Add(bind_dir1158);
            VTDPropertyInfoBase pi2357 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1199 = new VTDObjectGetter(pi2357);
            VTDPropertyInfoBase pi2358 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1159 = new VTDObjectSetter(pi2358);
            binding_setter1159 = new StringFormaterDecorator(binding_setter1159,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1159 = new BindDirection(this.DataCursorActivity285,binding_getter1199,binding_setter1159,BindTargetType.ToInProperty);
            _flow.HTTPActivity259.InDirections.Add(bind_dir1159);
            VTDPropertyInfoBase pi2359 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1200 = new VTDObjectGetter(pi2359);
            VTDPropertyInfoBase pi2360 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1160 = new VTDObjectSetter(pi2360);
            binding_setter1160 = new StringFormaterDecorator(binding_setter1160,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1160 = new BindDirection(this.DataCursorActivity285,binding_getter1200,binding_setter1160,BindTargetType.ToInProperty);
            _flow.HTTPActivity259.InDirections.Add(bind_dir1160);
            VTDPropertyInfoBase pi2361 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1201 = new VTDXPathGetter(pi2361,XmlTypeCode.String);
            binding_getter1201 = new XPathGetterDecorator(binding_getter1201,"{Array0}",1);
            VTDPropertyInfoBase pi2362 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1161 = new VTDObjectSetter(pi2362);
            binding_setter1161 = new StringFormaterDecorator(binding_setter1161,"{Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}");
            bind_dir1161 = new BindDirection(_flow.DbFetchData247,binding_getter1201,binding_setter1161,BindTargetType.ToInProperty);
            _flow.HTTPActivity259.InDirections.Add(bind_dir1161);
            XmlDocument HTTPActivity259_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity259_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity259_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity259.ExpectedResponseXmlBody = HTTPActivity259_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity259_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity259_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity259_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity259.ExpectedResponseJsonBody = HTTPActivity259_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity259_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity259_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity259_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity259.ExpectedOutputProperties = HTTPActivity259_ExpectedOutputProperties_Document;
            _flow.StringToJsonActivity260.InputString = @"{Step.OutputProperties.HTTPActivity259.ResponseBody}";
            _flow.StringToJsonActivity260.Comment = @"";
            _flow.StringToJsonActivity260.IconPath = @"AddIns\ServiceTest\TransformJson\ictb_string_to_json_16.png";
            _flow.StringToJsonActivity260.Name = @"获取教师账号中所有的请求申请";
            VTDPropertyInfoBase pi2363 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1202 = new VTDObjectGetter(pi2363);
            VTDPropertyInfoBase pi2364 = new VTDPropertyInfoBase("InputString");
            VTDBaseSetter binding_setter1162 = new VTDObjectSetter(pi2364);
            binding_setter1162 = new StringFormaterDecorator(binding_setter1162,"{Step.OutputProperties.HTTPActivity259.ResponseBody}");
            bind_dir1162 = new BindDirection(_flow.HTTPActivity259,binding_getter1202,binding_setter1162,BindTargetType.ToInProperty);
            _flow.StringToJsonActivity260.InDirections.Add(bind_dir1162);
            _flow.HTTPActivity263.TextBody = @"id={Step.JsonContent.StringToJsonActivity260.data.Object1.id}&xsid={Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}";
            _flow.HTTPActivity263.TextXmlBody = @"";
            _flow.HTTPActivity263.FileBody = @"";
            _flow.HTTPActivity263.PostBody = @"";
            _flow.HTTPActivity263.Url = @"{DataSource.tb_global_table.qdHost}{DataSource.tb_global_table.ClientFriendRequest_approve}";
            _flow.HTTPActivity263.HttpMethod = @"POST";
            _flow.HTTPActivity263.HttpVersion = @"1.1";
            _flow.HTTPActivity263.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity263.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity263.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity263.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity263.Comment = @"";
            _flow.HTTPActivity263.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity263.RequestBodyType = @"Text";
            _flow.HTTPActivity263.ResponseType = @"Text";
            _flow.HTTPActivity263.Name = @"调用同意申请接口";
            _flow.HTTPActivity263.Proxy.Server = @"";
            _flow.HTTPActivity263.Proxy.Username = @"";
            _flow.HTTPActivity263.Proxy.Password = @"";
            _flow.HTTPActivity263.Authentication.Username = @"";
            _flow.HTTPActivity263.Authentication.Password = @"";
            _flow.HTTPActivity263.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity263.Timeout = (int)100000;
            _flow.HTTPActivity263.ClientCertificate.Password = @"";
            _flow.HTTPActivity263.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity263.UseClientCertificate = false;
            _flow.HTTPActivity263.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity263.AllowRedirections = true;
            _flow.HTTPActivity263.ReuseCookies = false;
            _flow.HTTPActivity263.ExpectServerError = false;
            XmlDocument HTTPActivity263_XMLBody_Document = new XmlDocument();
            HTTPActivity263_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity263_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity263.XMLBody = HTTPActivity263_XMLBody_Document;
            XmlDocument HTTPActivity263_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity263_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity263_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity263.RequestMultipartInfoXml = HTTPActivity263_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity263.Multipart=false;
            VTDPropertyInfoBase pi2365 = new VTDPropertyInfoBase("qdHost");
            VTDBaseGetter binding_getter1203 = new VTDObjectGetter(pi2365);
            VTDPropertyInfoBase pi2366 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1163 = new VTDObjectSetter(pi2366);
            binding_setter1163 = new StringFormaterDecorator(binding_setter1163,"{DataSource.tb_global_table.qdHost}");
            bind_dir1163 = new BindDirection(this.DataCursorActivity285,binding_getter1203,binding_setter1163,BindTargetType.ToInProperty);
            _flow.HTTPActivity263.InDirections.Add(bind_dir1163);
            VTDPropertyInfoBase pi2367 = new VTDPropertyInfoBase("ClientFriendRequest_approve");
            VTDBaseGetter binding_getter1204 = new VTDObjectGetter(pi2367);
            VTDPropertyInfoBase pi2368 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1164 = new VTDObjectSetter(pi2368);
            binding_setter1164 = new StringFormaterDecorator(binding_setter1164,"{DataSource.tb_global_table.ClientFriendRequest_approve}");
            bind_dir1164 = new BindDirection(this.DataCursorActivity285,binding_getter1204,binding_setter1164,BindTargetType.ToInProperty);
            _flow.HTTPActivity263.InDirections.Add(bind_dir1164);
            VTDPropertyInfoBase pi2369 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1205 = new VTDObjectGetter(pi2369);
            VTDPropertyInfoBase pi2370 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1165 = new VTDObjectSetter(pi2370);
            binding_setter1165 = new StringFormaterDecorator(binding_setter1165,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1165 = new BindDirection(this.DataCursorActivity285,binding_getter1205,binding_setter1165,BindTargetType.ToInProperty);
            _flow.HTTPActivity263.InDirections.Add(bind_dir1165);
            VTDPropertyInfoBase pi2371 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1206 = new VTDObjectGetter(pi2371);
            VTDPropertyInfoBase pi2372 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1166 = new VTDObjectSetter(pi2372);
            binding_setter1166 = new StringFormaterDecorator(binding_setter1166,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1166 = new BindDirection(this.DataCursorActivity285,binding_getter1206,binding_setter1166,BindTargetType.ToInProperty);
            _flow.HTTPActivity263.InDirections.Add(bind_dir1166);
            VTDPropertyInfoBase pi2373 = new VTDPropertyInfoBase("JsonContent","/*[local-name(.)='Object'][1]/*[local-name(.)='data'][1]/*[local-name(.)='Object1'][1]/*[local-name(.)='id'][1]");
            VTDBaseGetter binding_getter1207 = new VTDJsonGetter(pi2373);
            VTDPropertyInfoBase pi2374 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1167 = new VTDObjectSetter(pi2374);
            binding_setter1167 = new StringFormaterDecorator(binding_setter1167,"{Step.JsonContent.StringToJsonActivity260.data.Object1.id}");
            bind_dir1167 = new BindDirection(_flow.StringToJsonActivity260,binding_getter1207,binding_setter1167,BindTargetType.ToInProperty);
            _flow.HTTPActivity263.InDirections.Add(bind_dir1167);
            VTDPropertyInfoBase pi2375 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1208 = new VTDXPathGetter(pi2375,XmlTypeCode.String);
            binding_getter1208 = new XPathGetterDecorator(binding_getter1208,"{Array0}",1);
            VTDPropertyInfoBase pi2376 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1168 = new VTDObjectSetter(pi2376);
            binding_setter1168 = new StringFormaterDecorator(binding_setter1168,"{Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}");
            bind_dir1168 = new BindDirection(_flow.DbFetchData247,binding_getter1208,binding_setter1168,BindTargetType.ToInProperty);
            _flow.HTTPActivity263.InDirections.Add(bind_dir1168);
            XmlDocument HTTPActivity263_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity263_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity263_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity263.ExpectedResponseXmlBody = HTTPActivity263_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity263_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity263_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity263_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity263.ExpectedResponseJsonBody = HTTPActivity263_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity263_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity263_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity263_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity263.ExpectedOutputProperties = HTTPActivity263_ExpectedOutputProperties_Document;
            _flow.DbFetchData57.QueryString = @"select xsid,Jid,token,rosterJid from tb_removeroster_verification where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData57.Timeout = (int)30;
            _flow.DbFetchData57.Comment = @"";
            _flow.DbFetchData57.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData57.Name = @"查询tb_removeroster_verification表中字段信息";
            VTDPropertyInfoBase pi2377 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1209 = new VTDObjectGetter(pi2377);
            VTDPropertyInfoBase pi2378 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1169 = new VTDObjectSetter(pi2378);
            binding_setter1169 = new StringFormaterDecorator(binding_setter1169,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1169 = new BindDirection(_flow.Loop56,binding_getter1209,binding_setter1169,BindTargetType.ToInProperty);
            _flow.DbFetchData57.InDirections.Add(bind_dir1169);
            VTDPropertyInfoBase pi2379 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1210 = new VTDObjectGetter(pi2379);
            VTDPropertyInfoBase pi2380 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1170 = new VTDObjectSetter(pi2380);
            bind_dir1170 = new BindDirection(_flow.DbOpenConnection39,binding_getter1210,binding_setter1170,BindTargetType.ToInProperty);
            _flow.DbFetchData57.InDirections.Add(bind_dir1170);
            XmlDocument DbFetchData57_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData57_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData57_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><xsid /><Jid /><token>61f048fc016c13ea5cdfa6416c6e6ef9532716b8</token><rosterJid /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData57.ExpectedOutputProperties = DbFetchData57_ExpectedOutputProperties_Document;
            set_DbFetchData57_checkpoints(_flow.DbFetchData57);
            _flow.ReplaceStringActivity264.SourceString = @"";
            _flow.ReplaceStringActivity264.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity264.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity264.SearchReplaceString[0].Key = @"b84ff35507754b1db1631c26abdc61f0@muc.365ime.com";
            _flow.ReplaceStringActivity264.SearchReplaceString[0].Value = @"";
            _flow.ReplaceStringActivity264.CaseSensitive = true;
            _flow.ReplaceStringActivity264.Comment = @"";
            _flow.ReplaceStringActivity264.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity264.Name = @"更新本地表中groupid字段";
            _flow.ReplaceStringActivity274.SourceString = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].xsid}";
            _flow.ReplaceStringActivity274.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity274.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity274.SearchReplaceString[0].Key = @"x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00";
            _flow.ReplaceStringActivity274.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}";
            _flow.ReplaceStringActivity274.CaseSensitive = true;
            _flow.ReplaceStringActivity274.Comment = @"";
            _flow.ReplaceStringActivity274.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity274.Name = @"更新本地表中xsid字段";
            VTDPropertyInfoBase pi2381 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='xsid'][1]");
            VTDBaseGetter binding_getter1211 = new VTDXPathGetter(pi2381,XmlTypeCode.String);
            binding_getter1211 = new XPathGetterDecorator(binding_getter1211,"{Array0}",1);
            VTDPropertyInfoBase pi2382 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1171 = new VTDObjectSetter(pi2382);
            binding_setter1171 = new StringFormaterDecorator(binding_setter1171,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].xsid}");
            bind_dir1171 = new BindDirection(_flow.DbFetchData57,binding_getter1211,binding_setter1171,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity274.InDirections.Add(bind_dir1171);
            VTDPropertyInfoBase pi2383 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1212 = new VTDXPathGetter(pi2383,XmlTypeCode.String);
            binding_getter1212 = new XPathGetterDecorator(binding_getter1212,"{Array0}",1);
            VTDPropertyInfoBase pi2384 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1172 = new VTDObjectSetter(pi2384);
            binding_setter1172 = new StringFormaterDecorator(binding_setter1172,"{Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}");
            bind_dir1172 = new BindDirection(_flow.DbFetchData247,binding_getter1212,binding_setter1172,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity274.InDirections.Add(bind_dir1172);
            _flow.DbFetchData265.QueryString = @"update tb_global_table set EncryptionStr = '{Step.OutputProperties.ReplaceStringActivity274.Result}DcVvwMFWs5{DataSource.tb_global_table.LoginStudentUsername}@365ime.com' where TestCase = 1";
            _flow.DbFetchData265.Timeout = (int)30;
            _flow.DbFetchData265.Comment = @"";
            _flow.DbFetchData265.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData265.Name = @"对于本地表中token进行加密";
            VTDPropertyInfoBase pi2385 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1213 = new VTDObjectGetter(pi2385);
            VTDPropertyInfoBase pi2386 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1173 = new VTDObjectSetter(pi2386);
            binding_setter1173 = new StringFormaterDecorator(binding_setter1173,"{Step.OutputProperties.ReplaceStringActivity274.Result}");
            bind_dir1173 = new BindDirection(_flow.ReplaceStringActivity274,binding_getter1213,binding_setter1173,BindTargetType.ToInProperty);
            _flow.DbFetchData265.InDirections.Add(bind_dir1173);
            VTDPropertyInfoBase pi2387 = new VTDPropertyInfoBase("LoginStudentUsername");
            VTDBaseGetter binding_getter1214 = new VTDObjectGetter(pi2387);
            VTDPropertyInfoBase pi2388 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1174 = new VTDObjectSetter(pi2388);
            binding_setter1174 = new StringFormaterDecorator(binding_setter1174,"{DataSource.tb_global_table.LoginStudentUsername}");
            bind_dir1174 = new BindDirection(this.DataCursorActivity285,binding_getter1214,binding_setter1174,BindTargetType.ToInProperty);
            _flow.DbFetchData265.InDirections.Add(bind_dir1174);
            VTDPropertyInfoBase pi2389 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1215 = new VTDObjectGetter(pi2389);
            VTDPropertyInfoBase pi2390 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1175 = new VTDObjectSetter(pi2390);
            bind_dir1175 = new BindDirection(_flow.DbOpenConnection39,binding_getter1215,binding_setter1175,BindTargetType.ToInProperty);
            _flow.DbFetchData265.InDirections.Add(bind_dir1175);
            XmlDocument DbFetchData265_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData265_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData265_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData265.ExpectedOutputProperties = DbFetchData265_ExpectedOutputProperties_Document;
            _flow.CallQTPTest266.Comment = @"";
            _flow.CallQTPTest266.IconPath = @"AddIns\ServiceTest\UFT\toolbox_qtp.png";
            _flow.CallQTPTest266.Name = @"Encryption.SHA1";
            _flow.CallQTPTest266.ScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.ScriptPath}")) ? @"..\Encryption" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.ScriptPath}");
            _flow.CallQTPTest266.ActionName = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.ActionName}")) ? @"SHA1" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.ActionName}");
            _flow.CallQTPTest266.Description = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.Description}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.Description}");
            _flow.CallQTPTest266.IsActionSelected = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.IsActionSelected}")) ? @"True" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.IsActionSelected}");
            _flow.CallQTPTest266.ResultLocation = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.ResultLocation}")) ? @"RunQTPReport\" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.ResultLocation}");
            _flow.CallQTPTest266.QCScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.QCScriptPath}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.QCScriptPath}");
            _flow.DbFetchData267.QueryString = @"select EncryptionResult from tb_global_table where TestCase = 1";
            _flow.DbFetchData267.Timeout = (int)30;
            _flow.DbFetchData267.Comment = @"";
            _flow.DbFetchData267.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData267.Name = @"获取加密后的信息";
            VTDPropertyInfoBase pi2391 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1216 = new VTDObjectGetter(pi2391);
            VTDPropertyInfoBase pi2392 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1176 = new VTDObjectSetter(pi2392);
            bind_dir1176 = new BindDirection(_flow.DbOpenConnection39,binding_getter1216,binding_setter1176,BindTargetType.ToInProperty);
            _flow.DbFetchData267.InDirections.Add(bind_dir1176);
            XmlDocument DbFetchData267_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData267_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData267_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><EncryptionResult /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData267.ExpectedOutputProperties = DbFetchData267_ExpectedOutputProperties_Document;
            _flow.ReplaceStringActivity268.SourceString = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].token}";
            _flow.ReplaceStringActivity268.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity268.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity268.SearchReplaceString[0].Key = @"72738f03c2eb66d693992576857807ee7718b2fc";
            _flow.ReplaceStringActivity268.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData267.ResultTable.Row[1].EncryptionResult}";
            _flow.ReplaceStringActivity268.CaseSensitive = true;
            _flow.ReplaceStringActivity268.Comment = @"";
            _flow.ReplaceStringActivity268.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity268.Name = @"更新本地表中token字段";
            VTDPropertyInfoBase pi2393 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='token'][1]");
            VTDBaseGetter binding_getter1217 = new VTDXPathGetter(pi2393,XmlTypeCode.String);
            binding_getter1217 = new XPathGetterDecorator(binding_getter1217,"{Array0}",1);
            VTDPropertyInfoBase pi2394 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1177 = new VTDObjectSetter(pi2394);
            binding_setter1177 = new StringFormaterDecorator(binding_setter1177,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].token}");
            bind_dir1177 = new BindDirection(_flow.DbFetchData57,binding_getter1217,binding_setter1177,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity268.InDirections.Add(bind_dir1177);
            VTDPropertyInfoBase pi2395 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='EncryptionResult'][1]");
            VTDBaseGetter binding_getter1218 = new VTDXPathGetter(pi2395,XmlTypeCode.String);
            binding_getter1218 = new XPathGetterDecorator(binding_getter1218,"{Array0}",1);
            VTDPropertyInfoBase pi2396 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1178 = new VTDObjectSetter(pi2396);
            binding_setter1178 = new StringFormaterDecorator(binding_setter1178,"{Step.OutputProperties.DbFetchData267.ResultTable.Row[1].EncryptionResult}");
            bind_dir1178 = new BindDirection(_flow.DbFetchData267,binding_getter1218,binding_setter1178,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity268.InDirections.Add(bind_dir1178);
            _flow.HTTPActivity59.TextBody = @"xsid={Step.OutputProperties.ReplaceStringActivity274.Result}&Jid={Step.OutputProperties.DbFetchData57.ResultTable.Row[1].Jid}&rosterJid={Step.OutputProperties.DbFetchData57.ResultTable.Row[1].rosterJid}&token={Step.OutputProperties.ReplaceStringActivity268.Result}";
            _flow.HTTPActivity59.TextXmlBody = @"";
            _flow.HTTPActivity59.FileBody = @"";
            _flow.HTTPActivity59.PostBody = @"";
            _flow.HTTPActivity59.Url = @"{DataSource.tb_global_table.JXTInfoHost}{DataSource.tb_global_table.removeRoster}";
            _flow.HTTPActivity59.HttpMethod = @"POST";
            _flow.HTTPActivity59.HttpVersion = @"1.1";
            _flow.HTTPActivity59.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity59.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity59.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity59.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity59.Comment = @"";
            _flow.HTTPActivity59.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity59.RequestBodyType = @"Text";
            _flow.HTTPActivity59.ResponseType = @"Text";
            _flow.HTTPActivity59.Name = @"调用/xmp/removeRoster.php";
            _flow.HTTPActivity59.Proxy.Server = @"";
            _flow.HTTPActivity59.Proxy.Username = @"";
            _flow.HTTPActivity59.Proxy.Password = @"";
            _flow.HTTPActivity59.Authentication.Username = @"";
            _flow.HTTPActivity59.Authentication.Password = @"";
            _flow.HTTPActivity59.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity59.Timeout = (int)100000;
            _flow.HTTPActivity59.ClientCertificate.Password = @"";
            _flow.HTTPActivity59.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity59.UseClientCertificate = false;
            _flow.HTTPActivity59.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity59.AllowRedirections = true;
            _flow.HTTPActivity59.ReuseCookies = false;
            _flow.HTTPActivity59.ExpectServerError = false;
            XmlDocument HTTPActivity59_XMLBody_Document = new XmlDocument();
            HTTPActivity59_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity59_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity59.XMLBody = HTTPActivity59_XMLBody_Document;
            XmlDocument HTTPActivity59_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity59_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity59_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity59.RequestMultipartInfoXml = HTTPActivity59_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity59.Multipart=false;
            VTDPropertyInfoBase pi2397 = new VTDPropertyInfoBase("JXTInfoHost");
            VTDBaseGetter binding_getter1219 = new VTDObjectGetter(pi2397);
            VTDPropertyInfoBase pi2398 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1179 = new VTDObjectSetter(pi2398);
            binding_setter1179 = new StringFormaterDecorator(binding_setter1179,"{DataSource.tb_global_table.JXTInfoHost}");
            bind_dir1179 = new BindDirection(this.DataCursorActivity285,binding_getter1219,binding_setter1179,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1179);
            VTDPropertyInfoBase pi2399 = new VTDPropertyInfoBase("removeRoster");
            VTDBaseGetter binding_getter1220 = new VTDObjectGetter(pi2399);
            VTDPropertyInfoBase pi2400 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1180 = new VTDObjectSetter(pi2400);
            binding_setter1180 = new StringFormaterDecorator(binding_setter1180,"{DataSource.tb_global_table.removeRoster}");
            bind_dir1180 = new BindDirection(this.DataCursorActivity285,binding_getter1220,binding_setter1180,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1180);
            VTDPropertyInfoBase pi2401 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1221 = new VTDObjectGetter(pi2401);
            VTDPropertyInfoBase pi2402 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1181 = new VTDObjectSetter(pi2402);
            binding_setter1181 = new StringFormaterDecorator(binding_setter1181,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1181 = new BindDirection(this.DataCursorActivity285,binding_getter1221,binding_setter1181,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1181);
            VTDPropertyInfoBase pi2403 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1222 = new VTDObjectGetter(pi2403);
            VTDPropertyInfoBase pi2404 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1182 = new VTDObjectSetter(pi2404);
            binding_setter1182 = new StringFormaterDecorator(binding_setter1182,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1182 = new BindDirection(this.DataCursorActivity285,binding_getter1222,binding_setter1182,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1182);
            VTDPropertyInfoBase pi2405 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1223 = new VTDObjectGetter(pi2405);
            VTDPropertyInfoBase pi2406 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1183 = new VTDObjectSetter(pi2406);
            binding_setter1183 = new StringFormaterDecorator(binding_setter1183,"{Step.OutputProperties.ReplaceStringActivity274.Result}");
            bind_dir1183 = new BindDirection(_flow.ReplaceStringActivity274,binding_getter1223,binding_setter1183,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1183);
            VTDPropertyInfoBase pi2407 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='Jid'][1]");
            VTDBaseGetter binding_getter1224 = new VTDXPathGetter(pi2407,XmlTypeCode.String);
            binding_getter1224 = new XPathGetterDecorator(binding_getter1224,"{Array0}",1);
            VTDPropertyInfoBase pi2408 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1184 = new VTDObjectSetter(pi2408);
            binding_setter1184 = new StringFormaterDecorator(binding_setter1184,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].Jid}");
            bind_dir1184 = new BindDirection(_flow.DbFetchData57,binding_getter1224,binding_setter1184,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1184);
            VTDPropertyInfoBase pi2409 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='rosterJid'][1]");
            VTDBaseGetter binding_getter1225 = new VTDXPathGetter(pi2409,XmlTypeCode.String);
            binding_getter1225 = new XPathGetterDecorator(binding_getter1225,"{Array0}",1);
            VTDPropertyInfoBase pi2410 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1185 = new VTDObjectSetter(pi2410);
            binding_setter1185 = new StringFormaterDecorator(binding_setter1185,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].rosterJid}");
            bind_dir1185 = new BindDirection(_flow.DbFetchData57,binding_getter1225,binding_setter1185,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1185);
            VTDPropertyInfoBase pi2411 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1226 = new VTDObjectGetter(pi2411);
            VTDPropertyInfoBase pi2412 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1186 = new VTDObjectSetter(pi2412);
            binding_setter1186 = new StringFormaterDecorator(binding_setter1186,"{Step.OutputProperties.ReplaceStringActivity268.Result}");
            bind_dir1186 = new BindDirection(_flow.ReplaceStringActivity268,binding_getter1226,binding_setter1186,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1186);
            XmlDocument HTTPActivity59_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity59_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity59_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity59.ExpectedResponseXmlBody = HTTPActivity59_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity59_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity59_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity59_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity59.ExpectedResponseJsonBody = HTTPActivity59_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity59_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity59_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity59_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity59.ExpectedOutputProperties = HTTPActivity59_ExpectedOutputProperties_Document;
            _flow.StringToJsonActivity60.InputString = @"{Step.OutputProperties.HTTPActivity59.ResponseBody}";
            _flow.StringToJsonActivity60.Comment = @"";
            _flow.StringToJsonActivity60.IconPath = @"AddIns\ServiceTest\TransformJson\ictb_string_to_json_16.png";
            _flow.StringToJsonActivity60.Name = @"获取返回值转换为JSON";
            VTDPropertyInfoBase pi2413 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1227 = new VTDObjectGetter(pi2413);
            VTDPropertyInfoBase pi2414 = new VTDPropertyInfoBase("InputString");
            VTDBaseSetter binding_setter1187 = new VTDObjectSetter(pi2414);
            binding_setter1187 = new StringFormaterDecorator(binding_setter1187,"{Step.OutputProperties.HTTPActivity59.ResponseBody}");
            bind_dir1187 = new BindDirection(_flow.HTTPActivity59,binding_getter1227,binding_setter1187,BindTargetType.ToInProperty);
            _flow.StringToJsonActivity60.InDirections.Add(bind_dir1187);
            _flow.DbFetchData61.QueryString = @"UPDATE tb_removeroster_verification set InterfaceResponse = '{Step.OutputProperties.HTTPActivity59.ResponseBody}' where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData61.Timeout = (int)30;
            _flow.DbFetchData61.Comment = @"";
            _flow.DbFetchData61.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData61.Name = @"将获取到的JSON插入到sql中";
            VTDPropertyInfoBase pi2415 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1228 = new VTDObjectGetter(pi2415);
            VTDPropertyInfoBase pi2416 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1188 = new VTDObjectSetter(pi2416);
            binding_setter1188 = new StringFormaterDecorator(binding_setter1188,"{Step.OutputProperties.HTTPActivity59.ResponseBody}");
            bind_dir1188 = new BindDirection(_flow.HTTPActivity59,binding_getter1228,binding_setter1188,BindTargetType.ToInProperty);
            _flow.DbFetchData61.InDirections.Add(bind_dir1188);
            VTDPropertyInfoBase pi2417 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1229 = new VTDObjectGetter(pi2417);
            VTDPropertyInfoBase pi2418 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1189 = new VTDObjectSetter(pi2418);
            binding_setter1189 = new StringFormaterDecorator(binding_setter1189,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1189 = new BindDirection(_flow.Loop56,binding_getter1229,binding_setter1189,BindTargetType.ToInProperty);
            _flow.DbFetchData61.InDirections.Add(bind_dir1189);
            VTDPropertyInfoBase pi2419 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1230 = new VTDObjectGetter(pi2419);
            VTDPropertyInfoBase pi2420 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1190 = new VTDObjectSetter(pi2420);
            bind_dir1190 = new BindDirection(_flow.DbOpenConnection39,binding_getter1230,binding_setter1190,BindTargetType.ToInProperty);
            _flow.DbFetchData61.InDirections.Add(bind_dir1190);
            XmlDocument DbFetchData61_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData61_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData61_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData61.ExpectedOutputProperties = DbFetchData61_ExpectedOutputProperties_Document;
            _flow.DbFetchData62.QueryString = @"update tb_removeroster_verification set OutputValue = 'errorCode={Step.JsonContent.StringToJsonActivity60.errorCode}' where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData62.Timeout = (int)30;
            _flow.DbFetchData62.Comment = @"";
            _flow.DbFetchData62.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData62.Name = @"将errorcode更新到sql中";
            VTDPropertyInfoBase pi2421 = new VTDPropertyInfoBase("JsonContent","/*[local-name(.)='Object'][1]/*[local-name(.)='errorCode'][1]");
            VTDBaseGetter binding_getter1231 = new VTDJsonGetter(pi2421);
            VTDPropertyInfoBase pi2422 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1191 = new VTDObjectSetter(pi2422);
            binding_setter1191 = new StringFormaterDecorator(binding_setter1191,"{Step.JsonContent.StringToJsonActivity60.errorCode}");
            bind_dir1191 = new BindDirection(_flow.StringToJsonActivity60,binding_getter1231,binding_setter1191,BindTargetType.ToInProperty);
            _flow.DbFetchData62.InDirections.Add(bind_dir1191);
            VTDPropertyInfoBase pi2423 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1232 = new VTDObjectGetter(pi2423);
            VTDPropertyInfoBase pi2424 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1192 = new VTDObjectSetter(pi2424);
            binding_setter1192 = new StringFormaterDecorator(binding_setter1192,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1192 = new BindDirection(_flow.Loop56,binding_getter1232,binding_setter1192,BindTargetType.ToInProperty);
            _flow.DbFetchData62.InDirections.Add(bind_dir1192);
            VTDPropertyInfoBase pi2425 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1233 = new VTDObjectGetter(pi2425);
            VTDPropertyInfoBase pi2426 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1193 = new VTDObjectSetter(pi2426);
            bind_dir1193 = new BindDirection(_flow.DbOpenConnection39,binding_getter1233,binding_setter1193,BindTargetType.ToInProperty);
            _flow.DbFetchData62.InDirections.Add(bind_dir1193);
            XmlDocument DbFetchData62_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData62_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData62_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData62.ExpectedOutputProperties = DbFetchData62_ExpectedOutputProperties_Document;
            _flow.DbFetchData117.QueryString = @"select OutputValue from tb_removeroster_verification where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData117.Timeout = (int)30;
            _flow.DbFetchData117.Comment = @"";
            _flow.DbFetchData117.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData117.Name = @"获取当前Case的实际值";
            VTDPropertyInfoBase pi2427 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1234 = new VTDObjectGetter(pi2427);
            VTDPropertyInfoBase pi2428 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1194 = new VTDObjectSetter(pi2428);
            binding_setter1194 = new StringFormaterDecorator(binding_setter1194,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1194 = new BindDirection(_flow.Loop56,binding_getter1234,binding_setter1194,BindTargetType.ToInProperty);
            _flow.DbFetchData117.InDirections.Add(bind_dir1194);
            VTDPropertyInfoBase pi2429 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1235 = new VTDObjectGetter(pi2429);
            VTDPropertyInfoBase pi2430 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1195 = new VTDObjectSetter(pi2430);
            bind_dir1195 = new BindDirection(_flow.DbOpenConnection39,binding_getter1235,binding_setter1195,BindTargetType.ToInProperty);
            _flow.DbFetchData117.InDirections.Add(bind_dir1195);
            XmlDocument DbFetchData117_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData117_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData117_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><OutputValue /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData117.ExpectedOutputProperties = DbFetchData117_ExpectedOutputProperties_Document;
            _flow.DbFetchData63.QueryString = @"select ExpectationValue from tb_removeroster_verification where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData63.Timeout = (int)30;
            _flow.DbFetchData63.Comment = @"";
            _flow.DbFetchData63.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData63.Name = @"获取当前Case的期待值";
            VTDPropertyInfoBase pi2431 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1236 = new VTDObjectGetter(pi2431);
            VTDPropertyInfoBase pi2432 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1196 = new VTDObjectSetter(pi2432);
            binding_setter1196 = new StringFormaterDecorator(binding_setter1196,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1196 = new BindDirection(_flow.Loop56,binding_getter1236,binding_setter1196,BindTargetType.ToInProperty);
            _flow.DbFetchData63.InDirections.Add(bind_dir1196);
            VTDPropertyInfoBase pi2433 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1237 = new VTDObjectGetter(pi2433);
            VTDPropertyInfoBase pi2434 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1197 = new VTDObjectSetter(pi2434);
            bind_dir1197 = new BindDirection(_flow.DbOpenConnection39,binding_getter1237,binding_setter1197,BindTargetType.ToInProperty);
            _flow.DbFetchData63.InDirections.Add(bind_dir1197);
            XmlDocument DbFetchData63_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData63_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData63_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><ExpectationValue /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData63.ExpectedOutputProperties = DbFetchData63_ExpectedOutputProperties_Document;
            _flow.IfElse64.ConditionAsString = @"{Step.OutputProperties.DbFetchData117.ResultTable.Row[1].OutputValue} Equal {Step.OutputProperties.DbFetchData63.ResultTable.Row[1].ExpectationValue}";
            _flow.IfElse64.Comment = @"";
            _flow.IfElse64.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_if_else.png";
            _flow.IfElse64.Name = @"填写Result";
            _flow.IfElse64.Activities.Add (_flow.IfElseBranch65);
            _flow.IfElse64.Activities.Add (_flow.IfElseBranch66);
            _flow.IfElseBranch65.Condition += delegate(object sender,EventArgs e)
            {
            	try
            	{
            VTDPropertyInfoBase pi2435 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='OutputValue'][1]");
            VTDBaseGetter binding_getter1238 = new VTDXPathGetter(pi2435,XmlTypeCode.String);
            binding_getter1238 = new XPathGetterDecorator(binding_getter1238,"{Array0}",1);
            		System.String expr00 = (System.String)HP.ST.Fwk.RunTimeFWK.Utilities.Utils.ConvertValue(_flow.DbFetchData117.GetParam(binding_getter1238),typeof(System.String));
            		var result0 = expr00;
            VTDPropertyInfoBase pi2436 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ExpectationValue'][1]");
            VTDBaseGetter binding_getter1239 = new VTDXPathGetter(pi2436,XmlTypeCode.String);
            binding_getter1239 = new XPathGetterDecorator(binding_getter1239,"{Array0}",1);
            		System.String expr10 = (System.String)HP.ST.Fwk.RunTimeFWK.Utilities.Utils.ConvertValue(_flow.DbFetchData63.GetParam(binding_getter1239),typeof(System.String));
            		var result1 = expr10;
            		return (result0 == result1);
            	}
            	catch(Exception exp)
            	{
            		if (exp is System.InvalidCastException)
            		{
            			throw;
            		}
            		else
            		{
            			return false;
            		}
            	};
            };
            _flow.IfElseBranch65.Comment = @"";
            _flow.IfElseBranch65.IconPath = @"";
            _flow.IfElseBranch65.Name = @"是";
            _flow.IfElseBranch65.Activities.Add (_flow.DbFetchData67);
            _flow.IfElseBranch66.Condition += delegate(object sender,EventArgs e)
            {
            return true;
            };
            _flow.IfElseBranch66.Comment = @"";
            _flow.IfElseBranch66.IconPath = @"";
            _flow.IfElseBranch66.Name = @"否";
            _flow.IfElseBranch66.Activities.Add (_flow.DbFetchData68);
            _flow.DbFetchData67.QueryString = @"update tb_removeroster_verification set Result = 'True' where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData67.Timeout = (int)30;
            _flow.DbFetchData67.Comment = @"";
            _flow.DbFetchData67.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData67.Name = @"在Result字段插入True";
            VTDPropertyInfoBase pi2437 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1240 = new VTDObjectGetter(pi2437);
            VTDPropertyInfoBase pi2438 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1198 = new VTDObjectSetter(pi2438);
            binding_setter1198 = new StringFormaterDecorator(binding_setter1198,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1198 = new BindDirection(_flow.Loop56,binding_getter1240,binding_setter1198,BindTargetType.ToInProperty);
            _flow.DbFetchData67.InDirections.Add(bind_dir1198);
            VTDPropertyInfoBase pi2439 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1241 = new VTDObjectGetter(pi2439);
            VTDPropertyInfoBase pi2440 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1199 = new VTDObjectSetter(pi2440);
            bind_dir1199 = new BindDirection(_flow.DbOpenConnection39,binding_getter1241,binding_setter1199,BindTargetType.ToInProperty);
            _flow.DbFetchData67.InDirections.Add(bind_dir1199);
            XmlDocument DbFetchData67_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData67_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData67_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData67.ExpectedOutputProperties = DbFetchData67_ExpectedOutputProperties_Document;
            _flow.DbFetchData68.QueryString = @"update tb_removeroster_verification set Result = 'False' where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData68.Timeout = (int)30;
            _flow.DbFetchData68.Comment = @"";
            _flow.DbFetchData68.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData68.Name = @"在Result字段插入False";
            VTDPropertyInfoBase pi2441 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1242 = new VTDObjectGetter(pi2441);
            VTDPropertyInfoBase pi2442 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1200 = new VTDObjectSetter(pi2442);
            binding_setter1200 = new StringFormaterDecorator(binding_setter1200,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1200 = new BindDirection(_flow.Loop56,binding_getter1242,binding_setter1200,BindTargetType.ToInProperty);
            _flow.DbFetchData68.InDirections.Add(bind_dir1200);
            VTDPropertyInfoBase pi2443 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1243 = new VTDObjectGetter(pi2443);
            VTDPropertyInfoBase pi2444 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1201 = new VTDObjectSetter(pi2444);
            bind_dir1201 = new BindDirection(_flow.DbOpenConnection39,binding_getter1243,binding_setter1201,BindTargetType.ToInProperty);
            _flow.DbFetchData68.InDirections.Add(bind_dir1201);
            XmlDocument DbFetchData68_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData68_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData68_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData68.ExpectedOutputProperties = DbFetchData68_ExpectedOutputProperties_Document;
            
        }
        
        internal void InitializeEncryptionManagerValues()
        {
        
        }
        	
    	bool useReport = true;
    
    	protected override STExecutionResult ExecuteStep()
        {
            return base.ExecuteStep();
        }
    
        public void Start()
        {
    	    try
    		{
    		  Workflow_Executing();
    		  this.ExecuteStep();
    		}
    		finally
    		{
    		  WorkFlowScript_Completed();
    		}
        }
    
    	private void InitReport()
    	{
    		if (useReport)
    		{	
    			// Intialize Reporter
    			string reportDBDir = Path.Combine(this._context.ReportDirectory, @"Report");
    			CleanupReport(reportDBDir);        	
    			string reportDBPath = Path.Combine(reportDBDir, "VTDReport.mdb");        	
    			if (reporter == null)
    			{
    				reporter = new Reporter(reportDBPath);
    			}
    			_context.Reporter = reporter;
    		}
    	}
    
        public static void CopyDirectory(string Src, string Dst)
        {
            String[] Files;
    
            if (Dst[Dst.Length - 1] != Path.DirectorySeparatorChar)
                Dst += Path.DirectorySeparatorChar;
            if (!Directory.Exists(Dst)) Directory.CreateDirectory(Dst);
            Files = Directory.GetFileSystemEntries(Src);
            foreach (string Element in Files)
            {
                // Sub directories
                if (Directory.Exists(Element))
                    CopyDirectory(Element, Dst + Path.GetFileName(Element));
                // Files in directory
                else
                    File.Copy(Element, Dst + Path.GetFileName(Element), true);
            }
        }
        
        private void CleanupReport(string reportDBDir)
        {   
    		if (useReport)
    		{             
    			string reportTemplateDir = Path.Combine(ServiceTestRunner.GetInstallPath(),@"bin\ReportResources");                
    			try
    			{
            		CopyDirectory(reportTemplateDir, reportDBDir);
    			}
    			catch //(Exception ex)
    			{
    				//ToDo: LoggingService.Warn("Report Cleanup Error", ex);
    			}
    		}
        }
    
        void Workflow_Executing()
        {   
        	InitReportNode();
                       
        }
    
    	private void InitReportNode()
    	{
    		if (useReport)
    		{	
        		// Init report creator
    			this.reportCreator = new HP.ST.Fwk.ReportCreator.QTPEngine.QTPEngineReportCreator();
    			this.reportLevelInTree = reportCreator.Init(_context.EnvironmentProfile.GetVariableValue("TestName"), _context);
                
    			STActivityBase activity = this;
    			string workflowID = activity.GetHashCode().ToString();
    			ReportNodeCreationData newNodeData =
    			new ReportNodeCreationData(workflowID, workflowID, DateTime.Now);
    			reporter.CreateReportNode(newNodeData);
            
    			ReportInfoData newReportData = new ReportInfoData(workflowID, ReportKeywords.TypeKeywordTag, this.GetType().ToString());
    			reporter.SendReportData(newReportData);
    			newReportData = new ReportInfoData(workflowID, ReportKeywords.NameKeywordTag, this.Name);
    			//TrackData(ReportInfoData.InfoDataTag, newReportData);
    			reporter.SendReportData(newReportData);            
            }
    	}
        
        void WorkFlowScript_Completed()
        {   
    		
    
    		CreateReportFiles();
    					
        	// Write all snapshots to disk
    		this._context.SnapshotManager.WriteSnapshotsToDisk();
    			
    		
    
    		OnExecutionCompleted();
    		
        }
    
    	private void CreateReportFiles()
    	{
    		if (useReport)
    		{	
    			//Dispose reporter inorder to close connection to report DB
           		this._context.Reporter.Dispose();
            	
           		// Run report creator
    			reportCreator.RunOnDBAndCreateFiles();
    		}
    	}
    
        
        void Workflow_Faulting()
        {
    		
    
    		CreateReportFiles();
            // Write all snapshots to disk
    		this._context.SnapshotManager.WriteSnapshotsToDisk();
           
    		OnExecutionCompleted();
        }
    
    	protected override QcSystemVariables GetRuntimeQcVariables(ISTRunTimeContext context)
    	{
    		return new HP.ST.Ext.BasicActivities.RuntimeQcVariables(this._context);
    	}
            
    	protected override TestSystemVariables GetTestSystemVariables(ISTRunTimeContext context)
    	{
    		return new HP.ST.Ext.BasicActivities.RuntimeTestVariables(this._context);
    	}
    
    	private void UpdateTestSettings(ISTRunTimeContext ctx)
        {
    		ctx.PropertyBag["StopTestOnStepFailure"] = true;
    	}
    
    protected override void OnThreadStart()
    {
    
    }
    }
    
    public partial class VuserClass
    {
    	public static string[] CommandLineArguments;
    	public static string[] DotNetResolverPaths;
    	
    	
    	public static void InitJavaEnv(string classPath, string additionalVMargs)
    	{
    		JVMLoader.LoadJVM(classPath, additionalVMargs);
    	}
    	
    	
    		
        public VuserClass()
        {
    				
    		AssemblyResolver.AddSTPathsToResolutionPaths();
    		AssemblyResolver.AttachToAppdomain();
        }
    
        private void AddAssemblyResolver()
        {
    		AssemblyResolver.AddTestPathToResolutionPaths(GetTestPath());
    		AssemblyResolver.AddPathsForAssemblyResolution(DotNetResolverPaths);
        }
    	
        public int STAction()
        {	
            AddAssemblyResolver();
            STRunTimeContext ctx = new STRunTimeContext(Directory.GetParent(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)).FullName, string.Empty);
            WorkFlowScript script = new WorkFlowScript(ctx);
            script.InitializeComponent();
            script.Start();       
            
            return 0;
        }
        
        public void NotifyLicenseException(string msg)
        {
        		
    		try
    		{
    		    STRunTimeContext ctx = new STRunTimeContext(Directory.GetParent(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)).FullName, string.Empty);
                WorkFlowScript script = new WorkFlowScript(ctx);
                script.InitializeComponent();
                script.Context.ReplayClient.OnLicenseFailure(msg);
                
            }
            catch (Exception)
            {
    			// ToDo: log the error message
            }        
        }
    
    	 protected string GetTestPath()
            {
                if (CommandLineArguments != null)
                {
                    for (int i = 0; i < CommandLineArguments.Length; i++)
                    {
                        if (CommandLineArguments[i].Equals("-test", StringComparison.OrdinalIgnoreCase))
                        {
                            return CommandLineArguments[i + 1];
                        }
                    }
                }
                return String.Empty;
            }
        
    }
    
    }
    