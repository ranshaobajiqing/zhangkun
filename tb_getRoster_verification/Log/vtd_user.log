2015-08-07 14:25:29,348 [8] INFO  - 步骤“开始”: 步骤“开始”已启动
2015-08-07 14:25:29,364 [8] INFO  - 步骤“开始”已成功结束
2015-08-07 14:25:29,366 [8] INFO  - 步骤“测试流”: 步骤“测试流”已启动
2015-08-07 14:25:29,417 [8] INFO  - 步骤“迭代 1”: 步骤“迭代 1”已启动
2015-08-07 14:25:29,418 [8] INFO  - 步骤“连接到mysql数据库”: 步骤“连接到mysql数据库”已启动
2015-08-07 14:25:29,421 [8] INFO  - 步骤“连接到mysql数据库”: Connection string: DSN=localhost;Uid=root;Pwd={PWD};
2015-08-07 14:25:29,426 [8] INFO  - 步骤“连接到mysql数据库”已成功结束
2015-08-07 14:25:29,427 [8] INFO  - 步骤“获取到tb_getRoom_verification表有效行数”: 步骤“获取到tb_getRoom_verification表有效行数”已启动
2015-08-07 14:25:29,444 [8] ERROR - Checkpoint 2: "16" = "37" 失败
2015-08-07 14:25:29,447 [8] INFO  - 步骤“获取到tb_getRoom_verification表有效行数”已成功结束
2015-08-07 14:25:29,448 [8] INFO  - 步骤“查询全局表中xsid”: 步骤“查询全局表中xsid”已启动
2015-08-07 14:25:29,451 [8] INFO  - 步骤“查询全局表中xsid”已成功结束
2015-08-07 14:25:29,452 [8] INFO  - 步骤“循环执行tb_getRoster_verification中的测试用例”: 步骤“循环执行tb_getRoster_verification中的测试用例”已启动
2015-08-07 14:25:29,455 [8] INFO  - 步骤“迭代 1”: 步骤“迭代 1”已启动
2015-08-07 14:25:29,456 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 14:25:29,469 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 14:25:29,471 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 14:25:29,472 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 14:25:29,476 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“”
2015-08-07 14:25:29,478 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 14:25:29,479 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 14:25:29,480 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“区分大小写”，值:“True”
2015-08-07 14:25:29,481 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“”
2015-08-07 14:25:29,482 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 14:25:29,484 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 14:25:29,577 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 14:25:29,580 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:25:38,505 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:25:38,505 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 14:25:38,508 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 14:25:38,508 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 14:25:38,510 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:25:38,512 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:25:38,513 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:25:38,514 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:25:38,516 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 14:25:38,518 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:25:38,530 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:25:43,258 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:25:43,262 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:25:43,264 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 76
Expect: 100-continue
Connection: Keep-Alive
xsid=&Jid=77401169@365ime.com&token=305bbc2b43542b3d0203daffe9073c3cba5b47d9

2015-08-07 14:25:43,266 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:25:43,269 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:23:03 GMT
Server: Apache-Coyote/1.1
{"message":"","data":{"Version":null,"userArray":[{"username":"文件助手","category":2,"subscription":"none","nickname":"","jid":"xm_file_assistant@365ime.com"},{"username":"张坤老师2","category":0,"subscription":"none","nickname":"123.abcD测试","jid":"77401170@365ime.com"},{"username":"张坤老师3","category":0,"subscription":"none","nickname":"测试修改其昵称","jid":"77401171@365ime.com"}]},"errorCode":"0"}
2015-08-07 14:25:43,286 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:25:43,289 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 14:25:43,320 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 14:25:43,322 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 14:25:43,398 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 14:25:43,401 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 14:25:43,443 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 14:25:43,445 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 14:25:43,454 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 14:25:43,457 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 14:25:43,462 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 14:25:43,463 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 14:25:43,466 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 14:25:43,468 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 14:25:43,470 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 14:25:43,507 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 14:25:43,552 [8] INFO  - 步骤“否”已成功结束
2015-08-07 14:25:43,553 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 14:25:43,555 [8] INFO  - 步骤“迭代 1”已成功结束
2015-08-07 14:25:43,558 [8] INFO  - 步骤“迭代 2”: 步骤“迭代 2”已启动
2015-08-07 14:25:43,560 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 14:25:43,563 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 14:25:43,565 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 14:25:43,566 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 14:25:43,568 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“123”
2015-08-07 14:25:43,569 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 14:25:43,570 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 14:25:43,571 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“123”
2015-08-07 14:25:43,573 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 14:25:43,574 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 14:25:43,631 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 14:25:43,633 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:25:53,375 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:25:53,376 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 14:25:53,379 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 14:25:53,380 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 14:25:53,381 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:25:53,382 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:25:53,383 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:25:53,384 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:25:53,385 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 14:25:53,386 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:25:53,387 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:26:00,431 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:26:00,433 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:26:00,435 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 79
Expect: 100-continue
xsid=123&Jid=77401169@365ime.com&token=305bbc2b43542b3d0203daffe9073c3cba5b47d9

2015-08-07 14:26:00,437 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:26:00,441 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:23:20 GMT
Server: Apache-Coyote/1.1
{"message":"invalid xsid !","data":{},"errorCode":"1"}
2015-08-07 14:26:00,447 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:26:00,450 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 14:26:00,458 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 14:26:00,460 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 14:26:00,513 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 14:26:00,515 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 14:26:00,556 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 14:26:00,558 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 14:26:00,565 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 14:26:00,568 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 14:26:00,574 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 14:26:00,582 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 14:26:00,588 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 14:26:00,589 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 14:26:00,591 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 14:26:00,622 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 14:26:00,632 [8] INFO  - 步骤“否”已成功结束
2015-08-07 14:26:00,634 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 14:26:00,636 [8] INFO  - 步骤“迭代 2”已成功结束
2015-08-07 14:26:00,639 [8] INFO  - 步骤“迭代 3”: 步骤“迭代 3”已启动
2015-08-07 14:26:00,640 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 14:26:00,642 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 14:26:00,647 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 14:26:00,648 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 14:26:00,650 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“abc”
2015-08-07 14:26:00,651 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 14:26:00,652 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 14:26:00,653 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“abc”
2015-08-07 14:26:00,655 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 14:26:00,656 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 14:26:00,837 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 14:26:00,840 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:26:12,569 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:26:12,572 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 14:26:12,576 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 14:26:12,578 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 14:26:12,584 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:26:12,585 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:26:12,587 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:26:12,588 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:26:12,589 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 14:26:12,590 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:26:12,592 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:26:19,657 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:26:19,662 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:26:19,664 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 79
Expect: 100-continue
xsid=abc&Jid=77401169@365ime.com&token=305bbc2b43542b3d0203daffe9073c3cba5b47d9

2015-08-07 14:26:19,666 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:26:19,669 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:23:39 GMT
Server: Apache-Coyote/1.1
{"message":"invalid xsid !","data":{},"errorCode":"1"}
2015-08-07 14:26:19,682 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:26:19,684 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 14:26:19,692 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 14:26:19,694 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 14:26:19,796 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 14:26:19,798 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 14:26:19,851 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 14:26:19,854 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 14:26:19,864 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 14:26:19,866 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 14:26:19,872 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 14:26:19,875 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 14:26:19,879 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 14:26:19,880 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 14:26:19,882 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 14:26:19,927 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 14:26:19,929 [8] INFO  - 步骤“否”已成功结束
2015-08-07 14:26:19,931 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 14:26:19,933 [8] INFO  - 步骤“迭代 3”已成功结束
2015-08-07 14:26:19,936 [8] INFO  - 步骤“迭代 4”: 步骤“迭代 4”已启动
2015-08-07 14:26:19,938 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 14:26:19,941 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 14:26:19,944 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 14:26:19,945 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 14:26:19,947 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“!@#$%^&”
2015-08-07 14:26:19,948 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 14:26:19,950 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 14:26:19,951 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“!@#$%^&”
2015-08-07 14:26:19,954 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 14:26:19,955 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 14:26:19,995 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 14:26:19,996 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:26:30,855 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:26:30,858 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 14:26:30,861 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 14:26:30,862 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 14:26:30,865 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:26:30,866 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:26:30,867 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:26:30,868 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:26:30,870 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 14:26:30,872 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:26:30,875 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:26:35,804 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:26:35,807 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:26:35,809 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 83
Expect: 100-continue
xsid=!@#$%^&&Jid=77401169@365ime.com&token=305bbc2b43542b3d0203daffe9073c3cba5b47d9

2015-08-07 14:26:35,811 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:26:35,813 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:23:55 GMT
Server: Apache-Coyote/1.1
{"message":"","data":{"Version":null,"userArray":[{"username":"文件助手","category":2,"subscription":"none","nickname":"","jid":"xm_file_assistant@365ime.com"},{"username":"张坤老师2","category":0,"subscription":"none","nickname":"123.abcD测试","jid":"77401170@365ime.com"},{"username":"张坤老师3","category":0,"subscription":"none","nickname":"测试修改其昵称","jid":"77401171@365ime.com"}]},"errorCode":"0"}
2015-08-07 14:26:35,818 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:26:35,821 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 14:26:35,826 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 14:26:35,828 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 14:26:35,887 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 14:26:35,890 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 14:26:35,924 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 14:26:35,927 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 14:26:35,933 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 14:26:35,935 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 14:26:35,942 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 14:26:35,944 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 14:26:35,952 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 14:26:35,954 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 14:26:35,957 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 14:26:35,991 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 14:26:35,992 [8] INFO  - 步骤“否”已成功结束
2015-08-07 14:26:35,994 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 14:26:35,995 [8] INFO  - 步骤“迭代 4”已成功结束
2015-08-07 14:26:35,997 [8] INFO  - 步骤“迭代 5”: 步骤“迭代 5”已启动
2015-08-07 14:26:35,998 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 14:26:36,000 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 14:26:36,001 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 14:26:36,002 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 14:26:36,003 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“123.abc”
2015-08-07 14:26:36,005 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 14:26:36,006 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 14:26:36,007 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“123.abc”
2015-08-07 14:26:36,009 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 14:26:36,010 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 14:26:36,045 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 14:26:36,046 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:26:47,019 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:26:47,020 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 14:26:47,022 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 14:26:47,023 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 14:26:47,025 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:26:47,026 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:26:47,026 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:26:47,027 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:26:47,028 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 14:26:47,029 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:26:47,030 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:26:54,070 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:26:54,073 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:26:54,075 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 83
Expect: 100-continue
xsid=123.abc&Jid=77401169@365ime.com&token=305bbc2b43542b3d0203daffe9073c3cba5b47d9

2015-08-07 14:26:54,077 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:26:54,079 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:24:13 GMT
Server: Apache-Coyote/1.1
{"message":"invalid xsid !","data":{},"errorCode":"1"}
2015-08-07 14:26:54,085 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:26:54,088 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 14:26:54,092 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 14:26:54,094 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 14:26:54,186 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 14:26:54,189 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 14:26:54,234 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 14:26:54,237 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 14:26:54,242 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 14:26:54,245 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 14:26:54,251 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 14:26:54,253 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 14:26:54,258 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 14:26:54,261 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 14:26:54,264 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 14:26:54,300 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 14:26:54,304 [8] INFO  - 步骤“否”已成功结束
2015-08-07 14:26:54,308 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 14:26:54,311 [8] INFO  - 步骤“迭代 5”已成功结束
2015-08-07 14:26:54,315 [8] INFO  - 步骤“迭代 6”: 步骤“迭代 6”已启动
2015-08-07 14:26:54,318 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 14:26:54,322 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 14:26:54,325 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 14:26:54,326 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 14:26:54,329 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 14:26:54,330 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 14:26:54,332 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 14:26:54,334 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 14:26:54,339 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 14:26:54,340 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 14:26:54,401 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 14:26:54,403 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:28:07,779 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:28:07,781 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 14:28:07,784 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 14:28:07,785 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 14:28:07,787 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:28:07,788 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:28:07,788 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'cf07366a64cdcd38e711c796e5d40fc30b42064f'”
2015-08-07 14:28:07,789 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“cf07366a64cdcd38e711c796e5d40fc30b42064f”
2015-08-07 14:28:07,790 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 14:28:07,790 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:28:07,792 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:28:12,367 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:28:12,369 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:28:12,372 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 140
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=77401170@365ime.com&token=cf07366a64cdcd38e711c796e5d40fc30b42064f

2015-08-07 14:28:12,374 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:28:12,376 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:25:32 GMT
Server: Apache-Coyote/1.1
{"message":"invalid xsid !","data":{},"errorCode":"1"}
2015-08-07 14:28:12,381 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:28:12,383 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 14:28:12,391 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 14:28:12,393 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 14:28:12,464 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 14:28:12,466 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 14:28:12,509 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 14:28:12,511 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 14:28:12,517 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 14:28:12,520 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 14:28:12,529 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 14:28:12,532 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 14:28:12,535 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 14:28:12,538 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 14:28:12,541 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 14:28:12,585 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 14:28:12,589 [8] INFO  - 步骤“否”已成功结束
2015-08-07 14:28:12,593 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 14:28:12,596 [8] INFO  - 步骤“迭代 6”已成功结束
2015-08-07 14:28:12,602 [8] INFO  - 步骤“迭代 7”: 步骤“迭代 7”已启动
2015-08-07 14:28:12,605 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 14:28:12,611 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 14:28:12,616 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 14:28:12,619 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 14:28:12,621 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 14:28:12,622 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 14:28:12,624 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 14:28:12,625 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 14:28:12,627 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 14:28:12,628 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 14:28:12,663 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 14:28:12,665 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:28:22,381 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:28:22,382 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 14:28:22,386 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 14:28:22,388 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 14:28:22,391 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:28:22,392 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:28:22,394 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'4264493e03b433d30e0376f364a3102169490d77'”
2015-08-07 14:28:22,395 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“4264493e03b433d30e0376f364a3102169490d77”
2015-08-07 14:28:22,397 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 14:28:22,398 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:28:22,402 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:28:26,928 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:28:26,930 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:28:26,932 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 129
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=77401169&token=4264493e03b433d30e0376f364a3102169490d77

2015-08-07 14:28:26,935 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:28:26,938 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:25:47 GMT
Server: Apache-Coyote/1.1
{"message":"invalid xsid !","data":{},"errorCode":"1"}
2015-08-07 14:28:26,943 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:28:26,945 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 14:28:26,951 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 14:28:26,953 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 14:28:27,048 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 14:28:27,050 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 14:28:27,099 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 14:28:27,101 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 14:28:27,107 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 14:28:27,109 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 14:28:27,115 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 14:28:27,118 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 14:28:27,121 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 14:28:27,125 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 14:28:27,128 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 14:28:27,165 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 14:28:27,168 [8] INFO  - 步骤“否”已成功结束
2015-08-07 14:28:27,173 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 14:28:27,177 [8] INFO  - 步骤“迭代 7”已成功结束
2015-08-07 14:28:27,182 [8] INFO  - 步骤“迭代 8”: 步骤“迭代 8”已启动
2015-08-07 14:28:27,186 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 14:28:27,192 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 14:28:27,197 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 14:28:27,198 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 14:28:27,200 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 14:28:27,201 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 14:28:27,202 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 14:28:27,203 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 14:28:27,205 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 14:28:27,206 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 14:28:27,241 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 14:28:27,243 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:28:37,630 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:28:37,633 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 14:28:37,636 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 14:28:37,637 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 14:28:37,640 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:28:37,641 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:28:37,642 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'f100f6d2e10d8629506b9ed43735d9cb444b0817'”
2015-08-07 14:28:37,643 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“f100f6d2e10d8629506b9ed43735d9cb444b0817”
2015-08-07 14:28:37,644 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 14:28:37,645 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:28:37,647 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:28:42,148 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:28:42,151 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:28:42,153 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 132
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=@365ime.com&token=f100f6d2e10d8629506b9ed43735d9cb444b0817

2015-08-07 14:28:42,155 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:28:42,158 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:26:02 GMT
Server: Apache-Coyote/1.1
{"message":"invalid xsid !","data":{},"errorCode":"1"}
2015-08-07 14:28:42,163 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:28:42,166 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 14:28:42,169 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 14:28:42,171 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 14:28:42,253 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 14:28:42,257 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 14:28:42,298 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 14:28:42,301 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 14:28:42,318 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 14:28:42,319 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 14:28:42,323 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 14:28:42,324 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 14:28:42,326 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 14:28:42,327 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 14:28:42,329 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 14:28:42,363 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 14:28:42,365 [8] INFO  - 步骤“否”已成功结束
2015-08-07 14:28:42,367 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 14:28:42,368 [8] INFO  - 步骤“迭代 8”已成功结束
2015-08-07 14:28:42,370 [8] INFO  - 步骤“迭代 9”: 步骤“迭代 9”已启动
2015-08-07 14:28:42,372 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 14:28:42,375 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 14:28:42,377 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 14:28:42,379 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 14:28:42,380 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 14:28:42,381 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 14:28:42,383 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 14:28:42,384 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 14:28:42,386 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 14:28:42,387 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 14:28:42,443 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 14:28:42,445 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:28:52,856 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:28:52,857 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 14:28:52,859 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 14:28:52,860 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 14:28:52,862 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:28:52,863 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:28:52,864 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'bf2b4c830ff1aadd2d6527b645eabb0e41adbce0'”
2015-08-07 14:28:52,865 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“bf2b4c830ff1aadd2d6527b645eabb0e41adbce0”
2015-08-07 14:28:52,868 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 14:28:52,868 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:28:52,870 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:28:57,331 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:28:57,332 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:28:57,333 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 128
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=!@#$%^&&token=bf2b4c830ff1aadd2d6527b645eabb0e41adbce0

2015-08-07 14:28:57,336 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:28:57,337 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:26:17 GMT
Server: Apache-Coyote/1.1
{"message":"Parameter is error !","data":{},"errorCode":"2"}
2015-08-07 14:28:57,340 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:28:57,342 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 14:28:57,344 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 14:28:57,346 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 14:28:57,397 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 14:28:57,398 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 14:28:57,442 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 14:28:57,444 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 14:28:57,451 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 14:28:57,453 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 14:28:57,459 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 14:28:57,461 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 14:28:57,465 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 14:28:57,467 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 14:28:57,469 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 14:28:57,508 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 14:28:57,511 [8] INFO  - 步骤“否”已成功结束
2015-08-07 14:28:57,513 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 14:28:57,515 [8] INFO  - 步骤“迭代 9”已成功结束
2015-08-07 14:28:57,516 [8] INFO  - 步骤“迭代 10”: 步骤“迭代 10”已启动
2015-08-07 14:28:57,518 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 14:28:57,521 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 14:28:57,525 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 14:28:57,526 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 14:28:57,528 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 14:28:57,529 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 14:28:57,530 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 14:28:57,532 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 14:28:57,533 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 14:28:57,535 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 14:28:57,574 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 14:28:57,578 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:29:07,961 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:29:07,962 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 14:29:07,965 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 14:29:07,966 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 14:29:07,968 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:29:07,969 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:29:07,970 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'da39a3ee5e6b4b0d3255bfef95601890afd80709'”
2015-08-07 14:29:07,970 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“da39a3ee5e6b4b0d3255bfef95601890afd80709”
2015-08-07 14:29:07,972 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 14:29:07,972 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:29:07,974 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:29:12,484 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:29:12,487 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:29:12,490 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 121
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=&token=da39a3ee5e6b4b0d3255bfef95601890afd80709

2015-08-07 14:29:12,492 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:29:12,495 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:26:32 GMT
Server: Apache-Coyote/1.1
{"message":"Parameter is error !","data":{},"errorCode":"2"}
2015-08-07 14:29:12,501 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:29:12,503 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 14:29:12,510 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 14:29:12,512 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 14:29:12,598 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 14:29:12,600 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 14:29:12,651 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 14:29:12,653 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 14:29:12,656 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 14:29:12,657 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 14:29:12,662 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 14:29:12,663 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 14:29:12,665 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 14:29:12,666 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 14:29:12,667 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 14:29:12,706 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 14:29:12,709 [8] INFO  - 步骤“否”已成功结束
2015-08-07 14:29:12,710 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 14:29:12,712 [8] INFO  - 步骤“迭代 10”已成功结束
2015-08-07 14:29:12,715 [8] INFO  - 步骤“迭代 11”: 步骤“迭代 11”已启动
2015-08-07 14:29:12,716 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 14:29:12,718 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 14:29:12,721 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 14:29:12,722 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 14:29:12,724 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 14:29:12,725 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 14:29:12,726 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 14:29:12,727 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 14:29:12,729 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 14:29:12,730 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 14:29:12,762 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 14:29:12,763 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:29:23,026 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:29:23,029 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 14:29:23,035 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 14:29:23,039 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 14:29:23,044 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:29:23,046 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:29:23,047 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'22d8eece99eba033b8ff1c202547a1da5f4b2ddb'”
2015-08-07 14:29:23,052 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“22d8eece99eba033b8ff1c202547a1da5f4b2ddb”
2015-08-07 14:29:23,056 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 14:29:23,057 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:29:23,061 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:29:27,520 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:29:27,522 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:29:27,524 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 160
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=77401169@365ime.com,77401170@365ime.com&token=22d8eece99eba033b8ff1c202547a1da5f4b2ddb

2015-08-07 14:29:27,528 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:29:27,531 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:26:47 GMT
Server: Apache-Coyote/1.1
{"message":"invalid xsid !","data":{},"errorCode":"1"}
2015-08-07 14:29:27,537 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:29:27,540 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 14:29:27,548 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 14:29:27,550 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 14:29:27,617 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 14:29:27,619 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 14:29:27,662 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 14:29:27,663 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 14:29:27,665 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 14:29:27,666 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 14:29:27,669 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 14:29:27,670 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 14:29:27,672 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 14:29:27,673 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 14:29:27,674 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 14:29:27,705 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 14:29:27,706 [8] INFO  - 步骤“否”已成功结束
2015-08-07 14:29:27,708 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 14:29:27,709 [8] INFO  - 步骤“迭代 11”已成功结束
2015-08-07 14:29:27,712 [8] INFO  - 步骤“迭代 12”: 步骤“迭代 12”已启动
2015-08-07 14:29:27,714 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 14:29:27,716 [8] ERROR - Checkpoint 5: "Arguments[1]/ResultTable[1]/Row[1]/token[1]" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 14:29:27,718 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 14:29:27,719 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 14:29:27,721 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 14:29:27,722 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 14:29:27,723 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 14:29:27,723 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 14:29:27,725 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 14:29:27,726 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 14:29:27,772 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 14:29:27,773 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:29:38,281 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:29:38,282 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 14:29:38,288 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 14:29:38,289 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 14:29:38,291 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“”
2015-08-07 14:29:38,292 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:29:38,294 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:29:38,295 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“区分大小写”，值:“True”
2015-08-07 14:29:38,296 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“”
2015-08-07 14:29:38,298 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 14:29:38,299 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:29:38,301 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:29:42,828 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:29:42,832 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:29:42,834 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 100
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=77401169@365ime.com&token=

2015-08-07 14:29:42,836 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:29:42,839 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:27:02 GMT
Server: Apache-Coyote/1.1
{"message":"Parameter is error !","data":{},"errorCode":"2"}
2015-08-07 14:29:42,846 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:29:42,849 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 14:29:42,858 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 14:29:42,859 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 14:29:42,916 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 14:29:42,917 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 14:29:42,951 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 14:29:42,953 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 14:29:42,960 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 14:29:42,962 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 14:29:42,968 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 14:29:42,972 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 14:29:42,976 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 14:29:42,978 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 14:29:42,980 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 14:29:43,027 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 14:29:43,030 [8] INFO  - 步骤“否”已成功结束
2015-08-07 14:29:43,033 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 14:29:43,035 [8] INFO  - 步骤“迭代 12”已成功结束
2015-08-07 14:29:43,038 [8] INFO  - 步骤“迭代 13”: 步骤“迭代 13”已启动
2015-08-07 14:29:43,040 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 14:29:43,043 [8] ERROR - Checkpoint 5: "902ca048a73c5c8f2ad2e2ebe9ffebeb" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 14:29:43,048 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 14:29:43,051 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 14:29:43,054 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 14:29:43,055 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 14:29:43,057 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 14:29:43,059 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 14:29:43,062 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 14:29:43,065 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 14:29:43,104 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 14:29:43,105 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:29:52,652 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:29:52,654 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 14:29:52,656 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 14:29:52,657 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 14:29:52,661 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“902ca048a73c5c8f2ad2e2ebe9ffebeb”
2015-08-07 14:29:52,663 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:29:52,664 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:29:52,665 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“902ca048a73c5c8f2ad2e2ebe9ffebeb”
2015-08-07 14:29:52,666 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 14:29:52,667 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:29:52,668 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:29:57,228 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:29:57,233 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:29:57,235 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 132
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=77401169@365ime.com&token=902ca048a73c5c8f2ad2e2ebe9ffebeb

2015-08-07 14:29:57,237 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:29:57,240 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:27:17 GMT
Server: Apache-Coyote/1.1
{"message":"invalid token !","data":{},"errorCode":"1"}
2015-08-07 14:29:57,247 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:29:57,250 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 14:29:57,257 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 14:29:57,259 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 14:29:57,362 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 14:29:57,364 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 14:29:57,407 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 14:29:57,409 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 14:29:57,416 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 14:29:57,419 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 14:29:57,425 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 14:29:57,427 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 14:29:57,431 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 14:29:57,433 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 14:29:57,437 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 14:29:57,483 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 14:29:57,490 [8] INFO  - 步骤“否”已成功结束
2015-08-07 14:29:57,496 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 14:29:57,500 [8] INFO  - 步骤“迭代 13”已成功结束
2015-08-07 14:29:57,503 [8] INFO  - 步骤“迭代 14”: 步骤“迭代 14”已启动
2015-08-07 14:29:57,506 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 14:29:57,510 [8] ERROR - Checkpoint 5: "77401169@365ime.com" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 14:29:57,515 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 14:29:57,517 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 14:29:57,520 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 14:29:57,522 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 14:29:57,524 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 14:29:57,526 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 14:29:57,528 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 14:29:57,530 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 14:29:57,561 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 14:29:57,562 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:30:07,673 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:30:07,675 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 14:30:07,680 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 14:30:07,681 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 14:30:07,683 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“77401169@365ime.com”
2015-08-07 14:30:07,684 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:30:07,685 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:30:07,686 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“77401169@365ime.com”
2015-08-07 14:30:07,688 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 14:30:07,688 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:30:07,690 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:30:12,331 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:30:12,333 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:30:12,335 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 119
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=77401169@365ime.com&token=77401169@365ime.com

2015-08-07 14:30:12,338 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:30:12,340 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:27:32 GMT
Server: Apache-Coyote/1.1
{"message":"invalid token !","data":{},"errorCode":"1"}
2015-08-07 14:30:12,350 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:30:12,352 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 14:30:12,356 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 14:30:12,360 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 14:30:12,429 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 14:30:12,431 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 14:30:12,473 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 14:30:12,476 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 14:30:12,482 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 14:30:12,484 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 14:30:12,491 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 14:30:12,494 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 14:30:12,497 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 14:30:12,498 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 14:30:12,500 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 14:30:12,549 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 14:30:12,552 [8] INFO  - 步骤“否”已成功结束
2015-08-07 14:30:12,555 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 14:30:12,556 [8] INFO  - 步骤“迭代 14”已成功结束
2015-08-07 14:30:12,559 [8] INFO  - 步骤“迭代 15”: 步骤“迭代 15”已启动
2015-08-07 14:30:12,560 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 14:30:12,563 [8] ERROR - Checkpoint 5: "test" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 14:30:12,567 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 14:30:12,568 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 14:30:12,572 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 14:30:12,573 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 14:30:12,575 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 14:30:12,576 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 14:30:12,578 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 14:30:12,580 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 14:30:12,616 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 14:30:12,619 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:30:23,261 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:30:23,262 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 14:30:23,265 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 14:30:23,267 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 14:30:23,270 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“test”
2015-08-07 14:30:23,271 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:30:23,272 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:30:23,272 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“test”
2015-08-07 14:30:23,274 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 14:30:23,275 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:30:23,277 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:30:27,875 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:30:27,878 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:30:27,880 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 104
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=77401169@365ime.com&token=test

2015-08-07 14:30:27,882 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:30:27,884 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:27:48 GMT
Server: Apache-Coyote/1.1
{"message":"invalid token !","data":{},"errorCode":"1"}
2015-08-07 14:30:27,892 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:30:27,894 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 14:30:27,900 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 14:30:27,905 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 14:30:27,960 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 14:30:27,963 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 14:30:28,004 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 14:30:28,007 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 14:30:28,013 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 14:30:28,015 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 14:30:28,021 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 14:30:28,024 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 14:30:28,027 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 14:30:28,029 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 14:30:28,032 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 14:30:28,081 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 14:30:28,087 [8] INFO  - 步骤“否”已成功结束
2015-08-07 14:30:28,091 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 14:30:28,094 [8] INFO  - 步骤“迭代 15”已成功结束
2015-08-07 14:30:28,098 [8] INFO  - 步骤“迭代 16”: 步骤“迭代 16”已启动
2015-08-07 14:30:28,101 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 14:30:28,108 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 14:30:28,112 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 14:30:28,114 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 14:30:28,119 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 14:30:28,121 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 14:30:28,123 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 14:30:28,142 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 14:30:28,144 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 14:30:28,145 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 14:30:28,193 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 14:30:28,195 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:30:39,169 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:30:39,170 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 14:30:39,172 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 14:30:39,173 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 14:30:39,175 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:30:39,177 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:30:39,178 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 14:30:39,179 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 14:30:39,181 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 14:30:39,183 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:30:39,186 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:30:43,376 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:30:43,381 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:30:43,383 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 140
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=77401169@365ime.com&token=305bbc2b43542b3d0203daffe9073c3cba5b47d9

2015-08-07 14:30:43,385 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:30:43,387 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:28:03 GMT
Server: Apache-Coyote/1.1
{"message":"","data":{"Version":null,"userArray":[{"username":"文件助手","category":2,"subscription":"none","nickname":"","jid":"xm_file_assistant@365ime.com"},{"username":"张坤老师2","category":0,"subscription":"none","nickname":"123.abcD测试","jid":"77401170@365ime.com"},{"username":"张坤老师3","category":0,"subscription":"none","nickname":"测试修改其昵称","jid":"77401171@365ime.com"}]},"errorCode":"0"}
2015-08-07 14:30:43,393 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:30:43,398 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 14:30:43,405 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 14:30:43,406 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 14:30:43,469 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 14:30:43,471 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 14:30:43,513 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 14:30:43,516 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 14:30:43,523 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 14:30:43,525 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 14:30:43,529 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 14:30:43,531 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 14:30:43,533 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 14:30:43,535 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 14:30:43,537 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 14:30:43,578 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 14:30:43,581 [8] INFO  - 步骤“否”已成功结束
2015-08-07 14:30:43,582 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 14:30:43,584 [8] INFO  - 步骤“迭代 16”已成功结束
2015-08-07 14:30:43,585 [8] INFO  - 步骤“循环执行tb_getRoster_verification中的测试用例”已成功结束
2015-08-07 14:30:43,586 [8] INFO  - 步骤“对/iq/getRoster.php接口token实行加密”: 步骤“对/iq/getRoster.php接口token实行加密”已启动
2015-08-07 14:30:43,623 [8] INFO  - 步骤“对/iq/getRoster.php接口token实行加密”已成功结束
2015-08-07 14:30:43,625 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 14:30:54,213 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 14:30:54,218 [8] INFO  - 步骤“查询出加密后EncryptionResult字段的值”: 步骤“查询出加密后EncryptionResult字段的值”已启动
2015-08-07 14:30:54,222 [8] INFO  - 步骤“查询出加密后EncryptionResult字段的值”已成功结束
2015-08-07 14:30:54,223 [8] INFO  - 步骤“调用/iq/getRoster.php”: 步骤“调用/iq/getRoster.php”已启动
2015-08-07 14:30:54,226 [8] INFO  - 步骤“调用/iq/getRoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getRoster.php'
2015-08-07 14:30:54,329 [8] INFO  - 步骤“调用/iq/getRoster.php”: 服务器返回了状态代码: 200
2015-08-07 14:30:54,331 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始请求:
2015-08-07 14:30:54,336 [8] INFO  - 步骤“调用/iq/getRoster.php”: POST http://test-iq.365ime.com:8082/iq/getRoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 140
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=77401169@365ime.com&token=305bbc2b43542b3d0203daffe9073c3cba5b47d9

2015-08-07 14:30:54,339 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP 原始响应:
2015-08-07 14:30:54,341 [8] INFO  - 步骤“调用/iq/getRoster.php”: HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: application/json;charset=UTF-8
Date: Fri, 07 Aug 2015 06:28:14 GMT
Server: Apache-Coyote/1.1
{"message":"","data":{"Version":null,"userArray":[{"username":"文件助手","category":2,"subscription":"none","nickname":"","jid":"xm_file_assistant@365ime.com"},{"username":"张坤老师2","category":0,"subscription":"none","nickname":"123.abcD测试","jid":"77401170@365ime.com"},{"username":"张坤老师3","category":0,"subscription":"none","nickname":"测试修改其昵称","jid":"77401171@365ime.com"}]},"errorCode":"0"}
2015-08-07 14:30:54,347 [8] INFO  - 步骤“调用/iq/getRoster.php”已成功结束
2015-08-07 14:30:54,349 [8] INFO  - 步骤“将接口返回的Json更新至tb_result_table”: 步骤“将接口返回的Json更新至tb_result_table”已启动
2015-08-07 14:30:54,606 [8] INFO  - 步骤“将接口返回的Json更新至tb_result_table”已成功结束
2015-08-07 14:30:54,608 [8] INFO  - 步骤“迭代 1”已成功结束
2015-08-07 14:30:54,609 [8] INFO  - 步骤“测试流”已成功结束
2015-08-07 14:30:54,965 [8] INFO  - 步骤“结束”: 步骤“结束”已启动
2015-08-07 14:30:54,978 [8] INFO  - 步骤“结束”已成功结束
