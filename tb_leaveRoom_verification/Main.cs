/***************************************************************
    *  DO NOT EDIT THIS FILE!
    *         
    *  This file is automatically generated by HP Service Test.
    *  Manually changing the contents of this file may result in 
    *  loss of information.
    *          
    *  To edit the test, open the file ‘tb_leaveRoom_verification.st’ 
    *  in HP Service Test.
     ***************************************************************/
    
    namespace Script
    {
    using System;
    using System.Text;
    using System.Threading;
    using System.Xml;
    using System.Xml.Schema;
    using HP.ST.Fwk.ReporterFWK;
    using HP.ST.Shared.Utilities;
    using HP.ST.Ext.BindingImpl.Getters;
    using HP.ST.Ext.BindingImpl.Setters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.PropInfo;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Getters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Setters;
    using HP.ST.Fwk.RunTimeFWK;
    using HP.ST.Fwk.RunTimeFWK.Utilities;
    using HP.ST.Fwk.RunTimeFWK.HelperClasses;
    using HP.ST.Fwk.RunTimeFWK.CompositeActivities;
    using HP.ST.Ext.BindingImpl.Setters.DataSourceSetters;
    using HP.ST.Fwk.JVMLoader;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using HP.ST.Fwk.SOAReplayAPI;
    using HP.ST.Fwk.UFTLicensing;
    
    
    
    public partial class WorkFlowScript : STWorkFlowScriptBase
    {    
    	TestUserCode _userCode = null;
    	TestEntities _flow = null;
    	static Reporter reporter;
    	int reportLevelInTree;
        HP.ST.Fwk.ReportCreator.QTPEngine.QTPEngineReportCreator reportCreator;
    	
    	public BindDirection bind_dir1574 = null;
        public BindDirection bind_dir1575 = null;
        public BindDirection bind_dir1576 = null;
        public BindDirection bind_dir1577 = null;
        public HP.ST.Ext.BasicActivities.DataCursorActivity DataCursorActivity284 = null;
        public BindDirection bind_dir1578 = null;
        public HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy DataCursorActivity284_Policy = null;
        public BindDirection bind_dir1579 = null;
        public BindDirection bind_dir1580 = null;
        public BindDirection bind_dir1581 = null;
        public BindDirection bind_dir1582 = null;
        public BindDirection bind_dir1583 = null;
        public BindDirection bind_dir1584 = null;
        public BindDirection bind_dir1585 = null;
        public BindDirection bind_dir1586 = null;
        public BindDirection bind_dir1587 = null;
        public BindDirection bind_dir1588 = null;
        public BindDirection bind_dir1589 = null;
        public BindDirection bind_dir1590 = null;
        public BindDirection bind_dir1591 = null;
        public BindDirection bind_dir1592 = null;
        public BindDirection bind_dir1593 = null;
        public BindDirection bind_dir1594 = null;
        public BindDirection bind_dir1595 = null;
        public BindDirection bind_dir1596 = null;
        public BindDirection bind_dir1597 = null;
        public BindDirection bind_dir1598 = null;
        public BindDirection bind_dir1599 = null;
        public BindDirection bind_dir1600 = null;
        public BindDirection bind_dir1601 = null;
        public BindDirection bind_dir1602 = null;
        public BindDirection bind_dir1603 = null;
        public BindDirection bind_dir1604 = null;
        public BindDirection bind_dir1605 = null;
        public BindDirection bind_dir1606 = null;
        public BindDirection bind_dir1607 = null;
        public BindDirection bind_dir1608 = null;
        public BindDirection bind_dir1609 = null;
        public BindDirection bind_dir1610 = null;
        public BindDirection bind_dir1611 = null;
        public BindDirection bind_dir1612 = null;
        public BindDirection bind_dir1613 = null;
        public BindDirection bind_dir1614 = null;
        public BindDirection bind_dir1615 = null;
        public BindDirection bind_dir1616 = null;
        public BindDirection bind_dir1617 = null;
        public BindDirection bind_dir1618 = null;
        public BindDirection bind_dir1619 = null;
        public BindDirection bind_dir1620 = null;
        public BindDirection bind_dir1621 = null;
        public BindDirection bind_dir1622 = null;
        public BindDirection bind_dir1623 = null;
        public HP.ST.Ext.BasicActivities.DataCursorActivity DataCursorActivity285 = null;
        public BindDirection bind_dir1624 = null;
        public HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy DataCursorActivity285_Policy = null;
        public BindDirection bind_dir1625 = null;
        public BindDirection bind_dir1626 = null;
        public BindDirection bind_dir1627 = null;
        public BindDirection bind_dir1628 = null;
        public BindDirection bind_dir1629 = null;
        public BindDirection bind_dir1630 = null;
        public BindDirection bind_dir1631 = null;
        public BindDirection bind_dir1632 = null;
        public BindDirection bind_dir1633 = null;
        public BindDirection bind_dir1634 = null;
        public BindDirection bind_dir1635 = null;
        public BindDirection bind_dir1636 = null;
        public BindDirection bind_dir1637 = null;
        public BindDirection bind_dir1638 = null;
        public BindDirection bind_dir1639 = null;
        public BindDirection bind_dir1640 = null;
        public BindDirection bind_dir1641 = null;
        public BindDirection bind_dir1642 = null;
        public BindDirection bind_dir1643 = null;
        public BindDirection bind_dir1644 = null;
        public BindDirection bind_dir1645 = null;
        public BindDirection bind_dir1646 = null;
        public BindDirection bind_dir1647 = null;
        public BindDirection bind_dir1648 = null;
        public BindDirection bind_dir1649 = null;
        public BindDirection bind_dir1650 = null;
        public BindDirection bind_dir1651 = null;
        public BindDirection bind_dir1652 = null;
        public BindDirection bind_dir1653 = null;
        public BindDirection bind_dir1654 = null;
        public BindDirection bind_dir1655 = null;
        public BindDirection bind_dir1656 = null;
        public BindDirection bind_dir1657 = null;
        public BindDirection bind_dir1658 = null;
        public BindDirection bind_dir1659 = null;
        public BindDirection bind_dir1660 = null;
        public BindDirection bind_dir1661 = null;
        public BindDirection bind_dir1662 = null;
        public BindDirection bind_dir1663 = null;
        public BindDirection bind_dir1664 = null;
        public BindDirection bind_dir1665 = null;
        public BindDirection bind_dir1666 = null;
        public BindDirection bind_dir1667 = null;
        public BindDirection bind_dir1668 = null;
        public BindDirection bind_dir1669 = null;
        public BindDirection bind_dir1670 = null;
        public BindDirection bind_dir1671 = null;
        public BindDirection bind_dir1672 = null;
        public BindDirection bind_dir1673 = null;
        public BindDirection bind_dir1674 = null;
        public BindDirection bind_dir1675 = null;
        public BindDirection bind_dir1676 = null;
        public BindDirection bind_dir1677 = null;
        
        public IEnumerable<FeaturesGroup> LicensedFeatures
        {
        
        get
        {
        List<FeaturesGroup> features = new List<FeaturesGroup>();
        FeaturesGroup fg1 = new FeaturesGroup();
            fg1.Add(new LicenseFeature("UnifiedFunctionalTesting","1.0"));
            fg1.Add(new LicenseFeature("UnifiedFunctionalTesting","1.1"));
            fg1.Add(new LicenseFeature("UnifiedFunctionalTesting","1.2"));
            features.Add(fg1);
            FeaturesGroup fg2 = new FeaturesGroup();
            FeaturesGroup fg3 = new FeaturesGroup();
            return features;
        
        }
        
        }
        
        public WorkFlowScript()
            : base(VuserClass.CommandLineArguments, new STRunTimeContext(), "test")
        {	
        	UpdateContextWithActionFolder(String.Empty);
        	
        }
        
        public WorkFlowScript(ISTRunTimeContext ctx)
            : base(VuserClass.CommandLineArguments, ctx, "test")
            
        {
        	this._context = ctx;
        	UpdateContextWithActionFolder(String.Empty);
        	UpdateTestSettings(ctx);
        }
        
        internal void InitializeComponent()
        {
        	LoadInput();
        	
        	InitReport();
        	
        	InitializeEncryptionManagerValues();
        
        	_userCode = new TestUserCode();
            _flow = _userCode;
            _flow.Context=this._context;
            
            
        
        	_flow.DataFetchActivity280 = new HP.ST.Ext.BasicActivities.DataFetchActivity(_context,"DataFetchActivity280");
            _flow.DataFetchActivity277 = new HP.ST.Ext.BasicActivities.DataFetchActivity(_context,"DataFetchActivity277");
            _flow.StartActivity1 = new HP.ST.Ext.BasicActivities.StartActivity(_context,"StartActivity1");
            _flow.Loop2 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Loop<Loop2Input>(_context,"Loop2",LoopType.For);
            _flow.DataExporterActivity279 = new HP.ST.Ext.BasicActivities.DataExporterActivity(_context,"DataExporterActivity279");
            _flow.DataExporterActivity282 = new HP.ST.Ext.BasicActivities.DataExporterActivity(_context,"DataExporterActivity282");
            _flow.DataExporterCloseActivity283 = new HP.ST.Ext.BasicActivities.DataExporterCloseActivity(_context,"DataExporterCloseActivity283");
            _flow.EndActivity3 = new HP.ST.Ext.BasicActivities.EndActivity(_context,"EndActivity3");
            _flow.DataDisconnectActivity278 = new HP.ST.Ext.BasicActivities.DataDisconnectActivity(_context,"DataDisconnectActivity278");
            _flow.DataDisconnectActivity281 = new HP.ST.Ext.BasicActivities.DataDisconnectActivity(_context,"DataDisconnectActivity281");
            this.DataCursorActivity284 = new HP.ST.Ext.BasicActivities.DataCursorActivity(_context,"DataCursorActivity284");
            this.DataCursorActivity284_Policy = new HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy();
            _flow.Sequence275 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Sequence(_context,"Sequence275");
            _flow.DbOpenConnection39 = new HP.ST.Ext.DatabaseRunTime.DbOpenConnection(_context,"DbOpenConnection39");
            _flow.DbFetchData58 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData58");
            _flow.DbFetchData248 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData248");
            _flow.DbFetchData247 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData247");
            _flow.DbFetchData249 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData249");
            _flow.DbFetchData252 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData252");
            _flow.CallQTPTest253 = new HP.ST.Ext.UFTActivity.QtpTestActivity(_context,"CallQTPTest253");
            _flow.DbFetchData254 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData254");
            _flow.HTTPActivity250 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity250");
            _flow.StringToJsonActivity251 = new HP.ST.Ext.TransformJsonActivity.StringToJsonActivity(_context,"StringToJsonActivity251");
            _flow.Loop56 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Loop<Loop56Input>(_context,"Loop56",LoopType.For);
            _flow.HTTPActivity270 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity270");
            _flow.HTTPActivity271 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity271");
            _flow.StringToJsonActivity272 = new HP.ST.Ext.TransformJsonActivity.StringToJsonActivity(_context,"StringToJsonActivity272");
            _flow.HTTPActivity273 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity273");
            _flow.DbFetchData74 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData74");
            _flow.CallQTPTest75 = new HP.ST.Ext.UFTActivity.QtpTestActivity(_context,"CallQTPTest75");
            _flow.DbFetchData76 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData76");
            _flow.HTTPActivity73 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity73");
            _flow.DbFetchData77 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData77");
            this.DataCursorActivity285 = new HP.ST.Ext.BasicActivities.DataCursorActivity(_context,"DataCursorActivity285");
            this.DataCursorActivity285_Policy = new HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy();
            _flow.Sequence276 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Sequence(_context,"Sequence276");
            _flow.HTTPActivity257 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity257");
            _flow.HTTPActivity259 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity259");
            _flow.StringToJsonActivity260 = new HP.ST.Ext.TransformJsonActivity.StringToJsonActivity(_context,"StringToJsonActivity260");
            _flow.HTTPActivity263 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity263");
            _flow.DbFetchData57 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData57");
            _flow.ReplaceStringActivity264 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity264");
            _flow.DbFetchData265 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData265");
            _flow.CallQTPTest266 = new HP.ST.Ext.UFTActivity.QtpTestActivity(_context,"CallQTPTest266");
            _flow.DbFetchData267 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData267");
            _flow.ReplaceStringActivity268 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity268");
            _flow.ReplaceStringActivity274 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity274");
            _flow.HTTPActivity59 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity59");
            _flow.StringToJsonActivity60 = new HP.ST.Ext.TransformJsonActivity.StringToJsonActivity(_context,"StringToJsonActivity60");
            _flow.DbFetchData61 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData61");
            _flow.DbFetchData62 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData62");
            _flow.DbFetchData117 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData117");
            _flow.DbFetchData63 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData63");
            _flow.IfElse64 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.IfElse<IfElse64Input>(_context,"IfElse64");
            _flow.IfElseBranch65 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.IfElseBranch(_context,"IfElseBranch65");
            _flow.IfElseBranch66 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.IfElseBranch(_context,"IfElseBranch66");
            _flow.DbFetchData67 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData67");
            _flow.DbFetchData68 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData68");
            _flow.DataFetchActivity280.Comment = @"";
            _flow.DataFetchActivity280.IconPath = @"";
            _flow.DataFetchActivity280.AssemblyPath = @"AddIns\ServiceTest\BaseDataProviders\HP.ST.Ext.CustomDataProviders.dll";
            _flow.DataFetchActivity280.QueryClassName = @"HP.ST.Ext.CustomDataProviders.DbDataQuery";
            XmlDocument DataFetchActivity280_QueryParameters_Document = new XmlDocument();
            DataFetchActivity280_QueryParameters_Document.PreserveWhitespace = true;
            string xmlDataFetchActivity280Params = @"<Arguments><QueryParametersContainer><QueryParameter><Name>Id</Name><Value>6704d522-5d6d-4d1f-b543-b5d5e85e7f33</Value></QueryParameter><QueryParameter><Name>QueryName</Name><Value>tb_sso_authorize_verification</Value></QueryParameter><QueryParameter><Name>IsEmbedded</Name><Value>True</Value></QueryParameter><QueryParameter><Name>Externalized</Name><Value>False</Value></QueryParameter><QueryParameter><Name>GroupText</Name><Value></Value></QueryParameter><QueryParameter><Name>ConnectionString</Name><Value>DSN=localhost;Uid=root;Pwd={PWD};</Value></QueryParameter><QueryParameter><Name>SqlStatement</Name><Value>select * from tb_sso_authorize_verification</Value></QueryParameter><QueryParameter><Name>Password</Name><Value>UqIq+/M1hvnEiRgp6HH+dg==</Value></QueryParameter><QueryParameter><Name>DatabaseType</Name><Value>ODBC</Value></QueryParameter></QueryParametersContainer></Arguments>";
            DataFetchActivity280_QueryParameters_Document.LoadXml(xmlDataFetchActivity280Params);
            _flow.DataFetchActivity280.QueryParameters = DataFetchActivity280_QueryParameters_Document;
            _flow.dataSourceNameToDataSource.Add("tb_sso_authorize_verification", _flow.DataFetchActivity280);
            this.Activities.Add (_flow.DataFetchActivity280);
            _flow.DataFetchActivity277.Comment = @"";
            _flow.DataFetchActivity277.IconPath = @"";
            _flow.DataFetchActivity277.AssemblyPath = @"AddIns\ServiceTest\BaseDataProviders\HP.ST.Ext.CustomDataProviders.dll";
            _flow.DataFetchActivity277.QueryClassName = @"HP.ST.Ext.CustomDataProviders.DbDataQuery";
            XmlDocument DataFetchActivity277_QueryParameters_Document = new XmlDocument();
            DataFetchActivity277_QueryParameters_Document.PreserveWhitespace = true;
            string xmlDataFetchActivity277Params = @"<Arguments><QueryParametersContainer><QueryParameter><Name>Id</Name><Value>3c16ad12-8441-44fc-ba3f-59f4289acca5</Value></QueryParameter><QueryParameter><Name>QueryName</Name><Value>tb_global_table</Value></QueryParameter><QueryParameter><Name>IsEmbedded</Name><Value>True</Value></QueryParameter><QueryParameter><Name>Externalized</Name><Value>False</Value></QueryParameter><QueryParameter><Name>GroupText</Name><Value></Value></QueryParameter><QueryParameter><Name>ConnectionString</Name><Value>DSN=localhost;Uid=root;Pwd={PWD};</Value></QueryParameter><QueryParameter><Name>SqlStatement</Name><Value>select * from tb_global_table where TestCase = '1'</Value></QueryParameter><QueryParameter><Name>Password</Name><Value>UqIq+/M1hvnEiRgp6HH+dg==</Value></QueryParameter><QueryParameter><Name>DatabaseType</Name><Value>ODBC</Value></QueryParameter></QueryParametersContainer></Arguments>";
            DataFetchActivity277_QueryParameters_Document.LoadXml(xmlDataFetchActivity277Params);
            _flow.DataFetchActivity277.QueryParameters = DataFetchActivity277_QueryParameters_Document;
            _flow.dataSourceNameToDataSource.Add("tb_global_table", _flow.DataFetchActivity277);
            this.Activities.Add (_flow.DataFetchActivity277);
            _flow.StartActivity1.Comment = @"";
            _flow.StartActivity1.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_code_activity.png";
            _flow.StartActivity1.Name = @"开始";
            this.Activities.Add (_flow.StartActivity1);
            _flow.Loop2.ConditionAsString = @"Run for 1 iteration";
            _flow.Loop2.NumberOfIterations = (int)1;
            _flow.Loop2.Comment = @"";
            _flow.Loop2.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_loop.png";
            _flow.Loop2.Name = @"测试流";
            _flow.Loop2.Activities.Add (this.DataCursorActivity284);
            _flow.Loop2.Activities.Add (_flow.Sequence275);
            this.Activities.Add (_flow.Loop2);
            _flow.DataExporterActivity279.Comment = @"";
            _flow.DataExporterActivity279.IconPath = @"";
            VTDPropertyInfoBase pi3197 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1624 = new VTDObjectGetter(pi3197);
            VTDPropertyInfoBase pi3198 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter1574 = new VTDObjectSetter(pi3198);
            binding_setter1574 = new StringFormaterDecorator(binding_setter1574,"{Step.DataFetchActivity277.OutTable}");
            bind_dir1574 = new BindDirection(_flow.DataFetchActivity277,binding_getter1624,binding_setter1574,BindTargetType.ToInProperty);
            _flow.DataExporterActivity279.InDirections.Add(bind_dir1574);
            this.Activities.Add (_flow.DataExporterActivity279);
            _flow.DataExporterActivity282.Comment = @"";
            _flow.DataExporterActivity282.IconPath = @"";
            VTDPropertyInfoBase pi3199 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1625 = new VTDObjectGetter(pi3199);
            VTDPropertyInfoBase pi3200 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter1575 = new VTDObjectSetter(pi3200);
            binding_setter1575 = new StringFormaterDecorator(binding_setter1575,"{Step.DataFetchActivity280.OutTable}");
            bind_dir1575 = new BindDirection(_flow.DataFetchActivity280,binding_getter1625,binding_setter1575,BindTargetType.ToInProperty);
            _flow.DataExporterActivity282.InDirections.Add(bind_dir1575);
            this.Activities.Add (_flow.DataExporterActivity282);
            _flow.DataExporterCloseActivity283.Comment = @"";
            _flow.DataExporterCloseActivity283.IconPath = @"";
            this.Activities.Add (_flow.DataExporterCloseActivity283);
            _flow.EndActivity3.Comment = @"";
            _flow.EndActivity3.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_code_activity.png";
            _flow.EndActivity3.Name = @"结束";
            this.Activities.Add (_flow.EndActivity3);
            _flow.DataDisconnectActivity278.Comment = @"";
            _flow.DataDisconnectActivity278.IconPath = @"";
            VTDPropertyInfoBase pi3201 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1626 = new VTDObjectGetter(pi3201);
            VTDPropertyInfoBase pi3202 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter1576 = new VTDObjectSetter(pi3202);
            binding_setter1576 = new StringFormaterDecorator(binding_setter1576,"{Step.DataFetchActivity277.OutTable}");
            bind_dir1576 = new BindDirection(_flow.DataFetchActivity277,binding_getter1626,binding_setter1576,BindTargetType.ToInProperty);
            _flow.DataDisconnectActivity278.InDirections.Add(bind_dir1576);
            this.Activities.Add (_flow.DataDisconnectActivity278);
            _flow.DataDisconnectActivity281.Comment = @"";
            _flow.DataDisconnectActivity281.IconPath = @"";
            VTDPropertyInfoBase pi3203 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1627 = new VTDObjectGetter(pi3203);
            VTDPropertyInfoBase pi3204 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter1577 = new VTDObjectSetter(pi3204);
            binding_setter1577 = new StringFormaterDecorator(binding_setter1577,"{Step.DataFetchActivity280.OutTable}");
            bind_dir1577 = new BindDirection(_flow.DataFetchActivity280,binding_getter1627,binding_setter1577,BindTargetType.ToInProperty);
            _flow.DataDisconnectActivity281.InDirections.Add(bind_dir1577);
            this.Activities.Add (_flow.DataDisconnectActivity281);
            this.DataCursorActivity284.Comment = @"";
            this.DataCursorActivity284.IconPath = @"";
            VTDPropertyInfoBase pi3205 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1628 = new VTDObjectGetter(pi3205);
            VTDPropertyInfoBase pi3206 = new VTDPropertyInfoBase("InTable");
            VTDBaseSetter binding_setter1578 = new VTDObjectSetter(pi3206);
            binding_setter1578 = new StringFormaterDecorator(binding_setter1578,"{Step.DataFetchActivity277.OutTable}");
            bind_dir1578 = new BindDirection(_flow.DataFetchActivity277,binding_getter1628,binding_setter1578,BindTargetType.ToInProperty);
            this.DataCursorActivity284.InDirections.Add(bind_dir1578);
            this.DataCursorActivity284_Policy.StartPosition = CursorStartPosition.FirstRecord;
            this.DataCursorActivity284_Policy.StartAtSpecificRow = 1;
            this.DataCursorActivity284_Policy.StartCondition.ColumnName = "";
            this.DataCursorActivity284_Policy.StartCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity284_Policy.StartCondition.Value = "";
            this.DataCursorActivity284_Policy.EndPosition = CursorEndPosition.LastRecord;
            this.DataCursorActivity284_Policy.EndAtSpecificRow = 1;
            this.DataCursorActivity284_Policy.EndCondition.ColumnName = "";
            this.DataCursorActivity284_Policy.EndCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity284_Policy.EndCondition.Value = "";
            this.DataCursorActivity284_Policy.StepType = CursorStepType.Forward;
            this.DataCursorActivity284_Policy.StepSize = 1;
            this.DataCursorActivity284_Policy.ActionAfterLastRecord = CursorActionAfterLastRecord.Wraparound;
            this.DataCursorActivity284.Policy = this.DataCursorActivity284_Policy;
            this.DataCursorActivity284.ReportStepData = true;
            _flow.Loop2.BeforeExecuteStepEvent += this.DataCursorActivity284.ResetCursor;
            _flow.Sequence275.Comment = @"";
            _flow.Sequence275.IconPath = @"";
            _flow.Sequence275.Name = @"序列275";
            _flow.Sequence275.Activities.Add (_flow.DbOpenConnection39);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData58);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData248);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData247);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData249);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData252);
            _flow.Sequence275.Activities.Add (_flow.CallQTPTest253);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData254);
            _flow.Sequence275.Activities.Add (_flow.HTTPActivity250);
            _flow.Sequence275.Activities.Add (_flow.StringToJsonActivity251);
            _flow.Sequence275.Activities.Add (_flow.Loop56);
            _flow.Sequence275.Activities.Add (_flow.HTTPActivity270);
            _flow.Sequence275.Activities.Add (_flow.HTTPActivity271);
            _flow.Sequence275.Activities.Add (_flow.StringToJsonActivity272);
            _flow.Sequence275.Activities.Add (_flow.HTTPActivity273);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData74);
            _flow.Sequence275.Activities.Add (_flow.CallQTPTest75);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData76);
            _flow.Sequence275.Activities.Add (_flow.HTTPActivity73);
            _flow.Sequence275.Activities.Add (_flow.DbFetchData77);
            _flow.DbOpenConnection39.ConnectionString = @"DSN=localhost;Uid=root;Pwd={PWD};";
            _flow.DbOpenConnection39.Password = @"UqIq+/M1hvnEiRgp6HH+dg==";
            _flow.DbOpenConnection39.DatabaseType = HP.ST.Shared.Utilities.DB.DatabaseType.ODBC;
            _flow.DbOpenConnection39.Comment = @"";
            _flow.DbOpenConnection39.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_connect.png";
            _flow.DbOpenConnection39.Name = @"连接到mysql数据库";
            _flow.DbFetchData58.QueryString = @"select count(*) as 'Row' from tb_kickFromRoom_verification";
            _flow.DbFetchData58.Timeout = (int)30;
            _flow.DbFetchData58.Comment = @"";
            _flow.DbFetchData58.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData58.Name = @"获取到tb_leaveRoom_verification表有效行数";
            VTDPropertyInfoBase pi3207 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1629 = new VTDObjectGetter(pi3207);
            VTDPropertyInfoBase pi3208 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1579 = new VTDObjectSetter(pi3208);
            bind_dir1579 = new BindDirection(_flow.DbOpenConnection39,binding_getter1629,binding_setter1579,BindTargetType.ToInProperty);
            _flow.DbFetchData58.InDirections.Add(bind_dir1579);
            XmlDocument DbFetchData58_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData58_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData58_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><Row>37</Row></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData58.ExpectedOutputProperties = DbFetchData58_ExpectedOutputProperties_Document;
            _flow.DbFetchData248.QueryString = @"select groupJid from tb_global_table where TestCase = 1";
            _flow.DbFetchData248.Timeout = (int)30;
            _flow.DbFetchData248.Comment = @"";
            _flow.DbFetchData248.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData248.Name = @"查询全局表中groupJid";
            VTDPropertyInfoBase pi3209 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1630 = new VTDObjectGetter(pi3209);
            VTDPropertyInfoBase pi3210 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1580 = new VTDObjectSetter(pi3210);
            bind_dir1580 = new BindDirection(_flow.DbOpenConnection39,binding_getter1630,binding_setter1580,BindTargetType.ToInProperty);
            _flow.DbFetchData248.InDirections.Add(bind_dir1580);
            XmlDocument DbFetchData248_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData248_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData248_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><groupJid /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData248.ExpectedOutputProperties = DbFetchData248_ExpectedOutputProperties_Document;
            _flow.DbFetchData247.QueryString = @"select ResponseXsid from tb_global_table where TestCase = 1";
            _flow.DbFetchData247.Timeout = (int)30;
            _flow.DbFetchData247.Comment = @"";
            _flow.DbFetchData247.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData247.Name = @"查询tb_global_table表中ResponseXsid值";
            VTDPropertyInfoBase pi3211 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1631 = new VTDObjectGetter(pi3211);
            VTDPropertyInfoBase pi3212 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1581 = new VTDObjectSetter(pi3212);
            bind_dir1581 = new BindDirection(_flow.DbOpenConnection39,binding_getter1631,binding_setter1581,BindTargetType.ToInProperty);
            _flow.DbFetchData247.InDirections.Add(bind_dir1581);
            XmlDocument DbFetchData247_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData247_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData247_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><ResponseXsid /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData247.ExpectedOutputProperties = DbFetchData247_ExpectedOutputProperties_Document;
            _flow.DbFetchData249.QueryString = @"select LoginStudentUsername,LoginPassword from tb_global_table where TestCase = 1";
            _flow.DbFetchData249.Timeout = (int)30;
            _flow.DbFetchData249.Comment = @"";
            _flow.DbFetchData249.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData249.Name = @"获取全局表中用户名密码";
            VTDPropertyInfoBase pi3213 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1632 = new VTDObjectGetter(pi3213);
            VTDPropertyInfoBase pi3214 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1582 = new VTDObjectSetter(pi3214);
            bind_dir1582 = new BindDirection(_flow.DbOpenConnection39,binding_getter1632,binding_setter1582,BindTargetType.ToInProperty);
            _flow.DbFetchData249.InDirections.Add(bind_dir1582);
            XmlDocument DbFetchData249_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData249_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData249_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><LoginStudentUsername /><LoginPassword /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData249.ExpectedOutputProperties = DbFetchData249_ExpectedOutputProperties_Document;
            _flow.DbFetchData252.QueryString = @"update tb_global_table set EncryptionStr = '{DataSource.tb_global_table.LoginPassword}' where TestCase = 1";
            _flow.DbFetchData252.Timeout = (int)30;
            _flow.DbFetchData252.Comment = @"";
            _flow.DbFetchData252.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData252.Name = @"将需要加密的信息赋值到全局表中EncryptionStr";
            VTDPropertyInfoBase pi3215 = new VTDPropertyInfoBase("LoginPassword");
            VTDBaseGetter binding_getter1633 = new VTDObjectGetter(pi3215);
            VTDPropertyInfoBase pi3216 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1583 = new VTDObjectSetter(pi3216);
            binding_setter1583 = new StringFormaterDecorator(binding_setter1583,"{DataSource.tb_global_table.LoginPassword}");
            bind_dir1583 = new BindDirection(this.DataCursorActivity284,binding_getter1633,binding_setter1583,BindTargetType.ToInProperty);
            _flow.DbFetchData252.InDirections.Add(bind_dir1583);
            VTDPropertyInfoBase pi3217 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1634 = new VTDObjectGetter(pi3217);
            VTDPropertyInfoBase pi3218 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1584 = new VTDObjectSetter(pi3218);
            bind_dir1584 = new BindDirection(_flow.DbOpenConnection39,binding_getter1634,binding_setter1584,BindTargetType.ToInProperty);
            _flow.DbFetchData252.InDirections.Add(bind_dir1584);
            XmlDocument DbFetchData252_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData252_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData252_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData252.ExpectedOutputProperties = DbFetchData252_ExpectedOutputProperties_Document;
            _flow.CallQTPTest253.Comment = @"";
            _flow.CallQTPTest253.IconPath = @"AddIns\ServiceTest\UFT\toolbox_qtp.png";
            _flow.CallQTPTest253.Name = @"Encryption.SHA1";
            _flow.CallQTPTest253.ScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.ScriptPath}")) ? @"..\Encryption" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.ScriptPath}");
            _flow.CallQTPTest253.ActionName = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.ActionName}")) ? @"SHA1" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.ActionName}");
            _flow.CallQTPTest253.Description = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.Description}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.Description}");
            _flow.CallQTPTest253.IsActionSelected = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.IsActionSelected}")) ? @"True" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.IsActionSelected}");
            _flow.CallQTPTest253.ResultLocation = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.ResultLocation}")) ? @"RunQTPReport\" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.ResultLocation}");
            _flow.CallQTPTest253.QCScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.QCScriptPath}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest253.QCScriptPath}");
            _flow.DbFetchData254.QueryString = @"select EncryptionResult from tb_global_table where TestCase = 1";
            _flow.DbFetchData254.Timeout = (int)30;
            _flow.DbFetchData254.Comment = @"";
            _flow.DbFetchData254.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData254.Name = @"查询出全局表中EncryptionResult字段";
            VTDPropertyInfoBase pi3219 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1635 = new VTDObjectGetter(pi3219);
            VTDPropertyInfoBase pi3220 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1585 = new VTDObjectSetter(pi3220);
            bind_dir1585 = new BindDirection(_flow.DbOpenConnection39,binding_getter1635,binding_setter1585,BindTargetType.ToInProperty);
            _flow.DbFetchData254.InDirections.Add(bind_dir1585);
            XmlDocument DbFetchData254_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData254_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData254_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><EncryptionResult /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData254.ExpectedOutputProperties = DbFetchData254_ExpectedOutputProperties_Document;
            _flow.HTTPActivity250.TextBody = @"";
            _flow.HTTPActivity250.TextXmlBody = @"";
            _flow.HTTPActivity250.FileBody = @"";
            _flow.HTTPActivity250.PostBody = @"";
            _flow.HTTPActivity250.Url = @"{DataSource.tb_global_table.qdHost}{DataSource.tb_global_table.login}";
            _flow.HTTPActivity250.HttpMethod = @"POST";
            _flow.HTTPActivity250.HttpVersion = @"1.1";
            _flow.HTTPActivity250.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity250.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity250.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity250.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity250.Comment = @"";
            _flow.HTTPActivity250.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity250.RequestBodyType = @"Text";
            _flow.HTTPActivity250.ResponseType = @"Text";
            _flow.HTTPActivity250.Name = @"调用登录接口进行学生登录操作";
            _flow.HTTPActivity250.Proxy.Server = @"";
            _flow.HTTPActivity250.Proxy.Username = @"";
            _flow.HTTPActivity250.Proxy.Password = @"";
            _flow.HTTPActivity250.Authentication.Username = @"";
            _flow.HTTPActivity250.Authentication.Password = @"";
            _flow.HTTPActivity250.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity250.Timeout = (int)100000;
            _flow.HTTPActivity250.ClientCertificate.Password = @"";
            _flow.HTTPActivity250.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity250.UseClientCertificate = false;
            _flow.HTTPActivity250.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity250.AllowRedirections = true;
            _flow.HTTPActivity250.ReuseCookies = false;
            _flow.HTTPActivity250.ExpectServerError = false;
            XmlDocument HTTPActivity250_XMLBody_Document = new XmlDocument();
            HTTPActivity250_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity250_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity250.XMLBody = HTTPActivity250_XMLBody_Document;
            XmlDocument HTTPActivity250_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity250_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity250_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity250.RequestMultipartInfoXml = HTTPActivity250_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity250.Multipart=false;
            VTDPropertyInfoBase pi3221 = new VTDPropertyInfoBase("qdHost");
            VTDBaseGetter binding_getter1636 = new VTDObjectGetter(pi3221);
            VTDPropertyInfoBase pi3222 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1586 = new VTDObjectSetter(pi3222);
            binding_setter1586 = new StringFormaterDecorator(binding_setter1586,"{DataSource.tb_global_table.qdHost}");
            bind_dir1586 = new BindDirection(this.DataCursorActivity284,binding_getter1636,binding_setter1586,BindTargetType.ToInProperty);
            _flow.HTTPActivity250.InDirections.Add(bind_dir1586);
            VTDPropertyInfoBase pi3223 = new VTDPropertyInfoBase("login");
            VTDBaseGetter binding_getter1637 = new VTDObjectGetter(pi3223);
            VTDPropertyInfoBase pi3224 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1587 = new VTDObjectSetter(pi3224);
            binding_setter1587 = new StringFormaterDecorator(binding_setter1587,"{DataSource.tb_global_table.login}");
            bind_dir1587 = new BindDirection(this.DataCursorActivity284,binding_getter1637,binding_setter1587,BindTargetType.ToInProperty);
            _flow.HTTPActivity250.InDirections.Add(bind_dir1587);
            VTDPropertyInfoBase pi3225 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1638 = new VTDObjectGetter(pi3225);
            VTDPropertyInfoBase pi3226 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1588 = new VTDObjectSetter(pi3226);
            binding_setter1588 = new StringFormaterDecorator(binding_setter1588,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1588 = new BindDirection(this.DataCursorActivity284,binding_getter1638,binding_setter1588,BindTargetType.ToInProperty);
            _flow.HTTPActivity250.InDirections.Add(bind_dir1588);
            VTDPropertyInfoBase pi3227 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1639 = new VTDObjectGetter(pi3227);
            VTDPropertyInfoBase pi3228 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1589 = new VTDObjectSetter(pi3228);
            binding_setter1589 = new StringFormaterDecorator(binding_setter1589,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1589 = new BindDirection(this.DataCursorActivity284,binding_getter1639,binding_setter1589,BindTargetType.ToInProperty);
            _flow.HTTPActivity250.InDirections.Add(bind_dir1589);
            XmlDocument HTTPActivity250_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity250_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity250_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity250.ExpectedResponseXmlBody = HTTPActivity250_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity250_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity250_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity250_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity250.ExpectedResponseJsonBody = HTTPActivity250_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity250_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity250_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity250_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity250.ExpectedOutputProperties = HTTPActivity250_ExpectedOutputProperties_Document;
            _flow.StringToJsonActivity251.InputString = @"{Step.OutputProperties.HTTPActivity250.ResponseBody}";
            _flow.StringToJsonActivity251.Comment = @"";
            _flow.StringToJsonActivity251.IconPath = @"AddIns\ServiceTest\TransformJson\ictb_string_to_json_16.png";
            _flow.StringToJsonActivity251.Name = @"将登录接口返回的response转换为JSON";
            VTDPropertyInfoBase pi3229 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1640 = new VTDObjectGetter(pi3229);
            VTDPropertyInfoBase pi3230 = new VTDPropertyInfoBase("InputString");
            VTDBaseSetter binding_setter1590 = new VTDObjectSetter(pi3230);
            binding_setter1590 = new StringFormaterDecorator(binding_setter1590,"{Step.OutputProperties.HTTPActivity250.ResponseBody}");
            bind_dir1590 = new BindDirection(_flow.HTTPActivity250,binding_getter1640,binding_setter1590,BindTargetType.ToInProperty);
            _flow.StringToJsonActivity251.InDirections.Add(bind_dir1590);
            _flow.Loop56.ConditionAsString = @"Run for 1 iteration";
            _flow.Loop56.NumberOfIterations = (int)1;
            _flow.Loop56.Comment = @"";
            _flow.Loop56.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_loop.png";
            _flow.Loop56.Name = @"循环执行tb_kickFromRoom_verification中的测试用例";
            VTDPropertyInfoBase pi3231 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='Row'][1]");
            VTDBaseGetter binding_getter1641 = new VTDXPathGetter(pi3231,XmlTypeCode.Long);
            binding_getter1641 = new XPathGetterDecorator(binding_getter1641,"{Array0}",1);
            VTDPropertyInfoBase pi3232 = new VTDPropertyInfoBase("NumberOfIterations");
            VTDBaseSetter binding_setter1591 = new VTDObjectSetter(pi3232);
            bind_dir1591 = new BindDirection(_flow.DbFetchData58,binding_getter1641,binding_setter1591,BindTargetType.ToInProperty);
            _flow.Loop56.InDirections.Add(bind_dir1591);
            _flow.Loop56.Activities.Add (this.DataCursorActivity285);
            _flow.Loop56.Activities.Add (_flow.Sequence276);
            _flow.HTTPActivity270.TextBody = @"message=你好，我是张坤老师2.让我加入你们的群会话吧&receiver_jid={Step.OutputProperties.DbFetchData248.ResultTable.Row[1].groupJid}&xsid=x_021at4j48cc115hc644atbj52bbd3132n7a9dd0990c872t9q596a3ieu0006u";
            _flow.HTTPActivity270.TextXmlBody = @"";
            _flow.HTTPActivity270.FileBody = @"";
            _flow.HTTPActivity270.PostBody = @"";
            _flow.HTTPActivity270.Url = @"{DataSource.tb_global_table.qdHost}{DataSource.tb_global_table.ClientFriendRequest_create}";
            _flow.HTTPActivity270.HttpMethod = @"POST";
            _flow.HTTPActivity270.HttpVersion = @"1.1";
            _flow.HTTPActivity270.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity270.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity270.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity270.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity270.Comment = @"";
            _flow.HTTPActivity270.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity270.RequestBodyType = @"Text";
            _flow.HTTPActivity270.ResponseType = @"Text";
            _flow.HTTPActivity270.Name = @"调用发起加群申请请求";
            _flow.HTTPActivity270.Proxy.Server = @"";
            _flow.HTTPActivity270.Proxy.Username = @"";
            _flow.HTTPActivity270.Proxy.Password = @"";
            _flow.HTTPActivity270.Authentication.Username = @"";
            _flow.HTTPActivity270.Authentication.Password = @"";
            _flow.HTTPActivity270.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity270.Timeout = (int)100000;
            _flow.HTTPActivity270.ClientCertificate.Password = @"";
            _flow.HTTPActivity270.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity270.UseClientCertificate = false;
            _flow.HTTPActivity270.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity270.AllowRedirections = true;
            _flow.HTTPActivity270.ReuseCookies = false;
            _flow.HTTPActivity270.ExpectServerError = false;
            XmlDocument HTTPActivity270_XMLBody_Document = new XmlDocument();
            HTTPActivity270_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity270_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity270.XMLBody = HTTPActivity270_XMLBody_Document;
            XmlDocument HTTPActivity270_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity270_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity270_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity270.RequestMultipartInfoXml = HTTPActivity270_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity270.Multipart=false;
            VTDPropertyInfoBase pi3233 = new VTDPropertyInfoBase("qdHost");
            VTDBaseGetter binding_getter1642 = new VTDObjectGetter(pi3233);
            VTDPropertyInfoBase pi3234 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1592 = new VTDObjectSetter(pi3234);
            binding_setter1592 = new StringFormaterDecorator(binding_setter1592,"{DataSource.tb_global_table.qdHost}");
            bind_dir1592 = new BindDirection(this.DataCursorActivity284,binding_getter1642,binding_setter1592,BindTargetType.ToInProperty);
            _flow.HTTPActivity270.InDirections.Add(bind_dir1592);
            VTDPropertyInfoBase pi3235 = new VTDPropertyInfoBase("ClientFriendRequest_create");
            VTDBaseGetter binding_getter1643 = new VTDObjectGetter(pi3235);
            VTDPropertyInfoBase pi3236 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1593 = new VTDObjectSetter(pi3236);
            binding_setter1593 = new StringFormaterDecorator(binding_setter1593,"{DataSource.tb_global_table.ClientFriendRequest_create}");
            bind_dir1593 = new BindDirection(this.DataCursorActivity284,binding_getter1643,binding_setter1593,BindTargetType.ToInProperty);
            _flow.HTTPActivity270.InDirections.Add(bind_dir1593);
            VTDPropertyInfoBase pi3237 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1644 = new VTDObjectGetter(pi3237);
            VTDPropertyInfoBase pi3238 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1594 = new VTDObjectSetter(pi3238);
            binding_setter1594 = new StringFormaterDecorator(binding_setter1594,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1594 = new BindDirection(this.DataCursorActivity284,binding_getter1644,binding_setter1594,BindTargetType.ToInProperty);
            _flow.HTTPActivity270.InDirections.Add(bind_dir1594);
            VTDPropertyInfoBase pi3239 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1645 = new VTDObjectGetter(pi3239);
            VTDPropertyInfoBase pi3240 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1595 = new VTDObjectSetter(pi3240);
            binding_setter1595 = new StringFormaterDecorator(binding_setter1595,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1595 = new BindDirection(this.DataCursorActivity284,binding_getter1645,binding_setter1595,BindTargetType.ToInProperty);
            _flow.HTTPActivity270.InDirections.Add(bind_dir1595);
            VTDPropertyInfoBase pi3241 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='groupJid'][1]");
            VTDBaseGetter binding_getter1646 = new VTDXPathGetter(pi3241,XmlTypeCode.String);
            binding_getter1646 = new XPathGetterDecorator(binding_getter1646,"{Array0}",1);
            VTDPropertyInfoBase pi3242 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1596 = new VTDObjectSetter(pi3242);
            binding_setter1596 = new StringFormaterDecorator(binding_setter1596,"{Step.OutputProperties.DbFetchData248.ResultTable.Row[1].groupJid}");
            bind_dir1596 = new BindDirection(_flow.DbFetchData248,binding_getter1646,binding_setter1596,BindTargetType.ToInProperty);
            _flow.HTTPActivity270.InDirections.Add(bind_dir1596);
            XmlDocument HTTPActivity270_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity270_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity270_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity270.ExpectedResponseXmlBody = HTTPActivity270_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity270_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity270_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity270_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity270.ExpectedResponseJsonBody = HTTPActivity270_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity270_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity270_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity270_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity270.ExpectedOutputProperties = HTTPActivity270_ExpectedOutputProperties_Document;
            _flow.HTTPActivity271.TextBody = @"xsid={Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}";
            _flow.HTTPActivity271.TextXmlBody = @"";
            _flow.HTTPActivity271.FileBody = @"";
            _flow.HTTPActivity271.PostBody = @"";
            _flow.HTTPActivity271.Url = @"{DataSource.tb_global_table.qdHost}{DataSource.tb_global_table.ClientFriendRequest_all}";
            _flow.HTTPActivity271.HttpMethod = @"POST";
            _flow.HTTPActivity271.HttpVersion = @"1.1";
            _flow.HTTPActivity271.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity271.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity271.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity271.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity271.Comment = @"";
            _flow.HTTPActivity271.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity271.RequestBodyType = @"Text";
            _flow.HTTPActivity271.ResponseType = @"Text";
            _flow.HTTPActivity271.Name = @"调用获取所有请求申请接口";
            _flow.HTTPActivity271.Proxy.Server = @"";
            _flow.HTTPActivity271.Proxy.Username = @"";
            _flow.HTTPActivity271.Proxy.Password = @"";
            _flow.HTTPActivity271.Authentication.Username = @"";
            _flow.HTTPActivity271.Authentication.Password = @"";
            _flow.HTTPActivity271.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity271.Timeout = (int)100000;
            _flow.HTTPActivity271.ClientCertificate.Password = @"";
            _flow.HTTPActivity271.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity271.UseClientCertificate = false;
            _flow.HTTPActivity271.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity271.AllowRedirections = true;
            _flow.HTTPActivity271.ReuseCookies = false;
            _flow.HTTPActivity271.ExpectServerError = false;
            XmlDocument HTTPActivity271_XMLBody_Document = new XmlDocument();
            HTTPActivity271_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity271_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity271.XMLBody = HTTPActivity271_XMLBody_Document;
            XmlDocument HTTPActivity271_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity271_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity271_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity271.RequestMultipartInfoXml = HTTPActivity271_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity271.Multipart=false;
            VTDPropertyInfoBase pi3243 = new VTDPropertyInfoBase("qdHost");
            VTDBaseGetter binding_getter1647 = new VTDObjectGetter(pi3243);
            VTDPropertyInfoBase pi3244 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1597 = new VTDObjectSetter(pi3244);
            binding_setter1597 = new StringFormaterDecorator(binding_setter1597,"{DataSource.tb_global_table.qdHost}");
            bind_dir1597 = new BindDirection(this.DataCursorActivity284,binding_getter1647,binding_setter1597,BindTargetType.ToInProperty);
            _flow.HTTPActivity271.InDirections.Add(bind_dir1597);
            VTDPropertyInfoBase pi3245 = new VTDPropertyInfoBase("ClientFriendRequest_all");
            VTDBaseGetter binding_getter1648 = new VTDObjectGetter(pi3245);
            VTDPropertyInfoBase pi3246 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1598 = new VTDObjectSetter(pi3246);
            binding_setter1598 = new StringFormaterDecorator(binding_setter1598,"{DataSource.tb_global_table.ClientFriendRequest_all}");
            bind_dir1598 = new BindDirection(this.DataCursorActivity284,binding_getter1648,binding_setter1598,BindTargetType.ToInProperty);
            _flow.HTTPActivity271.InDirections.Add(bind_dir1598);
            VTDPropertyInfoBase pi3247 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1649 = new VTDObjectGetter(pi3247);
            VTDPropertyInfoBase pi3248 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1599 = new VTDObjectSetter(pi3248);
            binding_setter1599 = new StringFormaterDecorator(binding_setter1599,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1599 = new BindDirection(this.DataCursorActivity284,binding_getter1649,binding_setter1599,BindTargetType.ToInProperty);
            _flow.HTTPActivity271.InDirections.Add(bind_dir1599);
            VTDPropertyInfoBase pi3249 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1650 = new VTDObjectGetter(pi3249);
            VTDPropertyInfoBase pi3250 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1600 = new VTDObjectSetter(pi3250);
            binding_setter1600 = new StringFormaterDecorator(binding_setter1600,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1600 = new BindDirection(this.DataCursorActivity284,binding_getter1650,binding_setter1600,BindTargetType.ToInProperty);
            _flow.HTTPActivity271.InDirections.Add(bind_dir1600);
            VTDPropertyInfoBase pi3251 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1651 = new VTDXPathGetter(pi3251,XmlTypeCode.String);
            binding_getter1651 = new XPathGetterDecorator(binding_getter1651,"{Array0}",1);
            VTDPropertyInfoBase pi3252 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1601 = new VTDObjectSetter(pi3252);
            binding_setter1601 = new StringFormaterDecorator(binding_setter1601,"{Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}");
            bind_dir1601 = new BindDirection(_flow.DbFetchData247,binding_getter1651,binding_setter1601,BindTargetType.ToInProperty);
            _flow.HTTPActivity271.InDirections.Add(bind_dir1601);
            XmlDocument HTTPActivity271_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity271_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity271_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity271.ExpectedResponseXmlBody = HTTPActivity271_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity271_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity271_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity271_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity271.ExpectedResponseJsonBody = HTTPActivity271_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity271_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity271_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity271_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity271.ExpectedOutputProperties = HTTPActivity271_ExpectedOutputProperties_Document;
            _flow.StringToJsonActivity272.InputString = @"{Step.OutputProperties.HTTPActivity271.ResponseBody}";
            _flow.StringToJsonActivity272.Comment = @"";
            _flow.StringToJsonActivity272.IconPath = @"AddIns\ServiceTest\TransformJson\ictb_string_to_json_16.png";
            _flow.StringToJsonActivity272.Name = @"获取教师账号中所有的请求申请";
            VTDPropertyInfoBase pi3253 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1652 = new VTDObjectGetter(pi3253);
            VTDPropertyInfoBase pi3254 = new VTDPropertyInfoBase("InputString");
            VTDBaseSetter binding_setter1602 = new VTDObjectSetter(pi3254);
            binding_setter1602 = new StringFormaterDecorator(binding_setter1602,"{Step.OutputProperties.HTTPActivity271.ResponseBody}");
            bind_dir1602 = new BindDirection(_flow.HTTPActivity271,binding_getter1652,binding_setter1602,BindTargetType.ToInProperty);
            _flow.StringToJsonActivity272.InDirections.Add(bind_dir1602);
            _flow.HTTPActivity273.TextBody = @"id={Step.JsonContent.StringToJsonActivity272.data.Object1.id}&xsid={Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}";
            _flow.HTTPActivity273.TextXmlBody = @"";
            _flow.HTTPActivity273.FileBody = @"";
            _flow.HTTPActivity273.PostBody = @"";
            _flow.HTTPActivity273.Url = @"{DataSource.tb_global_table.qdHost}{DataSource.tb_global_table.ClientFriendRequest_approve}";
            _flow.HTTPActivity273.HttpMethod = @"POST";
            _flow.HTTPActivity273.HttpVersion = @"1.1";
            _flow.HTTPActivity273.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity273.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity273.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity273.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity273.Comment = @"";
            _flow.HTTPActivity273.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity273.RequestBodyType = @"Text";
            _flow.HTTPActivity273.ResponseType = @"Text";
            _flow.HTTPActivity273.Name = @"调用同意申请接口";
            _flow.HTTPActivity273.Proxy.Server = @"";
            _flow.HTTPActivity273.Proxy.Username = @"";
            _flow.HTTPActivity273.Proxy.Password = @"";
            _flow.HTTPActivity273.Authentication.Username = @"";
            _flow.HTTPActivity273.Authentication.Password = @"";
            _flow.HTTPActivity273.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity273.Timeout = (int)100000;
            _flow.HTTPActivity273.ClientCertificate.Password = @"";
            _flow.HTTPActivity273.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity273.UseClientCertificate = false;
            _flow.HTTPActivity273.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity273.AllowRedirections = true;
            _flow.HTTPActivity273.ReuseCookies = false;
            _flow.HTTPActivity273.ExpectServerError = false;
            XmlDocument HTTPActivity273_XMLBody_Document = new XmlDocument();
            HTTPActivity273_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity273_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity273.XMLBody = HTTPActivity273_XMLBody_Document;
            XmlDocument HTTPActivity273_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity273_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity273_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity273.RequestMultipartInfoXml = HTTPActivity273_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity273.Multipart=false;
            VTDPropertyInfoBase pi3255 = new VTDPropertyInfoBase("qdHost");
            VTDBaseGetter binding_getter1653 = new VTDObjectGetter(pi3255);
            VTDPropertyInfoBase pi3256 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1603 = new VTDObjectSetter(pi3256);
            binding_setter1603 = new StringFormaterDecorator(binding_setter1603,"{DataSource.tb_global_table.qdHost}");
            bind_dir1603 = new BindDirection(this.DataCursorActivity284,binding_getter1653,binding_setter1603,BindTargetType.ToInProperty);
            _flow.HTTPActivity273.InDirections.Add(bind_dir1603);
            VTDPropertyInfoBase pi3257 = new VTDPropertyInfoBase("ClientFriendRequest_approve");
            VTDBaseGetter binding_getter1654 = new VTDObjectGetter(pi3257);
            VTDPropertyInfoBase pi3258 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1604 = new VTDObjectSetter(pi3258);
            binding_setter1604 = new StringFormaterDecorator(binding_setter1604,"{DataSource.tb_global_table.ClientFriendRequest_approve}");
            bind_dir1604 = new BindDirection(this.DataCursorActivity284,binding_getter1654,binding_setter1604,BindTargetType.ToInProperty);
            _flow.HTTPActivity273.InDirections.Add(bind_dir1604);
            VTDPropertyInfoBase pi3259 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1655 = new VTDObjectGetter(pi3259);
            VTDPropertyInfoBase pi3260 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1605 = new VTDObjectSetter(pi3260);
            binding_setter1605 = new StringFormaterDecorator(binding_setter1605,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1605 = new BindDirection(this.DataCursorActivity284,binding_getter1655,binding_setter1605,BindTargetType.ToInProperty);
            _flow.HTTPActivity273.InDirections.Add(bind_dir1605);
            VTDPropertyInfoBase pi3261 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1656 = new VTDObjectGetter(pi3261);
            VTDPropertyInfoBase pi3262 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1606 = new VTDObjectSetter(pi3262);
            binding_setter1606 = new StringFormaterDecorator(binding_setter1606,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1606 = new BindDirection(this.DataCursorActivity284,binding_getter1656,binding_setter1606,BindTargetType.ToInProperty);
            _flow.HTTPActivity273.InDirections.Add(bind_dir1606);
            VTDPropertyInfoBase pi3263 = new VTDPropertyInfoBase("JsonContent","/*[local-name(.)='Object'][1]/*[local-name(.)='data'][1]/*[local-name(.)='Object1'][1]/*[local-name(.)='id'][1]");
            VTDBaseGetter binding_getter1657 = new VTDJsonGetter(pi3263);
            VTDPropertyInfoBase pi3264 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1607 = new VTDObjectSetter(pi3264);
            binding_setter1607 = new StringFormaterDecorator(binding_setter1607,"{Step.JsonContent.StringToJsonActivity272.data.Object1.id}");
            bind_dir1607 = new BindDirection(_flow.StringToJsonActivity272,binding_getter1657,binding_setter1607,BindTargetType.ToInProperty);
            _flow.HTTPActivity273.InDirections.Add(bind_dir1607);
            VTDPropertyInfoBase pi3265 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1658 = new VTDXPathGetter(pi3265,XmlTypeCode.String);
            binding_getter1658 = new XPathGetterDecorator(binding_getter1658,"{Array0}",1);
            VTDPropertyInfoBase pi3266 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1608 = new VTDObjectSetter(pi3266);
            binding_setter1608 = new StringFormaterDecorator(binding_setter1608,"{Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}");
            bind_dir1608 = new BindDirection(_flow.DbFetchData247,binding_getter1658,binding_setter1608,BindTargetType.ToInProperty);
            _flow.HTTPActivity273.InDirections.Add(bind_dir1608);
            XmlDocument HTTPActivity273_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity273_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity273_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity273.ExpectedResponseXmlBody = HTTPActivity273_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity273_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity273_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity273_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity273.ExpectedResponseJsonBody = HTTPActivity273_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity273_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity273_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity273_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity273.ExpectedOutputProperties = HTTPActivity273_ExpectedOutputProperties_Document;
            _flow.DbFetchData74.QueryString = @"update tb_global_table set EncryptionStr = '{DataSource.tb_global_table.LoginTeacherUsername}@365ime.comDeVawMFWs6{Step.OutputProperties.DbFetchData248.ResultTable.Row[1].groupJid}' where TestCase = 1";
            _flow.DbFetchData74.Timeout = (int)30;
            _flow.DbFetchData74.Comment = @"";
            _flow.DbFetchData74.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData74.Name = @"对/xmp/createGroup.php接口token实行加密";
            VTDPropertyInfoBase pi3267 = new VTDPropertyInfoBase("LoginTeacherUsername");
            VTDBaseGetter binding_getter1659 = new VTDObjectGetter(pi3267);
            VTDPropertyInfoBase pi3268 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1609 = new VTDObjectSetter(pi3268);
            binding_setter1609 = new StringFormaterDecorator(binding_setter1609,"{DataSource.tb_global_table.LoginTeacherUsername}");
            bind_dir1609 = new BindDirection(this.DataCursorActivity284,binding_getter1659,binding_setter1609,BindTargetType.ToInProperty);
            _flow.DbFetchData74.InDirections.Add(bind_dir1609);
            VTDPropertyInfoBase pi3269 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='groupJid'][1]");
            VTDBaseGetter binding_getter1660 = new VTDXPathGetter(pi3269,XmlTypeCode.String);
            binding_getter1660 = new XPathGetterDecorator(binding_getter1660,"{Array0}",1);
            VTDPropertyInfoBase pi3270 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1610 = new VTDObjectSetter(pi3270);
            binding_setter1610 = new StringFormaterDecorator(binding_setter1610,"{Step.OutputProperties.DbFetchData248.ResultTable.Row[1].groupJid}");
            bind_dir1610 = new BindDirection(_flow.DbFetchData248,binding_getter1660,binding_setter1610,BindTargetType.ToInProperty);
            _flow.DbFetchData74.InDirections.Add(bind_dir1610);
            VTDPropertyInfoBase pi3271 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1661 = new VTDObjectGetter(pi3271);
            VTDPropertyInfoBase pi3272 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1611 = new VTDObjectSetter(pi3272);
            bind_dir1611 = new BindDirection(_flow.DbOpenConnection39,binding_getter1661,binding_setter1611,BindTargetType.ToInProperty);
            _flow.DbFetchData74.InDirections.Add(bind_dir1611);
            XmlDocument DbFetchData74_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData74_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData74_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData74.ExpectedOutputProperties = DbFetchData74_ExpectedOutputProperties_Document;
            _flow.CallQTPTest75.Comment = @"";
            _flow.CallQTPTest75.IconPath = @"AddIns\ServiceTest\UFT\toolbox_qtp.png";
            _flow.CallQTPTest75.Name = @"Encryption.SHA1";
            _flow.CallQTPTest75.ScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.ScriptPath}")) ? @"..\Encryption" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.ScriptPath}");
            _flow.CallQTPTest75.ActionName = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.ActionName}")) ? @"SHA1" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.ActionName}");
            _flow.CallQTPTest75.Description = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.Description}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.Description}");
            _flow.CallQTPTest75.IsActionSelected = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.IsActionSelected}")) ? @"True" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.IsActionSelected}");
            _flow.CallQTPTest75.ResultLocation = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.ResultLocation}")) ? @"RunQTPReport\" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.ResultLocation}");
            _flow.CallQTPTest75.QCScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.QCScriptPath}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest75.QCScriptPath}");
            _flow.DbFetchData76.QueryString = @"select EncryptionResult from tb_global_table where TestCase = 1";
            _flow.DbFetchData76.Timeout = (int)30;
            _flow.DbFetchData76.Comment = @"";
            _flow.DbFetchData76.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData76.Name = @"查询出加密后EncryptionResult字段的值";
            VTDPropertyInfoBase pi3273 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1662 = new VTDObjectGetter(pi3273);
            VTDPropertyInfoBase pi3274 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1612 = new VTDObjectSetter(pi3274);
            bind_dir1612 = new BindDirection(_flow.DbOpenConnection39,binding_getter1662,binding_setter1612,BindTargetType.ToInProperty);
            _flow.DbFetchData76.InDirections.Add(bind_dir1612);
            XmlDocument DbFetchData76_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData76_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData76_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><EncryptionResult /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData76.ExpectedOutputProperties = DbFetchData76_ExpectedOutputProperties_Document;
            _flow.HTTPActivity73.TextBody = @"roomJid={Step.OutputProperties.DbFetchData248.ResultTable.Row[1].groupJid}&token={Step.OutputProperties.DbFetchData76.ResultTable.Row[1].EncryptionResult}&xsid={Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}&Jid={DataSource.tb_global_table.LoginTeacherUsername}@365ime.com&memberJid={DataSource.tb_global_table.LoginStudentUsername}@365ime.com";
            _flow.HTTPActivity73.TextXmlBody = @"";
            _flow.HTTPActivity73.FileBody = @"";
            _flow.HTTPActivity73.PostBody = @"";
            _flow.HTTPActivity73.Url = @"{DataSource.tb_global_table.JXTInfoHost}{DataSource.tb_global_table.kickFromRoom}";
            _flow.HTTPActivity73.HttpMethod = @"POST";
            _flow.HTTPActivity73.HttpVersion = @"1.1";
            _flow.HTTPActivity73.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity73.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity73.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity73.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity73.Comment = @"";
            _flow.HTTPActivity73.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity73.RequestBodyType = @"Text";
            _flow.HTTPActivity73.ResponseType = @"Text";
            _flow.HTTPActivity73.Name = @"调用/xmp/kick.php";
            _flow.HTTPActivity73.Proxy.Server = @"";
            _flow.HTTPActivity73.Proxy.Username = @"";
            _flow.HTTPActivity73.Proxy.Password = @"";
            _flow.HTTPActivity73.Authentication.Username = @"";
            _flow.HTTPActivity73.Authentication.Password = @"";
            _flow.HTTPActivity73.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity73.Timeout = (int)100000;
            _flow.HTTPActivity73.ClientCertificate.Password = @"";
            _flow.HTTPActivity73.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity73.UseClientCertificate = false;
            _flow.HTTPActivity73.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity73.AllowRedirections = true;
            _flow.HTTPActivity73.ReuseCookies = false;
            _flow.HTTPActivity73.ExpectServerError = false;
            XmlDocument HTTPActivity73_XMLBody_Document = new XmlDocument();
            HTTPActivity73_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity73_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity73.XMLBody = HTTPActivity73_XMLBody_Document;
            XmlDocument HTTPActivity73_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity73_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity73_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity73.RequestMultipartInfoXml = HTTPActivity73_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity73.Multipart=false;
            VTDPropertyInfoBase pi3275 = new VTDPropertyInfoBase("JXTInfoHost");
            VTDBaseGetter binding_getter1663 = new VTDObjectGetter(pi3275);
            VTDPropertyInfoBase pi3276 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1613 = new VTDObjectSetter(pi3276);
            binding_setter1613 = new StringFormaterDecorator(binding_setter1613,"{DataSource.tb_global_table.JXTInfoHost}");
            bind_dir1613 = new BindDirection(this.DataCursorActivity284,binding_getter1663,binding_setter1613,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1613);
            VTDPropertyInfoBase pi3277 = new VTDPropertyInfoBase("kickFromRoom");
            VTDBaseGetter binding_getter1664 = new VTDObjectGetter(pi3277);
            VTDPropertyInfoBase pi3278 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1614 = new VTDObjectSetter(pi3278);
            binding_setter1614 = new StringFormaterDecorator(binding_setter1614,"{DataSource.tb_global_table.kickFromRoom}");
            bind_dir1614 = new BindDirection(this.DataCursorActivity284,binding_getter1664,binding_setter1614,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1614);
            VTDPropertyInfoBase pi3279 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1665 = new VTDObjectGetter(pi3279);
            VTDPropertyInfoBase pi3280 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1615 = new VTDObjectSetter(pi3280);
            binding_setter1615 = new StringFormaterDecorator(binding_setter1615,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1615 = new BindDirection(this.DataCursorActivity284,binding_getter1665,binding_setter1615,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1615);
            VTDPropertyInfoBase pi3281 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1666 = new VTDObjectGetter(pi3281);
            VTDPropertyInfoBase pi3282 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1616 = new VTDObjectSetter(pi3282);
            binding_setter1616 = new StringFormaterDecorator(binding_setter1616,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1616 = new BindDirection(this.DataCursorActivity284,binding_getter1666,binding_setter1616,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1616);
            VTDPropertyInfoBase pi3283 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='groupJid'][1]");
            VTDBaseGetter binding_getter1667 = new VTDXPathGetter(pi3283,XmlTypeCode.String);
            binding_getter1667 = new XPathGetterDecorator(binding_getter1667,"{Array0}",1);
            VTDPropertyInfoBase pi3284 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1617 = new VTDObjectSetter(pi3284);
            binding_setter1617 = new StringFormaterDecorator(binding_setter1617,"{Step.OutputProperties.DbFetchData248.ResultTable.Row[1].groupJid}");
            bind_dir1617 = new BindDirection(_flow.DbFetchData248,binding_getter1667,binding_setter1617,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1617);
            VTDPropertyInfoBase pi3285 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='EncryptionResult'][1]");
            VTDBaseGetter binding_getter1668 = new VTDXPathGetter(pi3285,XmlTypeCode.String);
            binding_getter1668 = new XPathGetterDecorator(binding_getter1668,"{Array0}",1);
            VTDPropertyInfoBase pi3286 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1618 = new VTDObjectSetter(pi3286);
            binding_setter1618 = new StringFormaterDecorator(binding_setter1618,"{Step.OutputProperties.DbFetchData76.ResultTable.Row[1].EncryptionResult}");
            bind_dir1618 = new BindDirection(_flow.DbFetchData76,binding_getter1668,binding_setter1618,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1618);
            VTDPropertyInfoBase pi3287 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1669 = new VTDXPathGetter(pi3287,XmlTypeCode.String);
            binding_getter1669 = new XPathGetterDecorator(binding_getter1669,"{Array0}",1);
            VTDPropertyInfoBase pi3288 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1619 = new VTDObjectSetter(pi3288);
            binding_setter1619 = new StringFormaterDecorator(binding_setter1619,"{Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}");
            bind_dir1619 = new BindDirection(_flow.DbFetchData247,binding_getter1669,binding_setter1619,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1619);
            VTDPropertyInfoBase pi3289 = new VTDPropertyInfoBase("LoginTeacherUsername");
            VTDBaseGetter binding_getter1670 = new VTDObjectGetter(pi3289);
            VTDPropertyInfoBase pi3290 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1620 = new VTDObjectSetter(pi3290);
            binding_setter1620 = new StringFormaterDecorator(binding_setter1620,"{DataSource.tb_global_table.LoginTeacherUsername}");
            bind_dir1620 = new BindDirection(this.DataCursorActivity284,binding_getter1670,binding_setter1620,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1620);
            VTDPropertyInfoBase pi3291 = new VTDPropertyInfoBase("LoginStudentUsername");
            VTDBaseGetter binding_getter1671 = new VTDObjectGetter(pi3291);
            VTDPropertyInfoBase pi3292 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1621 = new VTDObjectSetter(pi3292);
            binding_setter1621 = new StringFormaterDecorator(binding_setter1621,"{DataSource.tb_global_table.LoginStudentUsername}");
            bind_dir1621 = new BindDirection(this.DataCursorActivity284,binding_getter1671,binding_setter1621,BindTargetType.ToInProperty);
            _flow.HTTPActivity73.InDirections.Add(bind_dir1621);
            XmlDocument HTTPActivity73_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity73_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity73_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity73.ExpectedResponseXmlBody = HTTPActivity73_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity73_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity73_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity73_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity73.ExpectedResponseJsonBody = HTTPActivity73_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity73_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity73_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity73_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity73.ExpectedOutputProperties = HTTPActivity73_ExpectedOutputProperties_Document;
            _flow.DbFetchData77.QueryString = @"update tb_result_table set ResponseJson = '{Step.OutputProperties.HTTPActivity73.ResponseBody}' where InterfaceName = '/xmp/kick.php'";
            _flow.DbFetchData77.Timeout = (int)30;
            _flow.DbFetchData77.Comment = @"";
            _flow.DbFetchData77.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData77.Name = @"将接口返回的Json更新至tb_result_table";
            VTDPropertyInfoBase pi3293 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1672 = new VTDObjectGetter(pi3293);
            VTDPropertyInfoBase pi3294 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1622 = new VTDObjectSetter(pi3294);
            binding_setter1622 = new StringFormaterDecorator(binding_setter1622,"{Step.OutputProperties.HTTPActivity73.ResponseBody}");
            bind_dir1622 = new BindDirection(_flow.HTTPActivity73,binding_getter1672,binding_setter1622,BindTargetType.ToInProperty);
            _flow.DbFetchData77.InDirections.Add(bind_dir1622);
            VTDPropertyInfoBase pi3295 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1673 = new VTDObjectGetter(pi3295);
            VTDPropertyInfoBase pi3296 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1623 = new VTDObjectSetter(pi3296);
            bind_dir1623 = new BindDirection(_flow.DbOpenConnection39,binding_getter1673,binding_setter1623,BindTargetType.ToInProperty);
            _flow.DbFetchData77.InDirections.Add(bind_dir1623);
            XmlDocument DbFetchData77_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData77_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData77_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData77.ExpectedOutputProperties = DbFetchData77_ExpectedOutputProperties_Document;
            this.DataCursorActivity285.Comment = @"";
            this.DataCursorActivity285.IconPath = @"";
            VTDPropertyInfoBase pi3297 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1674 = new VTDObjectGetter(pi3297);
            VTDPropertyInfoBase pi3298 = new VTDPropertyInfoBase("InTable");
            VTDBaseSetter binding_setter1624 = new VTDObjectSetter(pi3298);
            binding_setter1624 = new StringFormaterDecorator(binding_setter1624,"{Step.DataFetchActivity277.OutTable}");
            bind_dir1624 = new BindDirection(_flow.DataFetchActivity277,binding_getter1674,binding_setter1624,BindTargetType.ToInProperty);
            this.DataCursorActivity285.InDirections.Add(bind_dir1624);
            this.DataCursorActivity285_Policy.StartPosition = CursorStartPosition.FirstRecord;
            this.DataCursorActivity285_Policy.StartAtSpecificRow = 1;
            this.DataCursorActivity285_Policy.StartCondition.ColumnName = "";
            this.DataCursorActivity285_Policy.StartCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity285_Policy.StartCondition.Value = "";
            this.DataCursorActivity285_Policy.EndPosition = CursorEndPosition.LastRecord;
            this.DataCursorActivity285_Policy.EndAtSpecificRow = 1;
            this.DataCursorActivity285_Policy.EndCondition.ColumnName = "";
            this.DataCursorActivity285_Policy.EndCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity285_Policy.EndCondition.Value = "";
            this.DataCursorActivity285_Policy.StepType = CursorStepType.Forward;
            this.DataCursorActivity285_Policy.StepSize = 1;
            this.DataCursorActivity285_Policy.ActionAfterLastRecord = CursorActionAfterLastRecord.Wraparound;
            this.DataCursorActivity285.Policy = this.DataCursorActivity285_Policy;
            this.DataCursorActivity285.ReportStepData = false;
            _flow.Loop56.BeforeExecuteStepEvent += this.DataCursorActivity285.ResetCursor;
            _flow.Sequence276.Comment = @"";
            _flow.Sequence276.IconPath = @"";
            _flow.Sequence276.Name = @"序列276";
            _flow.Sequence276.Activities.Add (_flow.HTTPActivity257);
            _flow.Sequence276.Activities.Add (_flow.HTTPActivity259);
            _flow.Sequence276.Activities.Add (_flow.StringToJsonActivity260);
            _flow.Sequence276.Activities.Add (_flow.HTTPActivity263);
            _flow.Sequence276.Activities.Add (_flow.DbFetchData57);
            _flow.Sequence276.Activities.Add (_flow.ReplaceStringActivity264);
            _flow.Sequence276.Activities.Add (_flow.DbFetchData265);
            _flow.Sequence276.Activities.Add (_flow.CallQTPTest266);
            _flow.Sequence276.Activities.Add (_flow.DbFetchData267);
            _flow.Sequence276.Activities.Add (_flow.ReplaceStringActivity268);
            _flow.Sequence276.Activities.Add (_flow.ReplaceStringActivity274);
            _flow.Sequence276.Activities.Add (_flow.HTTPActivity59);
            _flow.Sequence276.Activities.Add (_flow.StringToJsonActivity60);
            _flow.Sequence276.Activities.Add (_flow.DbFetchData61);
            _flow.Sequence276.Activities.Add (_flow.DbFetchData62);
            _flow.Sequence276.Activities.Add (_flow.DbFetchData117);
            _flow.Sequence276.Activities.Add (_flow.DbFetchData63);
            _flow.Sequence276.Activities.Add (_flow.IfElse64);
            _flow.HTTPActivity257.TextBody = @"message=你好，我是张坤老师2.让我加入你们的群会话吧&receiver_jid={Step.OutputProperties.DbFetchData248.ResultTable.Row[1].groupJid}&xsid=x_021at4j48cc115hc644atbj52bbd3132n7a9dd0990c872t9q596a3ieu0006u";
            _flow.HTTPActivity257.TextXmlBody = @"";
            _flow.HTTPActivity257.FileBody = @"";
            _flow.HTTPActivity257.PostBody = @"";
            _flow.HTTPActivity257.Url = @"{DataSource.tb_global_table.qdHost}{DataSource.tb_global_table.ClientFriendRequest_create}";
            _flow.HTTPActivity257.HttpMethod = @"POST";
            _flow.HTTPActivity257.HttpVersion = @"1.1";
            _flow.HTTPActivity257.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity257.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity257.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity257.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity257.Comment = @"";
            _flow.HTTPActivity257.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity257.RequestBodyType = @"Text";
            _flow.HTTPActivity257.ResponseType = @"Text";
            _flow.HTTPActivity257.Name = @"调用发起加群申请请求";
            _flow.HTTPActivity257.Proxy.Server = @"";
            _flow.HTTPActivity257.Proxy.Username = @"";
            _flow.HTTPActivity257.Proxy.Password = @"";
            _flow.HTTPActivity257.Authentication.Username = @"";
            _flow.HTTPActivity257.Authentication.Password = @"";
            _flow.HTTPActivity257.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity257.Timeout = (int)100000;
            _flow.HTTPActivity257.ClientCertificate.Password = @"";
            _flow.HTTPActivity257.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity257.UseClientCertificate = false;
            _flow.HTTPActivity257.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity257.AllowRedirections = true;
            _flow.HTTPActivity257.ReuseCookies = false;
            _flow.HTTPActivity257.ExpectServerError = false;
            XmlDocument HTTPActivity257_XMLBody_Document = new XmlDocument();
            HTTPActivity257_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity257_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity257.XMLBody = HTTPActivity257_XMLBody_Document;
            XmlDocument HTTPActivity257_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity257_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity257_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity257.RequestMultipartInfoXml = HTTPActivity257_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity257.Multipart=false;
            VTDPropertyInfoBase pi3299 = new VTDPropertyInfoBase("qdHost");
            VTDBaseGetter binding_getter1675 = new VTDObjectGetter(pi3299);
            VTDPropertyInfoBase pi3300 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1625 = new VTDObjectSetter(pi3300);
            binding_setter1625 = new StringFormaterDecorator(binding_setter1625,"{DataSource.tb_global_table.qdHost}");
            bind_dir1625 = new BindDirection(this.DataCursorActivity285,binding_getter1675,binding_setter1625,BindTargetType.ToInProperty);
            _flow.HTTPActivity257.InDirections.Add(bind_dir1625);
            VTDPropertyInfoBase pi3301 = new VTDPropertyInfoBase("ClientFriendRequest_create");
            VTDBaseGetter binding_getter1676 = new VTDObjectGetter(pi3301);
            VTDPropertyInfoBase pi3302 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1626 = new VTDObjectSetter(pi3302);
            binding_setter1626 = new StringFormaterDecorator(binding_setter1626,"{DataSource.tb_global_table.ClientFriendRequest_create}");
            bind_dir1626 = new BindDirection(this.DataCursorActivity285,binding_getter1676,binding_setter1626,BindTargetType.ToInProperty);
            _flow.HTTPActivity257.InDirections.Add(bind_dir1626);
            VTDPropertyInfoBase pi3303 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1677 = new VTDObjectGetter(pi3303);
            VTDPropertyInfoBase pi3304 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1627 = new VTDObjectSetter(pi3304);
            binding_setter1627 = new StringFormaterDecorator(binding_setter1627,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1627 = new BindDirection(this.DataCursorActivity285,binding_getter1677,binding_setter1627,BindTargetType.ToInProperty);
            _flow.HTTPActivity257.InDirections.Add(bind_dir1627);
            VTDPropertyInfoBase pi3305 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1678 = new VTDObjectGetter(pi3305);
            VTDPropertyInfoBase pi3306 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1628 = new VTDObjectSetter(pi3306);
            binding_setter1628 = new StringFormaterDecorator(binding_setter1628,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1628 = new BindDirection(this.DataCursorActivity285,binding_getter1678,binding_setter1628,BindTargetType.ToInProperty);
            _flow.HTTPActivity257.InDirections.Add(bind_dir1628);
            VTDPropertyInfoBase pi3307 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='groupJid'][1]");
            VTDBaseGetter binding_getter1679 = new VTDXPathGetter(pi3307,XmlTypeCode.String);
            binding_getter1679 = new XPathGetterDecorator(binding_getter1679,"{Array0}",1);
            VTDPropertyInfoBase pi3308 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1629 = new VTDObjectSetter(pi3308);
            binding_setter1629 = new StringFormaterDecorator(binding_setter1629,"{Step.OutputProperties.DbFetchData248.ResultTable.Row[1].groupJid}");
            bind_dir1629 = new BindDirection(_flow.DbFetchData248,binding_getter1679,binding_setter1629,BindTargetType.ToInProperty);
            _flow.HTTPActivity257.InDirections.Add(bind_dir1629);
            XmlDocument HTTPActivity257_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity257_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity257_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity257.ExpectedResponseXmlBody = HTTPActivity257_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity257_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity257_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity257_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity257.ExpectedResponseJsonBody = HTTPActivity257_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity257_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity257_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity257_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity257.ExpectedOutputProperties = HTTPActivity257_ExpectedOutputProperties_Document;
            _flow.HTTPActivity259.TextBody = @"xsid={Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}";
            _flow.HTTPActivity259.TextXmlBody = @"";
            _flow.HTTPActivity259.FileBody = @"";
            _flow.HTTPActivity259.PostBody = @"";
            _flow.HTTPActivity259.Url = @"{DataSource.tb_global_table.qdHost}{DataSource.tb_global_table.ClientFriendRequest_all}";
            _flow.HTTPActivity259.HttpMethod = @"POST";
            _flow.HTTPActivity259.HttpVersion = @"1.1";
            _flow.HTTPActivity259.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity259.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity259.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity259.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity259.Comment = @"";
            _flow.HTTPActivity259.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity259.RequestBodyType = @"Text";
            _flow.HTTPActivity259.ResponseType = @"Text";
            _flow.HTTPActivity259.Name = @"调用获取所有请求申请接口";
            _flow.HTTPActivity259.Proxy.Server = @"";
            _flow.HTTPActivity259.Proxy.Username = @"";
            _flow.HTTPActivity259.Proxy.Password = @"";
            _flow.HTTPActivity259.Authentication.Username = @"";
            _flow.HTTPActivity259.Authentication.Password = @"";
            _flow.HTTPActivity259.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity259.Timeout = (int)100000;
            _flow.HTTPActivity259.ClientCertificate.Password = @"";
            _flow.HTTPActivity259.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity259.UseClientCertificate = false;
            _flow.HTTPActivity259.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity259.AllowRedirections = true;
            _flow.HTTPActivity259.ReuseCookies = false;
            _flow.HTTPActivity259.ExpectServerError = false;
            XmlDocument HTTPActivity259_XMLBody_Document = new XmlDocument();
            HTTPActivity259_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity259_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity259.XMLBody = HTTPActivity259_XMLBody_Document;
            XmlDocument HTTPActivity259_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity259_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity259_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity259.RequestMultipartInfoXml = HTTPActivity259_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity259.Multipart=false;
            VTDPropertyInfoBase pi3309 = new VTDPropertyInfoBase("qdHost");
            VTDBaseGetter binding_getter1680 = new VTDObjectGetter(pi3309);
            VTDPropertyInfoBase pi3310 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1630 = new VTDObjectSetter(pi3310);
            binding_setter1630 = new StringFormaterDecorator(binding_setter1630,"{DataSource.tb_global_table.qdHost}");
            bind_dir1630 = new BindDirection(this.DataCursorActivity285,binding_getter1680,binding_setter1630,BindTargetType.ToInProperty);
            _flow.HTTPActivity259.InDirections.Add(bind_dir1630);
            VTDPropertyInfoBase pi3311 = new VTDPropertyInfoBase("ClientFriendRequest_all");
            VTDBaseGetter binding_getter1681 = new VTDObjectGetter(pi3311);
            VTDPropertyInfoBase pi3312 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1631 = new VTDObjectSetter(pi3312);
            binding_setter1631 = new StringFormaterDecorator(binding_setter1631,"{DataSource.tb_global_table.ClientFriendRequest_all}");
            bind_dir1631 = new BindDirection(this.DataCursorActivity285,binding_getter1681,binding_setter1631,BindTargetType.ToInProperty);
            _flow.HTTPActivity259.InDirections.Add(bind_dir1631);
            VTDPropertyInfoBase pi3313 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1682 = new VTDObjectGetter(pi3313);
            VTDPropertyInfoBase pi3314 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1632 = new VTDObjectSetter(pi3314);
            binding_setter1632 = new StringFormaterDecorator(binding_setter1632,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1632 = new BindDirection(this.DataCursorActivity285,binding_getter1682,binding_setter1632,BindTargetType.ToInProperty);
            _flow.HTTPActivity259.InDirections.Add(bind_dir1632);
            VTDPropertyInfoBase pi3315 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1683 = new VTDObjectGetter(pi3315);
            VTDPropertyInfoBase pi3316 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1633 = new VTDObjectSetter(pi3316);
            binding_setter1633 = new StringFormaterDecorator(binding_setter1633,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1633 = new BindDirection(this.DataCursorActivity285,binding_getter1683,binding_setter1633,BindTargetType.ToInProperty);
            _flow.HTTPActivity259.InDirections.Add(bind_dir1633);
            VTDPropertyInfoBase pi3317 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1684 = new VTDXPathGetter(pi3317,XmlTypeCode.String);
            binding_getter1684 = new XPathGetterDecorator(binding_getter1684,"{Array0}",1);
            VTDPropertyInfoBase pi3318 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1634 = new VTDObjectSetter(pi3318);
            binding_setter1634 = new StringFormaterDecorator(binding_setter1634,"{Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}");
            bind_dir1634 = new BindDirection(_flow.DbFetchData247,binding_getter1684,binding_setter1634,BindTargetType.ToInProperty);
            _flow.HTTPActivity259.InDirections.Add(bind_dir1634);
            XmlDocument HTTPActivity259_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity259_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity259_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity259.ExpectedResponseXmlBody = HTTPActivity259_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity259_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity259_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity259_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity259.ExpectedResponseJsonBody = HTTPActivity259_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity259_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity259_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity259_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity259.ExpectedOutputProperties = HTTPActivity259_ExpectedOutputProperties_Document;
            _flow.StringToJsonActivity260.InputString = @"{Step.OutputProperties.HTTPActivity259.ResponseBody}";
            _flow.StringToJsonActivity260.Comment = @"";
            _flow.StringToJsonActivity260.IconPath = @"AddIns\ServiceTest\TransformJson\ictb_string_to_json_16.png";
            _flow.StringToJsonActivity260.Name = @"获取教师账号中所有的请求申请";
            VTDPropertyInfoBase pi3319 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1685 = new VTDObjectGetter(pi3319);
            VTDPropertyInfoBase pi3320 = new VTDPropertyInfoBase("InputString");
            VTDBaseSetter binding_setter1635 = new VTDObjectSetter(pi3320);
            binding_setter1635 = new StringFormaterDecorator(binding_setter1635,"{Step.OutputProperties.HTTPActivity259.ResponseBody}");
            bind_dir1635 = new BindDirection(_flow.HTTPActivity259,binding_getter1685,binding_setter1635,BindTargetType.ToInProperty);
            _flow.StringToJsonActivity260.InDirections.Add(bind_dir1635);
            _flow.HTTPActivity263.TextBody = @"id={Step.JsonContent.StringToJsonActivity260.data.Object1.id}&xsid={Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}";
            _flow.HTTPActivity263.TextXmlBody = @"";
            _flow.HTTPActivity263.FileBody = @"";
            _flow.HTTPActivity263.PostBody = @"";
            _flow.HTTPActivity263.Url = @"{DataSource.tb_global_table.qdHost}{DataSource.tb_global_table.ClientFriendRequest_approve}";
            _flow.HTTPActivity263.HttpMethod = @"POST";
            _flow.HTTPActivity263.HttpVersion = @"1.1";
            _flow.HTTPActivity263.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity263.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity263.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity263.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity263.Comment = @"";
            _flow.HTTPActivity263.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity263.RequestBodyType = @"Text";
            _flow.HTTPActivity263.ResponseType = @"Text";
            _flow.HTTPActivity263.Name = @"调用同意申请接口";
            _flow.HTTPActivity263.Proxy.Server = @"";
            _flow.HTTPActivity263.Proxy.Username = @"";
            _flow.HTTPActivity263.Proxy.Password = @"";
            _flow.HTTPActivity263.Authentication.Username = @"";
            _flow.HTTPActivity263.Authentication.Password = @"";
            _flow.HTTPActivity263.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity263.Timeout = (int)100000;
            _flow.HTTPActivity263.ClientCertificate.Password = @"";
            _flow.HTTPActivity263.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity263.UseClientCertificate = false;
            _flow.HTTPActivity263.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity263.AllowRedirections = true;
            _flow.HTTPActivity263.ReuseCookies = false;
            _flow.HTTPActivity263.ExpectServerError = false;
            XmlDocument HTTPActivity263_XMLBody_Document = new XmlDocument();
            HTTPActivity263_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity263_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity263.XMLBody = HTTPActivity263_XMLBody_Document;
            XmlDocument HTTPActivity263_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity263_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity263_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity263.RequestMultipartInfoXml = HTTPActivity263_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity263.Multipart=false;
            VTDPropertyInfoBase pi3321 = new VTDPropertyInfoBase("qdHost");
            VTDBaseGetter binding_getter1686 = new VTDObjectGetter(pi3321);
            VTDPropertyInfoBase pi3322 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1636 = new VTDObjectSetter(pi3322);
            binding_setter1636 = new StringFormaterDecorator(binding_setter1636,"{DataSource.tb_global_table.qdHost}");
            bind_dir1636 = new BindDirection(this.DataCursorActivity285,binding_getter1686,binding_setter1636,BindTargetType.ToInProperty);
            _flow.HTTPActivity263.InDirections.Add(bind_dir1636);
            VTDPropertyInfoBase pi3323 = new VTDPropertyInfoBase("ClientFriendRequest_approve");
            VTDBaseGetter binding_getter1687 = new VTDObjectGetter(pi3323);
            VTDPropertyInfoBase pi3324 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1637 = new VTDObjectSetter(pi3324);
            binding_setter1637 = new StringFormaterDecorator(binding_setter1637,"{DataSource.tb_global_table.ClientFriendRequest_approve}");
            bind_dir1637 = new BindDirection(this.DataCursorActivity285,binding_getter1687,binding_setter1637,BindTargetType.ToInProperty);
            _flow.HTTPActivity263.InDirections.Add(bind_dir1637);
            VTDPropertyInfoBase pi3325 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1688 = new VTDObjectGetter(pi3325);
            VTDPropertyInfoBase pi3326 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1638 = new VTDObjectSetter(pi3326);
            binding_setter1638 = new StringFormaterDecorator(binding_setter1638,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1638 = new BindDirection(this.DataCursorActivity285,binding_getter1688,binding_setter1638,BindTargetType.ToInProperty);
            _flow.HTTPActivity263.InDirections.Add(bind_dir1638);
            VTDPropertyInfoBase pi3327 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1689 = new VTDObjectGetter(pi3327);
            VTDPropertyInfoBase pi3328 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1639 = new VTDObjectSetter(pi3328);
            binding_setter1639 = new StringFormaterDecorator(binding_setter1639,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1639 = new BindDirection(this.DataCursorActivity285,binding_getter1689,binding_setter1639,BindTargetType.ToInProperty);
            _flow.HTTPActivity263.InDirections.Add(bind_dir1639);
            VTDPropertyInfoBase pi3329 = new VTDPropertyInfoBase("JsonContent","/*[local-name(.)='Object'][1]/*[local-name(.)='data'][1]/*[local-name(.)='Object1'][1]/*[local-name(.)='id'][1]");
            VTDBaseGetter binding_getter1690 = new VTDJsonGetter(pi3329);
            VTDPropertyInfoBase pi3330 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1640 = new VTDObjectSetter(pi3330);
            binding_setter1640 = new StringFormaterDecorator(binding_setter1640,"{Step.JsonContent.StringToJsonActivity260.data.Object1.id}");
            bind_dir1640 = new BindDirection(_flow.StringToJsonActivity260,binding_getter1690,binding_setter1640,BindTargetType.ToInProperty);
            _flow.HTTPActivity263.InDirections.Add(bind_dir1640);
            VTDPropertyInfoBase pi3331 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1691 = new VTDXPathGetter(pi3331,XmlTypeCode.String);
            binding_getter1691 = new XPathGetterDecorator(binding_getter1691,"{Array0}",1);
            VTDPropertyInfoBase pi3332 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1641 = new VTDObjectSetter(pi3332);
            binding_setter1641 = new StringFormaterDecorator(binding_setter1641,"{Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}");
            bind_dir1641 = new BindDirection(_flow.DbFetchData247,binding_getter1691,binding_setter1641,BindTargetType.ToInProperty);
            _flow.HTTPActivity263.InDirections.Add(bind_dir1641);
            XmlDocument HTTPActivity263_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity263_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity263_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity263.ExpectedResponseXmlBody = HTTPActivity263_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity263_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity263_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity263_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity263.ExpectedResponseJsonBody = HTTPActivity263_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity263_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity263_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity263_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity263.ExpectedOutputProperties = HTTPActivity263_ExpectedOutputProperties_Document;
            _flow.DbFetchData57.QueryString = @"select xsid,Jid,roomJid,token,memberJid from tb_kickFromRoom_verification where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData57.Timeout = (int)30;
            _flow.DbFetchData57.Comment = @"";
            _flow.DbFetchData57.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData57.Name = @"查询tb_kickFromRoom_verification表中字段信息";
            VTDPropertyInfoBase pi3333 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1692 = new VTDObjectGetter(pi3333);
            VTDPropertyInfoBase pi3334 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1642 = new VTDObjectSetter(pi3334);
            binding_setter1642 = new StringFormaterDecorator(binding_setter1642,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1642 = new BindDirection(_flow.Loop56,binding_getter1692,binding_setter1642,BindTargetType.ToInProperty);
            _flow.DbFetchData57.InDirections.Add(bind_dir1642);
            VTDPropertyInfoBase pi3335 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1693 = new VTDObjectGetter(pi3335);
            VTDPropertyInfoBase pi3336 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1643 = new VTDObjectSetter(pi3336);
            bind_dir1643 = new BindDirection(_flow.DbOpenConnection39,binding_getter1693,binding_setter1643,BindTargetType.ToInProperty);
            _flow.DbFetchData57.InDirections.Add(bind_dir1643);
            XmlDocument DbFetchData57_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData57_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData57_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><xsid /><Jid /><roomJid /><token>61f048fc016c13ea5cdfa6416c6e6ef9532716b8</token><memberJid /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData57.ExpectedOutputProperties = DbFetchData57_ExpectedOutputProperties_Document;
            _flow.ReplaceStringActivity264.SourceString = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].roomJid}";
            _flow.ReplaceStringActivity264.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity264.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity264.SearchReplaceString[0].Key = @"b84ff35507754b1db1631c26abdc61f0@muc.365ime.com";
            _flow.ReplaceStringActivity264.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData248.ResultTable.Row[1].groupJid}";
            _flow.ReplaceStringActivity264.CaseSensitive = true;
            _flow.ReplaceStringActivity264.Comment = @"";
            _flow.ReplaceStringActivity264.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity264.Name = @"更新本地表中groupid字段";
            VTDPropertyInfoBase pi3337 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='roomJid'][1]");
            VTDBaseGetter binding_getter1694 = new VTDXPathGetter(pi3337,XmlTypeCode.String);
            binding_getter1694 = new XPathGetterDecorator(binding_getter1694,"{Array0}",1);
            VTDPropertyInfoBase pi3338 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1644 = new VTDObjectSetter(pi3338);
            binding_setter1644 = new StringFormaterDecorator(binding_setter1644,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].roomJid}");
            bind_dir1644 = new BindDirection(_flow.DbFetchData57,binding_getter1694,binding_setter1644,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity264.InDirections.Add(bind_dir1644);
            VTDPropertyInfoBase pi3339 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='groupJid'][1]");
            VTDBaseGetter binding_getter1695 = new VTDXPathGetter(pi3339,XmlTypeCode.String);
            binding_getter1695 = new XPathGetterDecorator(binding_getter1695,"{Array0}",1);
            VTDPropertyInfoBase pi3340 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1645 = new VTDObjectSetter(pi3340);
            binding_setter1645 = new StringFormaterDecorator(binding_setter1645,"{Step.OutputProperties.DbFetchData248.ResultTable.Row[1].groupJid}");
            bind_dir1645 = new BindDirection(_flow.DbFetchData248,binding_getter1695,binding_setter1645,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity264.InDirections.Add(bind_dir1645);
            _flow.DbFetchData265.QueryString = @"update tb_global_table set EncryptionStr = '{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].Jid}DeVawMFWs6{Step.OutputProperties.ReplaceStringActivity264.Result}' where TestCase = 1";
            _flow.DbFetchData265.Timeout = (int)30;
            _flow.DbFetchData265.Comment = @"";
            _flow.DbFetchData265.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData265.Name = @"对于本地表中token进行加密";
            VTDPropertyInfoBase pi3341 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='Jid'][1]");
            VTDBaseGetter binding_getter1696 = new VTDXPathGetter(pi3341,XmlTypeCode.String);
            binding_getter1696 = new XPathGetterDecorator(binding_getter1696,"{Array0}",1);
            VTDPropertyInfoBase pi3342 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1646 = new VTDObjectSetter(pi3342);
            binding_setter1646 = new StringFormaterDecorator(binding_setter1646,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].Jid}");
            bind_dir1646 = new BindDirection(_flow.DbFetchData57,binding_getter1696,binding_setter1646,BindTargetType.ToInProperty);
            _flow.DbFetchData265.InDirections.Add(bind_dir1646);
            VTDPropertyInfoBase pi3343 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1697 = new VTDObjectGetter(pi3343);
            VTDPropertyInfoBase pi3344 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1647 = new VTDObjectSetter(pi3344);
            binding_setter1647 = new StringFormaterDecorator(binding_setter1647,"{Step.OutputProperties.ReplaceStringActivity264.Result}");
            bind_dir1647 = new BindDirection(_flow.ReplaceStringActivity264,binding_getter1697,binding_setter1647,BindTargetType.ToInProperty);
            _flow.DbFetchData265.InDirections.Add(bind_dir1647);
            VTDPropertyInfoBase pi3345 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1698 = new VTDObjectGetter(pi3345);
            VTDPropertyInfoBase pi3346 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1648 = new VTDObjectSetter(pi3346);
            bind_dir1648 = new BindDirection(_flow.DbOpenConnection39,binding_getter1698,binding_setter1648,BindTargetType.ToInProperty);
            _flow.DbFetchData265.InDirections.Add(bind_dir1648);
            XmlDocument DbFetchData265_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData265_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData265_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData265.ExpectedOutputProperties = DbFetchData265_ExpectedOutputProperties_Document;
            _flow.CallQTPTest266.Comment = @"";
            _flow.CallQTPTest266.IconPath = @"AddIns\ServiceTest\UFT\toolbox_qtp.png";
            _flow.CallQTPTest266.Name = @"Encryption.SHA1";
            _flow.CallQTPTest266.ScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.ScriptPath}")) ? @"..\Encryption" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.ScriptPath}");
            _flow.CallQTPTest266.ActionName = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.ActionName}")) ? @"SHA1" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.ActionName}");
            _flow.CallQTPTest266.Description = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.Description}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.Description}");
            _flow.CallQTPTest266.IsActionSelected = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.IsActionSelected}")) ? @"True" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.IsActionSelected}");
            _flow.CallQTPTest266.ResultLocation = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.ResultLocation}")) ? @"RunQTPReport\" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.ResultLocation}");
            _flow.CallQTPTest266.QCScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.QCScriptPath}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest266.QCScriptPath}");
            _flow.DbFetchData267.QueryString = @"select EncryptionResult from tb_global_table where TestCase = 1";
            _flow.DbFetchData267.Timeout = (int)30;
            _flow.DbFetchData267.Comment = @"";
            _flow.DbFetchData267.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData267.Name = @"获取加密后的信息";
            VTDPropertyInfoBase pi3347 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1699 = new VTDObjectGetter(pi3347);
            VTDPropertyInfoBase pi3348 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1649 = new VTDObjectSetter(pi3348);
            bind_dir1649 = new BindDirection(_flow.DbOpenConnection39,binding_getter1699,binding_setter1649,BindTargetType.ToInProperty);
            _flow.DbFetchData267.InDirections.Add(bind_dir1649);
            XmlDocument DbFetchData267_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData267_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData267_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><EncryptionResult /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData267.ExpectedOutputProperties = DbFetchData267_ExpectedOutputProperties_Document;
            _flow.ReplaceStringActivity268.SourceString = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].token}";
            _flow.ReplaceStringActivity268.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity268.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity268.SearchReplaceString[0].Key = @"72738f03c2eb66d693992576857807ee7718b2fc";
            _flow.ReplaceStringActivity268.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData267.ResultTable.Row[1].EncryptionResult}";
            _flow.ReplaceStringActivity268.CaseSensitive = true;
            _flow.ReplaceStringActivity268.Comment = @"";
            _flow.ReplaceStringActivity268.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity268.Name = @"更新本地表中token字段";
            VTDPropertyInfoBase pi3349 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='token'][1]");
            VTDBaseGetter binding_getter1700 = new VTDXPathGetter(pi3349,XmlTypeCode.String);
            binding_getter1700 = new XPathGetterDecorator(binding_getter1700,"{Array0}",1);
            VTDPropertyInfoBase pi3350 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1650 = new VTDObjectSetter(pi3350);
            binding_setter1650 = new StringFormaterDecorator(binding_setter1650,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].token}");
            bind_dir1650 = new BindDirection(_flow.DbFetchData57,binding_getter1700,binding_setter1650,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity268.InDirections.Add(bind_dir1650);
            VTDPropertyInfoBase pi3351 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='EncryptionResult'][1]");
            VTDBaseGetter binding_getter1701 = new VTDXPathGetter(pi3351,XmlTypeCode.String);
            binding_getter1701 = new XPathGetterDecorator(binding_getter1701,"{Array0}",1);
            VTDPropertyInfoBase pi3352 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1651 = new VTDObjectSetter(pi3352);
            binding_setter1651 = new StringFormaterDecorator(binding_setter1651,"{Step.OutputProperties.DbFetchData267.ResultTable.Row[1].EncryptionResult}");
            bind_dir1651 = new BindDirection(_flow.DbFetchData267,binding_getter1701,binding_setter1651,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity268.InDirections.Add(bind_dir1651);
            _flow.ReplaceStringActivity274.SourceString = @"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].xsid}";
            _flow.ReplaceStringActivity274.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity274.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity274.SearchReplaceString[0].Key = @"x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00";
            _flow.ReplaceStringActivity274.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}";
            _flow.ReplaceStringActivity274.CaseSensitive = true;
            _flow.ReplaceStringActivity274.Comment = @"";
            _flow.ReplaceStringActivity274.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity274.Name = @"更新本地表中xsid字段";
            VTDPropertyInfoBase pi3353 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='xsid'][1]");
            VTDBaseGetter binding_getter1702 = new VTDXPathGetter(pi3353,XmlTypeCode.String);
            binding_getter1702 = new XPathGetterDecorator(binding_getter1702,"{Array0}",1);
            VTDPropertyInfoBase pi3354 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1652 = new VTDObjectSetter(pi3354);
            binding_setter1652 = new StringFormaterDecorator(binding_setter1652,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].xsid}");
            bind_dir1652 = new BindDirection(_flow.DbFetchData57,binding_getter1702,binding_setter1652,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity274.InDirections.Add(bind_dir1652);
            VTDPropertyInfoBase pi3355 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1703 = new VTDXPathGetter(pi3355,XmlTypeCode.String);
            binding_getter1703 = new XPathGetterDecorator(binding_getter1703,"{Array0}",1);
            VTDPropertyInfoBase pi3356 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1653 = new VTDObjectSetter(pi3356);
            binding_setter1653 = new StringFormaterDecorator(binding_setter1653,"{Step.OutputProperties.DbFetchData247.ResultTable.Row[1].ResponseXsid}");
            bind_dir1653 = new BindDirection(_flow.DbFetchData247,binding_getter1703,binding_setter1653,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity274.InDirections.Add(bind_dir1653);
            _flow.HTTPActivity59.TextBody = @"roomJid={Step.OutputProperties.ReplaceStringActivity264.Result}&token={Step.OutputProperties.ReplaceStringActivity268.Result}&xsid={Step.OutputProperties.ReplaceStringActivity274.Result}&Jid={Step.OutputProperties.DbFetchData57.ResultTable.Row[1].Jid}&memberJid={Step.OutputProperties.DbFetchData57.ResultTable.Row[1].memberJid}";
            _flow.HTTPActivity59.TextXmlBody = @"";
            _flow.HTTPActivity59.FileBody = @"";
            _flow.HTTPActivity59.PostBody = @"";
            _flow.HTTPActivity59.Url = @"{DataSource.tb_global_table.JXTInfoHost}{DataSource.tb_global_table.kickFromRoom}";
            _flow.HTTPActivity59.HttpMethod = @"POST";
            _flow.HTTPActivity59.HttpVersion = @"1.1";
            _flow.HTTPActivity59.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity59.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity59.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity59.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity59.Comment = @"";
            _flow.HTTPActivity59.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity59.RequestBodyType = @"Text";
            _flow.HTTPActivity59.ResponseType = @"Text";
            _flow.HTTPActivity59.Name = @"调用/xmp/kick.php";
            _flow.HTTPActivity59.Proxy.Server = @"";
            _flow.HTTPActivity59.Proxy.Username = @"";
            _flow.HTTPActivity59.Proxy.Password = @"";
            _flow.HTTPActivity59.Authentication.Username = @"";
            _flow.HTTPActivity59.Authentication.Password = @"";
            _flow.HTTPActivity59.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity59.Timeout = (int)100000;
            _flow.HTTPActivity59.ClientCertificate.Password = @"";
            _flow.HTTPActivity59.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity59.UseClientCertificate = false;
            _flow.HTTPActivity59.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity59.AllowRedirections = true;
            _flow.HTTPActivity59.ReuseCookies = false;
            _flow.HTTPActivity59.ExpectServerError = false;
            XmlDocument HTTPActivity59_XMLBody_Document = new XmlDocument();
            HTTPActivity59_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity59_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity59.XMLBody = HTTPActivity59_XMLBody_Document;
            XmlDocument HTTPActivity59_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity59_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity59_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity59.RequestMultipartInfoXml = HTTPActivity59_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity59.Multipart=false;
            VTDPropertyInfoBase pi3357 = new VTDPropertyInfoBase("JXTInfoHost");
            VTDBaseGetter binding_getter1704 = new VTDObjectGetter(pi3357);
            VTDPropertyInfoBase pi3358 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1654 = new VTDObjectSetter(pi3358);
            binding_setter1654 = new StringFormaterDecorator(binding_setter1654,"{DataSource.tb_global_table.JXTInfoHost}");
            bind_dir1654 = new BindDirection(this.DataCursorActivity285,binding_getter1704,binding_setter1654,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1654);
            VTDPropertyInfoBase pi3359 = new VTDPropertyInfoBase("kickFromRoom");
            VTDBaseGetter binding_getter1705 = new VTDObjectGetter(pi3359);
            VTDPropertyInfoBase pi3360 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1655 = new VTDObjectSetter(pi3360);
            binding_setter1655 = new StringFormaterDecorator(binding_setter1655,"{DataSource.tb_global_table.kickFromRoom}");
            bind_dir1655 = new BindDirection(this.DataCursorActivity285,binding_getter1705,binding_setter1655,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1655);
            VTDPropertyInfoBase pi3361 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1706 = new VTDObjectGetter(pi3361);
            VTDPropertyInfoBase pi3362 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1656 = new VTDObjectSetter(pi3362);
            binding_setter1656 = new StringFormaterDecorator(binding_setter1656,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1656 = new BindDirection(this.DataCursorActivity285,binding_getter1706,binding_setter1656,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1656);
            VTDPropertyInfoBase pi3363 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1707 = new VTDObjectGetter(pi3363);
            VTDPropertyInfoBase pi3364 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1657 = new VTDObjectSetter(pi3364);
            binding_setter1657 = new StringFormaterDecorator(binding_setter1657,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1657 = new BindDirection(this.DataCursorActivity285,binding_getter1707,binding_setter1657,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1657);
            VTDPropertyInfoBase pi3365 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1708 = new VTDObjectGetter(pi3365);
            VTDPropertyInfoBase pi3366 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1658 = new VTDObjectSetter(pi3366);
            binding_setter1658 = new StringFormaterDecorator(binding_setter1658,"{Step.OutputProperties.ReplaceStringActivity264.Result}");
            bind_dir1658 = new BindDirection(_flow.ReplaceStringActivity264,binding_getter1708,binding_setter1658,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1658);
            VTDPropertyInfoBase pi3367 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1709 = new VTDObjectGetter(pi3367);
            VTDPropertyInfoBase pi3368 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1659 = new VTDObjectSetter(pi3368);
            binding_setter1659 = new StringFormaterDecorator(binding_setter1659,"{Step.OutputProperties.ReplaceStringActivity268.Result}");
            bind_dir1659 = new BindDirection(_flow.ReplaceStringActivity268,binding_getter1709,binding_setter1659,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1659);
            VTDPropertyInfoBase pi3369 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1710 = new VTDObjectGetter(pi3369);
            VTDPropertyInfoBase pi3370 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1660 = new VTDObjectSetter(pi3370);
            binding_setter1660 = new StringFormaterDecorator(binding_setter1660,"{Step.OutputProperties.ReplaceStringActivity274.Result}");
            bind_dir1660 = new BindDirection(_flow.ReplaceStringActivity274,binding_getter1710,binding_setter1660,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1660);
            VTDPropertyInfoBase pi3371 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='Jid'][1]");
            VTDBaseGetter binding_getter1711 = new VTDXPathGetter(pi3371,XmlTypeCode.String);
            binding_getter1711 = new XPathGetterDecorator(binding_getter1711,"{Array0}",1);
            VTDPropertyInfoBase pi3372 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1661 = new VTDObjectSetter(pi3372);
            binding_setter1661 = new StringFormaterDecorator(binding_setter1661,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].Jid}");
            bind_dir1661 = new BindDirection(_flow.DbFetchData57,binding_getter1711,binding_setter1661,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1661);
            VTDPropertyInfoBase pi3373 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='memberJid'][1]");
            VTDBaseGetter binding_getter1712 = new VTDXPathGetter(pi3373,XmlTypeCode.String);
            binding_getter1712 = new XPathGetterDecorator(binding_getter1712,"{Array0}",1);
            VTDPropertyInfoBase pi3374 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1662 = new VTDObjectSetter(pi3374);
            binding_setter1662 = new StringFormaterDecorator(binding_setter1662,"{Step.OutputProperties.DbFetchData57.ResultTable.Row[1].memberJid}");
            bind_dir1662 = new BindDirection(_flow.DbFetchData57,binding_getter1712,binding_setter1662,BindTargetType.ToInProperty);
            _flow.HTTPActivity59.InDirections.Add(bind_dir1662);
            XmlDocument HTTPActivity59_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity59_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity59_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity59.ExpectedResponseXmlBody = HTTPActivity59_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity59_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity59_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity59_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity59.ExpectedResponseJsonBody = HTTPActivity59_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity59_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity59_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity59_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity59.ExpectedOutputProperties = HTTPActivity59_ExpectedOutputProperties_Document;
            _flow.StringToJsonActivity60.InputString = @"{Step.OutputProperties.HTTPActivity59.ResponseBody}";
            _flow.StringToJsonActivity60.Comment = @"";
            _flow.StringToJsonActivity60.IconPath = @"AddIns\ServiceTest\TransformJson\ictb_string_to_json_16.png";
            _flow.StringToJsonActivity60.Name = @"获取返回值转换为JSON";
            VTDPropertyInfoBase pi3375 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1713 = new VTDObjectGetter(pi3375);
            VTDPropertyInfoBase pi3376 = new VTDPropertyInfoBase("InputString");
            VTDBaseSetter binding_setter1663 = new VTDObjectSetter(pi3376);
            binding_setter1663 = new StringFormaterDecorator(binding_setter1663,"{Step.OutputProperties.HTTPActivity59.ResponseBody}");
            bind_dir1663 = new BindDirection(_flow.HTTPActivity59,binding_getter1713,binding_setter1663,BindTargetType.ToInProperty);
            _flow.StringToJsonActivity60.InDirections.Add(bind_dir1663);
            _flow.DbFetchData61.QueryString = @"UPDATE tb_kickFromRoom_verification set InterfaceResponse = '{Step.OutputProperties.HTTPActivity59.ResponseBody}' where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData61.Timeout = (int)30;
            _flow.DbFetchData61.Comment = @"";
            _flow.DbFetchData61.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData61.Name = @"将获取到的JSON插入到sql中";
            VTDPropertyInfoBase pi3377 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1714 = new VTDObjectGetter(pi3377);
            VTDPropertyInfoBase pi3378 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1664 = new VTDObjectSetter(pi3378);
            binding_setter1664 = new StringFormaterDecorator(binding_setter1664,"{Step.OutputProperties.HTTPActivity59.ResponseBody}");
            bind_dir1664 = new BindDirection(_flow.HTTPActivity59,binding_getter1714,binding_setter1664,BindTargetType.ToInProperty);
            _flow.DbFetchData61.InDirections.Add(bind_dir1664);
            VTDPropertyInfoBase pi3379 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1715 = new VTDObjectGetter(pi3379);
            VTDPropertyInfoBase pi3380 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1665 = new VTDObjectSetter(pi3380);
            binding_setter1665 = new StringFormaterDecorator(binding_setter1665,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1665 = new BindDirection(_flow.Loop56,binding_getter1715,binding_setter1665,BindTargetType.ToInProperty);
            _flow.DbFetchData61.InDirections.Add(bind_dir1665);
            VTDPropertyInfoBase pi3381 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1716 = new VTDObjectGetter(pi3381);
            VTDPropertyInfoBase pi3382 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1666 = new VTDObjectSetter(pi3382);
            bind_dir1666 = new BindDirection(_flow.DbOpenConnection39,binding_getter1716,binding_setter1666,BindTargetType.ToInProperty);
            _flow.DbFetchData61.InDirections.Add(bind_dir1666);
            XmlDocument DbFetchData61_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData61_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData61_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData61.ExpectedOutputProperties = DbFetchData61_ExpectedOutputProperties_Document;
            _flow.DbFetchData62.QueryString = @"update tb_kickFromRoom_verification set OutputValue = 'errorCode={Step.JsonContent.StringToJsonActivity60.errorCode}' where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData62.Timeout = (int)30;
            _flow.DbFetchData62.Comment = @"";
            _flow.DbFetchData62.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData62.Name = @"将errorcode更新到sql中";
            VTDPropertyInfoBase pi3383 = new VTDPropertyInfoBase("JsonContent","/*[local-name(.)='Object'][1]/*[local-name(.)='errorCode'][1]");
            VTDBaseGetter binding_getter1717 = new VTDJsonGetter(pi3383);
            VTDPropertyInfoBase pi3384 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1667 = new VTDObjectSetter(pi3384);
            binding_setter1667 = new StringFormaterDecorator(binding_setter1667,"{Step.JsonContent.StringToJsonActivity60.errorCode}");
            bind_dir1667 = new BindDirection(_flow.StringToJsonActivity60,binding_getter1717,binding_setter1667,BindTargetType.ToInProperty);
            _flow.DbFetchData62.InDirections.Add(bind_dir1667);
            VTDPropertyInfoBase pi3385 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1718 = new VTDObjectGetter(pi3385);
            VTDPropertyInfoBase pi3386 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1668 = new VTDObjectSetter(pi3386);
            binding_setter1668 = new StringFormaterDecorator(binding_setter1668,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1668 = new BindDirection(_flow.Loop56,binding_getter1718,binding_setter1668,BindTargetType.ToInProperty);
            _flow.DbFetchData62.InDirections.Add(bind_dir1668);
            VTDPropertyInfoBase pi3387 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1719 = new VTDObjectGetter(pi3387);
            VTDPropertyInfoBase pi3388 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1669 = new VTDObjectSetter(pi3388);
            bind_dir1669 = new BindDirection(_flow.DbOpenConnection39,binding_getter1719,binding_setter1669,BindTargetType.ToInProperty);
            _flow.DbFetchData62.InDirections.Add(bind_dir1669);
            XmlDocument DbFetchData62_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData62_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData62_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData62.ExpectedOutputProperties = DbFetchData62_ExpectedOutputProperties_Document;
            _flow.DbFetchData117.QueryString = @"select OutputValue from tb_kickFromRoom_verification where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData117.Timeout = (int)30;
            _flow.DbFetchData117.Comment = @"";
            _flow.DbFetchData117.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData117.Name = @"获取当前Case的实际值";
            VTDPropertyInfoBase pi3389 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1720 = new VTDObjectGetter(pi3389);
            VTDPropertyInfoBase pi3390 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1670 = new VTDObjectSetter(pi3390);
            binding_setter1670 = new StringFormaterDecorator(binding_setter1670,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1670 = new BindDirection(_flow.Loop56,binding_getter1720,binding_setter1670,BindTargetType.ToInProperty);
            _flow.DbFetchData117.InDirections.Add(bind_dir1670);
            VTDPropertyInfoBase pi3391 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1721 = new VTDObjectGetter(pi3391);
            VTDPropertyInfoBase pi3392 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1671 = new VTDObjectSetter(pi3392);
            bind_dir1671 = new BindDirection(_flow.DbOpenConnection39,binding_getter1721,binding_setter1671,BindTargetType.ToInProperty);
            _flow.DbFetchData117.InDirections.Add(bind_dir1671);
            XmlDocument DbFetchData117_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData117_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData117_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><OutputValue /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData117.ExpectedOutputProperties = DbFetchData117_ExpectedOutputProperties_Document;
            _flow.DbFetchData63.QueryString = @"select ExpectationValue from tb_kickFromRoom_verification where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData63.Timeout = (int)30;
            _flow.DbFetchData63.Comment = @"";
            _flow.DbFetchData63.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData63.Name = @"获取当前Case的期待值";
            VTDPropertyInfoBase pi3393 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1722 = new VTDObjectGetter(pi3393);
            VTDPropertyInfoBase pi3394 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1672 = new VTDObjectSetter(pi3394);
            binding_setter1672 = new StringFormaterDecorator(binding_setter1672,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1672 = new BindDirection(_flow.Loop56,binding_getter1722,binding_setter1672,BindTargetType.ToInProperty);
            _flow.DbFetchData63.InDirections.Add(bind_dir1672);
            VTDPropertyInfoBase pi3395 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1723 = new VTDObjectGetter(pi3395);
            VTDPropertyInfoBase pi3396 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1673 = new VTDObjectSetter(pi3396);
            bind_dir1673 = new BindDirection(_flow.DbOpenConnection39,binding_getter1723,binding_setter1673,BindTargetType.ToInProperty);
            _flow.DbFetchData63.InDirections.Add(bind_dir1673);
            XmlDocument DbFetchData63_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData63_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData63_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><ExpectationValue /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData63.ExpectedOutputProperties = DbFetchData63_ExpectedOutputProperties_Document;
            _flow.IfElse64.ConditionAsString = @"{Step.OutputProperties.DbFetchData117.ResultTable.Row[1].OutputValue} Equal {Step.OutputProperties.DbFetchData63.ResultTable.Row[1].ExpectationValue}";
            _flow.IfElse64.Comment = @"";
            _flow.IfElse64.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_if_else.png";
            _flow.IfElse64.Name = @"填写Result";
            _flow.IfElse64.Activities.Add (_flow.IfElseBranch65);
            _flow.IfElse64.Activities.Add (_flow.IfElseBranch66);
            _flow.IfElseBranch65.Condition += delegate(object sender,EventArgs e)
            {
            	try
            	{
            VTDPropertyInfoBase pi3397 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='OutputValue'][1]");
            VTDBaseGetter binding_getter1724 = new VTDXPathGetter(pi3397,XmlTypeCode.String);
            binding_getter1724 = new XPathGetterDecorator(binding_getter1724,"{Array0}",1);
            		System.String expr00 = (System.String)HP.ST.Fwk.RunTimeFWK.Utilities.Utils.ConvertValue(_flow.DbFetchData117.GetParam(binding_getter1724),typeof(System.String));
            		var result0 = expr00;
            VTDPropertyInfoBase pi3398 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ExpectationValue'][1]");
            VTDBaseGetter binding_getter1725 = new VTDXPathGetter(pi3398,XmlTypeCode.String);
            binding_getter1725 = new XPathGetterDecorator(binding_getter1725,"{Array0}",1);
            		System.String expr10 = (System.String)HP.ST.Fwk.RunTimeFWK.Utilities.Utils.ConvertValue(_flow.DbFetchData63.GetParam(binding_getter1725),typeof(System.String));
            		var result1 = expr10;
            		return (result0 == result1);
            	}
            	catch(Exception exp)
            	{
            		if (exp is System.InvalidCastException)
            		{
            			throw;
            		}
            		else
            		{
            			return false;
            		}
            	};
            };
            _flow.IfElseBranch65.Comment = @"";
            _flow.IfElseBranch65.IconPath = @"";
            _flow.IfElseBranch65.Name = @"是";
            _flow.IfElseBranch65.Activities.Add (_flow.DbFetchData67);
            _flow.IfElseBranch66.Condition += delegate(object sender,EventArgs e)
            {
            return true;
            };
            _flow.IfElseBranch66.Comment = @"";
            _flow.IfElseBranch66.IconPath = @"";
            _flow.IfElseBranch66.Name = @"否";
            _flow.IfElseBranch66.Activities.Add (_flow.DbFetchData68);
            _flow.DbFetchData67.QueryString = @"update tb_kickFromRoom_verification set Result = 'True' where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData67.Timeout = (int)30;
            _flow.DbFetchData67.Comment = @"";
            _flow.DbFetchData67.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData67.Name = @"在Result字段插入True";
            VTDPropertyInfoBase pi3399 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1726 = new VTDObjectGetter(pi3399);
            VTDPropertyInfoBase pi3400 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1674 = new VTDObjectSetter(pi3400);
            binding_setter1674 = new StringFormaterDecorator(binding_setter1674,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1674 = new BindDirection(_flow.Loop56,binding_getter1726,binding_setter1674,BindTargetType.ToInProperty);
            _flow.DbFetchData67.InDirections.Add(bind_dir1674);
            VTDPropertyInfoBase pi3401 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1727 = new VTDObjectGetter(pi3401);
            VTDPropertyInfoBase pi3402 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1675 = new VTDObjectSetter(pi3402);
            bind_dir1675 = new BindDirection(_flow.DbOpenConnection39,binding_getter1727,binding_setter1675,BindTargetType.ToInProperty);
            _flow.DbFetchData67.InDirections.Add(bind_dir1675);
            XmlDocument DbFetchData67_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData67_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData67_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData67.ExpectedOutputProperties = DbFetchData67_ExpectedOutputProperties_Document;
            _flow.DbFetchData68.QueryString = @"update tb_kickFromRoom_verification set Result = 'False' where TestCase = {Step.OutputProperties.Loop56.CurrentIterationNumber}";
            _flow.DbFetchData68.Timeout = (int)30;
            _flow.DbFetchData68.Comment = @"";
            _flow.DbFetchData68.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData68.Name = @"在Result字段插入False";
            VTDPropertyInfoBase pi3403 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1728 = new VTDObjectGetter(pi3403);
            VTDPropertyInfoBase pi3404 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1676 = new VTDObjectSetter(pi3404);
            binding_setter1676 = new StringFormaterDecorator(binding_setter1676,"{Step.OutputProperties.Loop56.CurrentIterationNumber}");
            bind_dir1676 = new BindDirection(_flow.Loop56,binding_getter1728,binding_setter1676,BindTargetType.ToInProperty);
            _flow.DbFetchData68.InDirections.Add(bind_dir1676);
            VTDPropertyInfoBase pi3405 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1729 = new VTDObjectGetter(pi3405);
            VTDPropertyInfoBase pi3406 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1677 = new VTDObjectSetter(pi3406);
            bind_dir1677 = new BindDirection(_flow.DbOpenConnection39,binding_getter1729,binding_setter1677,BindTargetType.ToInProperty);
            _flow.DbFetchData68.InDirections.Add(bind_dir1677);
            XmlDocument DbFetchData68_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData68_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData68_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData68.ExpectedOutputProperties = DbFetchData68_ExpectedOutputProperties_Document;
            
        }
        
        internal void InitializeEncryptionManagerValues()
        {
        
        }
        	
    	bool useReport = true;
    
    	protected override STExecutionResult ExecuteStep()
        {
            return base.ExecuteStep();
        }
    
        public void Start()
        {
    	    try
    		{
    		  Workflow_Executing();
    		  this.ExecuteStep();
    		}
    		finally
    		{
    		  WorkFlowScript_Completed();
    		}
        }
    
    	private void InitReport()
    	{
    		if (useReport)
    		{	
    			// Intialize Reporter
    			string reportDBDir = Path.Combine(this._context.ReportDirectory, @"Report");
    			CleanupReport(reportDBDir);        	
    			string reportDBPath = Path.Combine(reportDBDir, "VTDReport.mdb");        	
    			if (reporter == null)
    			{
    				reporter = new Reporter(reportDBPath);
    			}
    			_context.Reporter = reporter;
    		}
    	}
    
        public static void CopyDirectory(string Src, string Dst)
        {
            String[] Files;
    
            if (Dst[Dst.Length - 1] != Path.DirectorySeparatorChar)
                Dst += Path.DirectorySeparatorChar;
            if (!Directory.Exists(Dst)) Directory.CreateDirectory(Dst);
            Files = Directory.GetFileSystemEntries(Src);
            foreach (string Element in Files)
            {
                // Sub directories
                if (Directory.Exists(Element))
                    CopyDirectory(Element, Dst + Path.GetFileName(Element));
                // Files in directory
                else
                    File.Copy(Element, Dst + Path.GetFileName(Element), true);
            }
        }
        
        private void CleanupReport(string reportDBDir)
        {   
    		if (useReport)
    		{             
    			string reportTemplateDir = Path.Combine(ServiceTestRunner.GetInstallPath(),@"bin\ReportResources");                
    			try
    			{
            		CopyDirectory(reportTemplateDir, reportDBDir);
    			}
    			catch //(Exception ex)
    			{
    				//ToDo: LoggingService.Warn("Report Cleanup Error", ex);
    			}
    		}
        }
    
        void Workflow_Executing()
        {   
        	InitReportNode();
                       
        }
    
    	private void InitReportNode()
    	{
    		if (useReport)
    		{	
        		// Init report creator
    			this.reportCreator = new HP.ST.Fwk.ReportCreator.QTPEngine.QTPEngineReportCreator();
    			this.reportLevelInTree = reportCreator.Init(_context.EnvironmentProfile.GetVariableValue("TestName"), _context);
                
    			STActivityBase activity = this;
    			string workflowID = activity.GetHashCode().ToString();
    			ReportNodeCreationData newNodeData =
    			new ReportNodeCreationData(workflowID, workflowID, DateTime.Now);
    			reporter.CreateReportNode(newNodeData);
            
    			ReportInfoData newReportData = new ReportInfoData(workflowID, ReportKeywords.TypeKeywordTag, this.GetType().ToString());
    			reporter.SendReportData(newReportData);
    			newReportData = new ReportInfoData(workflowID, ReportKeywords.NameKeywordTag, this.Name);
    			//TrackData(ReportInfoData.InfoDataTag, newReportData);
    			reporter.SendReportData(newReportData);            
            }
    	}
        
        void WorkFlowScript_Completed()
        {   
    		
    
    		CreateReportFiles();
    					
        	// Write all snapshots to disk
    		this._context.SnapshotManager.WriteSnapshotsToDisk();
    			
    		
    
    		OnExecutionCompleted();
    		
        }
    
    	private void CreateReportFiles()
    	{
    		if (useReport)
    		{	
    			//Dispose reporter inorder to close connection to report DB
           		this._context.Reporter.Dispose();
            	
           		// Run report creator
    			reportCreator.RunOnDBAndCreateFiles();
    		}
    	}
    
        
        void Workflow_Faulting()
        {
    		
    
    		CreateReportFiles();
            // Write all snapshots to disk
    		this._context.SnapshotManager.WriteSnapshotsToDisk();
           
    		OnExecutionCompleted();
        }
    
    	protected override QcSystemVariables GetRuntimeQcVariables(ISTRunTimeContext context)
    	{
    		return new HP.ST.Ext.BasicActivities.RuntimeQcVariables(this._context);
    	}
            
    	protected override TestSystemVariables GetTestSystemVariables(ISTRunTimeContext context)
    	{
    		return new HP.ST.Ext.BasicActivities.RuntimeTestVariables(this._context);
    	}
    
    	private void UpdateTestSettings(ISTRunTimeContext ctx)
        {
    		ctx.PropertyBag["StopTestOnStepFailure"] = true;
    	}
    
    protected override void OnThreadStart()
    {
    
    }
    }
    
    public partial class VuserClass
    {
    	public static string[] CommandLineArguments;
    	public static string[] DotNetResolverPaths;
    	
    	
    	public static void InitJavaEnv(string classPath, string additionalVMargs)
    	{
    		JVMLoader.LoadJVM(classPath, additionalVMargs);
    	}
    	
    	
    		
        public VuserClass()
        {
    				
    		AssemblyResolver.AddSTPathsToResolutionPaths();
    		AssemblyResolver.AttachToAppdomain();
        }
    
        private void AddAssemblyResolver()
        {
    		AssemblyResolver.AddTestPathToResolutionPaths(GetTestPath());
    		AssemblyResolver.AddPathsForAssemblyResolution(DotNetResolverPaths);
        }
    	
        public int STAction()
        {	
            AddAssemblyResolver();
            STRunTimeContext ctx = new STRunTimeContext(Directory.GetParent(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)).FullName, string.Empty);
            WorkFlowScript script = new WorkFlowScript(ctx);
            script.InitializeComponent();
            script.Start();       
            
            return 0;
        }
        
        public void NotifyLicenseException(string msg)
        {
        		
    		try
    		{
    		    STRunTimeContext ctx = new STRunTimeContext(Directory.GetParent(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)).FullName, string.Empty);
                WorkFlowScript script = new WorkFlowScript(ctx);
                script.InitializeComponent();
                script.Context.ReplayClient.OnLicenseFailure(msg);
                
            }
            catch (Exception)
            {
    			// ToDo: log the error message
            }        
        }
    
    	 protected string GetTestPath()
            {
                if (CommandLineArguments != null)
                {
                    for (int i = 0; i < CommandLineArguments.Length; i++)
                    {
                        if (CommandLineArguments[i].Equals("-test", StringComparison.OrdinalIgnoreCase))
                        {
                            return CommandLineArguments[i + 1];
                        }
                    }
                }
                return String.Empty;
            }
        
    }
    
    }
    