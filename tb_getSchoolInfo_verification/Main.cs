/***************************************************************
    *  DO NOT EDIT THIS FILE!
    *         
    *  This file is automatically generated by HP Service Test.
    *  Manually changing the contents of this file may result in 
    *  loss of information.
    *          
    *  To edit the test, open the file ‘tb_getSchoolInfo_verification.st’ 
    *  in HP Service Test.
     ***************************************************************/
    
    namespace Script
    {
    using System;
    using System.Text;
    using System.Threading;
    using System.Xml;
    using System.Xml.Schema;
    using HP.ST.Fwk.ReporterFWK;
    using HP.ST.Shared.Utilities;
    using HP.ST.Ext.BindingImpl.Getters;
    using HP.ST.Ext.BindingImpl.Setters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.PropInfo;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Getters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Setters;
    using HP.ST.Fwk.RunTimeFWK;
    using HP.ST.Fwk.RunTimeFWK.Utilities;
    using HP.ST.Fwk.RunTimeFWK.HelperClasses;
    using HP.ST.Fwk.RunTimeFWK.CompositeActivities;
    using HP.ST.Ext.BindingImpl.Setters.DataSourceSetters;
    using HP.ST.Fwk.JVMLoader;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using HP.ST.Fwk.SOAReplayAPI;
    using HP.ST.Fwk.UFTLicensing;
    
    
    
    public partial class WorkFlowScript : STWorkFlowScriptBase
    {    
    	TestUserCode _userCode = null;
    	TestEntities _flow = null;
    	static Reporter reporter;
    	int reportLevelInTree;
        HP.ST.Fwk.ReportCreator.QTPEngine.QTPEngineReportCreator reportCreator;
    	
    	public BindDirection bind_dir1514 = null;
        public BindDirection bind_dir1515 = null;
        public BindDirection bind_dir1516 = null;
        public BindDirection bind_dir1517 = null;
        public HP.ST.Ext.BasicActivities.DataCursorActivity DataCursorActivity269 = null;
        public BindDirection bind_dir1518 = null;
        public HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy DataCursorActivity269_Policy = null;
        public BindDirection bind_dir1519 = null;
        public BindDirection bind_dir1520 = null;
        public BindDirection bind_dir1521 = null;
        public BindDirection bind_dir1522 = null;
        public BindDirection bind_dir1523 = null;
        public BindDirection bind_dir1524 = null;
        public BindDirection bind_dir1525 = null;
        public BindDirection bind_dir1526 = null;
        public BindDirection bind_dir1527 = null;
        public BindDirection bind_dir1528 = null;
        public BindDirection bind_dir1529 = null;
        public BindDirection bind_dir1530 = null;
        public BindDirection bind_dir1531 = null;
        public BindDirection bind_dir1532 = null;
        public BindDirection bind_dir1533 = null;
        public BindDirection bind_dir1534 = null;
        public BindDirection bind_dir1535 = null;
        public BindDirection bind_dir1536 = null;
        public BindDirection bind_dir1537 = null;
        public BindDirection bind_dir1538 = null;
        public BindDirection bind_dir1539 = null;
        public HP.ST.Ext.BasicActivities.DataCursorActivity DataCursorActivity270 = null;
        public BindDirection bind_dir1540 = null;
        public HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy DataCursorActivity270_Policy = null;
        public BindDirection bind_dir1541 = null;
        public BindDirection bind_dir1542 = null;
        public BindDirection bind_dir1543 = null;
        public BindDirection bind_dir1544 = null;
        public BindDirection bind_dir1545 = null;
        public BindDirection bind_dir1546 = null;
        public BindDirection bind_dir1547 = null;
        public BindDirection bind_dir1548 = null;
        public BindDirection bind_dir1549 = null;
        public BindDirection bind_dir1550 = null;
        public BindDirection bind_dir1551 = null;
        public BindDirection bind_dir1552 = null;
        public BindDirection bind_dir1553 = null;
        public BindDirection bind_dir1554 = null;
        public BindDirection bind_dir1555 = null;
        public BindDirection bind_dir1556 = null;
        public BindDirection bind_dir1557 = null;
        public BindDirection bind_dir1558 = null;
        public BindDirection bind_dir1559 = null;
        public BindDirection bind_dir1560 = null;
        public BindDirection bind_dir1561 = null;
        public BindDirection bind_dir1562 = null;
        public BindDirection bind_dir1563 = null;
        public BindDirection bind_dir1564 = null;
        public BindDirection bind_dir1565 = null;
        public BindDirection bind_dir1566 = null;
        public BindDirection bind_dir1567 = null;
        public BindDirection bind_dir1568 = null;
        public BindDirection bind_dir1569 = null;
        public BindDirection bind_dir1570 = null;
        public BindDirection bind_dir1571 = null;
        public BindDirection bind_dir1572 = null;
        public BindDirection bind_dir1573 = null;
        public BindDirection bind_dir1574 = null;
        public BindDirection bind_dir1575 = null;
        public BindDirection bind_dir1576 = null;
        
        public IEnumerable<FeaturesGroup> LicensedFeatures
        {
        
        get
        {
        List<FeaturesGroup> features = new List<FeaturesGroup>();
        FeaturesGroup fg1 = new FeaturesGroup();
            fg1.Add(new LicenseFeature("UnifiedFunctionalTesting","1.0"));
            fg1.Add(new LicenseFeature("UnifiedFunctionalTesting","1.1"));
            fg1.Add(new LicenseFeature("UnifiedFunctionalTesting","1.2"));
            features.Add(fg1);
            FeaturesGroup fg2 = new FeaturesGroup();
            return features;
        
        }
        
        }
        
        public WorkFlowScript()
            : base(VuserClass.CommandLineArguments, new STRunTimeContext(), "test")
        {	
        	UpdateContextWithActionFolder(String.Empty);
        	
        }
        
        public WorkFlowScript(ISTRunTimeContext ctx)
            : base(VuserClass.CommandLineArguments, ctx, "test")
            
        {
        	this._context = ctx;
        	UpdateContextWithActionFolder(String.Empty);
        	UpdateTestSettings(ctx);
        }
        
        internal void InitializeComponent()
        {
        	LoadInput();
        	
        	InitReport();
        	
        	InitializeEncryptionManagerValues();
        
        	_userCode = new TestUserCode();
            _flow = _userCode;
            _flow.Context=this._context;
            
            
        
        	_flow.DataFetchActivity265 = new HP.ST.Ext.BasicActivities.DataFetchActivity(_context,"DataFetchActivity265");
            _flow.DataFetchActivity262 = new HP.ST.Ext.BasicActivities.DataFetchActivity(_context,"DataFetchActivity262");
            _flow.StartActivity1 = new HP.ST.Ext.BasicActivities.StartActivity(_context,"StartActivity1");
            _flow.Loop2 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Loop<Loop2Input>(_context,"Loop2",LoopType.For);
            _flow.DataExporterActivity264 = new HP.ST.Ext.BasicActivities.DataExporterActivity(_context,"DataExporterActivity264");
            _flow.DataExporterActivity267 = new HP.ST.Ext.BasicActivities.DataExporterActivity(_context,"DataExporterActivity267");
            _flow.DataExporterCloseActivity268 = new HP.ST.Ext.BasicActivities.DataExporterCloseActivity(_context,"DataExporterCloseActivity268");
            _flow.EndActivity3 = new HP.ST.Ext.BasicActivities.EndActivity(_context,"EndActivity3");
            _flow.DataDisconnectActivity263 = new HP.ST.Ext.BasicActivities.DataDisconnectActivity(_context,"DataDisconnectActivity263");
            _flow.DataDisconnectActivity266 = new HP.ST.Ext.BasicActivities.DataDisconnectActivity(_context,"DataDisconnectActivity266");
            this.DataCursorActivity269 = new HP.ST.Ext.BasicActivities.DataCursorActivity(_context,"DataCursorActivity269");
            this.DataCursorActivity269_Policy = new HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy();
            _flow.Sequence260 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Sequence(_context,"Sequence260");
            _flow.DbOpenConnection39 = new HP.ST.Ext.DatabaseRunTime.DbOpenConnection(_context,"DbOpenConnection39");
            _flow.DbFetchData79 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData79");
            _flow.DbFetchData248 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData248");
            _flow.DbFetchData250 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData250");
            _flow.Loop78 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Loop<Loop78Input>(_context,"Loop78",LoopType.For);
            _flow.DbFetchData93 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData93");
            _flow.CallQTPTest94 = new HP.ST.Ext.UFTActivity.QtpTestActivity(_context,"CallQTPTest94");
            _flow.DbFetchData95 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData95");
            _flow.DbFetchData246 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData246");
            _flow.HTTPActivity92 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity92");
            _flow.ReplaceStringActivity259 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity259");
            _flow.StringToJsonActivity115 = new HP.ST.Ext.TransformJsonActivity.StringToJsonActivity(_context,"StringToJsonActivity115");
            _flow.DbFetchData247 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData247");
            _flow.DbFetchData96 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData96");
            this.DataCursorActivity270 = new HP.ST.Ext.BasicActivities.DataCursorActivity(_context,"DataCursorActivity270");
            this.DataCursorActivity270_Policy = new HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy();
            _flow.Sequence261 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Sequence(_context,"Sequence261");
            _flow.DbFetchData80 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData80");
            _flow.ReplaceStringActivity249 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity249");
            _flow.ReplaceStringActivity251 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity251");
            _flow.DbFetchData253 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData253");
            _flow.CallQTPTest254 = new HP.ST.Ext.UFTActivity.QtpTestActivity(_context,"CallQTPTest254");
            _flow.DbFetchData255 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData255");
            _flow.ReplaceStringActivity252 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity252");
            _flow.HTTPActivity81 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity81");
            _flow.StringToJsonActivity82 = new HP.ST.Ext.TransformJsonActivity.StringToJsonActivity(_context,"StringToJsonActivity82");
            _flow.ReplaceStringActivity258 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity258");
            _flow.DbFetchData83 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData83");
            _flow.DbFetchData84 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData84");
            _flow.DbFetchData85 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData85");
            _flow.DbFetchData86 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData86");
            _flow.IfElse87 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.IfElse<IfElse87Input>(_context,"IfElse87");
            _flow.IfElseBranch88 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.IfElseBranch(_context,"IfElseBranch88");
            _flow.IfElseBranch89 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.IfElseBranch(_context,"IfElseBranch89");
            _flow.DbFetchData90 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData90");
            _flow.DbFetchData91 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData91");
            _flow.DataFetchActivity265.Comment = @"";
            _flow.DataFetchActivity265.IconPath = @"";
            _flow.DataFetchActivity265.AssemblyPath = @"AddIns\ServiceTest\BaseDataProviders\HP.ST.Ext.CustomDataProviders.dll";
            _flow.DataFetchActivity265.QueryClassName = @"HP.ST.Ext.CustomDataProviders.DbDataQuery";
            XmlDocument DataFetchActivity265_QueryParameters_Document = new XmlDocument();
            DataFetchActivity265_QueryParameters_Document.PreserveWhitespace = true;
            string xmlDataFetchActivity265Params = @"<Arguments><QueryParametersContainer><QueryParameter><Name>Id</Name><Value>6704d522-5d6d-4d1f-b543-b5d5e85e7f33</Value></QueryParameter><QueryParameter><Name>QueryName</Name><Value>tb_sso_authorize_verification</Value></QueryParameter><QueryParameter><Name>IsEmbedded</Name><Value>True</Value></QueryParameter><QueryParameter><Name>Externalized</Name><Value>False</Value></QueryParameter><QueryParameter><Name>GroupText</Name><Value></Value></QueryParameter><QueryParameter><Name>ConnectionString</Name><Value>DSN=localhost;Uid=root;Pwd={PWD};</Value></QueryParameter><QueryParameter><Name>SqlStatement</Name><Value>select * from tb_sso_authorize_verification</Value></QueryParameter><QueryParameter><Name>Password</Name><Value>UqIq+/M1hvnEiRgp6HH+dg==</Value></QueryParameter><QueryParameter><Name>DatabaseType</Name><Value>ODBC</Value></QueryParameter></QueryParametersContainer></Arguments>";
            DataFetchActivity265_QueryParameters_Document.LoadXml(xmlDataFetchActivity265Params);
            _flow.DataFetchActivity265.QueryParameters = DataFetchActivity265_QueryParameters_Document;
            _flow.dataSourceNameToDataSource.Add("tb_sso_authorize_verification", _flow.DataFetchActivity265);
            this.Activities.Add (_flow.DataFetchActivity265);
            _flow.DataFetchActivity262.Comment = @"";
            _flow.DataFetchActivity262.IconPath = @"";
            _flow.DataFetchActivity262.AssemblyPath = @"AddIns\ServiceTest\BaseDataProviders\HP.ST.Ext.CustomDataProviders.dll";
            _flow.DataFetchActivity262.QueryClassName = @"HP.ST.Ext.CustomDataProviders.DbDataQuery";
            XmlDocument DataFetchActivity262_QueryParameters_Document = new XmlDocument();
            DataFetchActivity262_QueryParameters_Document.PreserveWhitespace = true;
            string xmlDataFetchActivity262Params = @"<Arguments><QueryParametersContainer><QueryParameter><Name>Id</Name><Value>3c16ad12-8441-44fc-ba3f-59f4289acca5</Value></QueryParameter><QueryParameter><Name>QueryName</Name><Value>tb_global_table</Value></QueryParameter><QueryParameter><Name>IsEmbedded</Name><Value>True</Value></QueryParameter><QueryParameter><Name>Externalized</Name><Value>False</Value></QueryParameter><QueryParameter><Name>GroupText</Name><Value></Value></QueryParameter><QueryParameter><Name>ConnectionString</Name><Value>DSN=192.168.50.11;Uid=ime;Pwd={PWD};</Value></QueryParameter><QueryParameter><Name>SqlStatement</Name><Value>select * from tb_global_table where TestCase = '1'</Value></QueryParameter><QueryParameter><Name>Password</Name><Value>nS9jToOb4zLJent8hCRcVg==</Value></QueryParameter><QueryParameter><Name>DatabaseType</Name><Value>ODBC</Value></QueryParameter></QueryParametersContainer></Arguments>";
            DataFetchActivity262_QueryParameters_Document.LoadXml(xmlDataFetchActivity262Params);
            _flow.DataFetchActivity262.QueryParameters = DataFetchActivity262_QueryParameters_Document;
            _flow.dataSourceNameToDataSource.Add("tb_global_table", _flow.DataFetchActivity262);
            this.Activities.Add (_flow.DataFetchActivity262);
            _flow.StartActivity1.Comment = @"";
            _flow.StartActivity1.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_code_activity.png";
            _flow.StartActivity1.Name = @"开始";
            this.Activities.Add (_flow.StartActivity1);
            _flow.Loop2.ConditionAsString = @"Run for 1 iteration";
            _flow.Loop2.NumberOfIterations = (int)1;
            _flow.Loop2.Comment = @"";
            _flow.Loop2.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_loop.png";
            _flow.Loop2.Name = @"测试流";
            _flow.Loop2.Activities.Add (this.DataCursorActivity269);
            _flow.Loop2.Activities.Add (_flow.Sequence260);
            this.Activities.Add (_flow.Loop2);
            _flow.DataExporterActivity264.Comment = @"";
            _flow.DataExporterActivity264.IconPath = @"";
            VTDPropertyInfoBase pi3075 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1562 = new VTDObjectGetter(pi3075);
            VTDPropertyInfoBase pi3076 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter1514 = new VTDObjectSetter(pi3076);
            binding_setter1514 = new StringFormaterDecorator(binding_setter1514,"{Step.DataFetchActivity262.OutTable}");
            bind_dir1514 = new BindDirection(_flow.DataFetchActivity262,binding_getter1562,binding_setter1514,BindTargetType.ToInProperty);
            _flow.DataExporterActivity264.InDirections.Add(bind_dir1514);
            this.Activities.Add (_flow.DataExporterActivity264);
            _flow.DataExporterActivity267.Comment = @"";
            _flow.DataExporterActivity267.IconPath = @"";
            VTDPropertyInfoBase pi3077 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1563 = new VTDObjectGetter(pi3077);
            VTDPropertyInfoBase pi3078 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter1515 = new VTDObjectSetter(pi3078);
            binding_setter1515 = new StringFormaterDecorator(binding_setter1515,"{Step.DataFetchActivity265.OutTable}");
            bind_dir1515 = new BindDirection(_flow.DataFetchActivity265,binding_getter1563,binding_setter1515,BindTargetType.ToInProperty);
            _flow.DataExporterActivity267.InDirections.Add(bind_dir1515);
            this.Activities.Add (_flow.DataExporterActivity267);
            _flow.DataExporterCloseActivity268.Comment = @"";
            _flow.DataExporterCloseActivity268.IconPath = @"";
            this.Activities.Add (_flow.DataExporterCloseActivity268);
            _flow.EndActivity3.Comment = @"";
            _flow.EndActivity3.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_code_activity.png";
            _flow.EndActivity3.Name = @"结束";
            this.Activities.Add (_flow.EndActivity3);
            _flow.DataDisconnectActivity263.Comment = @"";
            _flow.DataDisconnectActivity263.IconPath = @"";
            VTDPropertyInfoBase pi3079 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1564 = new VTDObjectGetter(pi3079);
            VTDPropertyInfoBase pi3080 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter1516 = new VTDObjectSetter(pi3080);
            binding_setter1516 = new StringFormaterDecorator(binding_setter1516,"{Step.DataFetchActivity262.OutTable}");
            bind_dir1516 = new BindDirection(_flow.DataFetchActivity262,binding_getter1564,binding_setter1516,BindTargetType.ToInProperty);
            _flow.DataDisconnectActivity263.InDirections.Add(bind_dir1516);
            this.Activities.Add (_flow.DataDisconnectActivity263);
            _flow.DataDisconnectActivity266.Comment = @"";
            _flow.DataDisconnectActivity266.IconPath = @"";
            VTDPropertyInfoBase pi3081 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1565 = new VTDObjectGetter(pi3081);
            VTDPropertyInfoBase pi3082 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter1517 = new VTDObjectSetter(pi3082);
            binding_setter1517 = new StringFormaterDecorator(binding_setter1517,"{Step.DataFetchActivity265.OutTable}");
            bind_dir1517 = new BindDirection(_flow.DataFetchActivity265,binding_getter1565,binding_setter1517,BindTargetType.ToInProperty);
            _flow.DataDisconnectActivity266.InDirections.Add(bind_dir1517);
            this.Activities.Add (_flow.DataDisconnectActivity266);
            this.DataCursorActivity269.Comment = @"";
            this.DataCursorActivity269.IconPath = @"";
            VTDPropertyInfoBase pi3083 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1566 = new VTDObjectGetter(pi3083);
            VTDPropertyInfoBase pi3084 = new VTDPropertyInfoBase("InTable");
            VTDBaseSetter binding_setter1518 = new VTDObjectSetter(pi3084);
            binding_setter1518 = new StringFormaterDecorator(binding_setter1518,"{Step.DataFetchActivity262.OutTable}");
            bind_dir1518 = new BindDirection(_flow.DataFetchActivity262,binding_getter1566,binding_setter1518,BindTargetType.ToInProperty);
            this.DataCursorActivity269.InDirections.Add(bind_dir1518);
            this.DataCursorActivity269_Policy.StartPosition = CursorStartPosition.FirstRecord;
            this.DataCursorActivity269_Policy.StartAtSpecificRow = 1;
            this.DataCursorActivity269_Policy.StartCondition.ColumnName = "";
            this.DataCursorActivity269_Policy.StartCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity269_Policy.StartCondition.Value = "";
            this.DataCursorActivity269_Policy.EndPosition = CursorEndPosition.LastRecord;
            this.DataCursorActivity269_Policy.EndAtSpecificRow = 1;
            this.DataCursorActivity269_Policy.EndCondition.ColumnName = "";
            this.DataCursorActivity269_Policy.EndCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity269_Policy.EndCondition.Value = "";
            this.DataCursorActivity269_Policy.StepType = CursorStepType.Forward;
            this.DataCursorActivity269_Policy.StepSize = 1;
            this.DataCursorActivity269_Policy.ActionAfterLastRecord = CursorActionAfterLastRecord.Wraparound;
            this.DataCursorActivity269.Policy = this.DataCursorActivity269_Policy;
            this.DataCursorActivity269.ReportStepData = true;
            _flow.Loop2.BeforeExecuteStepEvent += this.DataCursorActivity269.ResetCursor;
            _flow.Sequence260.Comment = @"";
            _flow.Sequence260.IconPath = @"";
            _flow.Sequence260.Name = @"序列260";
            _flow.Sequence260.Activities.Add (_flow.DbOpenConnection39);
            _flow.Sequence260.Activities.Add (_flow.DbFetchData79);
            _flow.Sequence260.Activities.Add (_flow.DbFetchData248);
            _flow.Sequence260.Activities.Add (_flow.DbFetchData250);
            _flow.Sequence260.Activities.Add (_flow.Loop78);
            _flow.Sequence260.Activities.Add (_flow.DbFetchData93);
            _flow.Sequence260.Activities.Add (_flow.CallQTPTest94);
            _flow.Sequence260.Activities.Add (_flow.DbFetchData95);
            _flow.Sequence260.Activities.Add (_flow.DbFetchData246);
            _flow.Sequence260.Activities.Add (_flow.HTTPActivity92);
            _flow.Sequence260.Activities.Add (_flow.ReplaceStringActivity259);
            _flow.Sequence260.Activities.Add (_flow.StringToJsonActivity115);
            _flow.Sequence260.Activities.Add (_flow.DbFetchData247);
            _flow.Sequence260.Activities.Add (_flow.DbFetchData96);
            _flow.DbOpenConnection39.ConnectionString = @"DSN=192.168.50.11;Uid=ime;Pwd={PWD};";
            _flow.DbOpenConnection39.Password = @"nS9jToOb4zLJent8hCRcVg==";
            _flow.DbOpenConnection39.DatabaseType = HP.ST.Shared.Utilities.DB.DatabaseType.ODBC;
            _flow.DbOpenConnection39.Comment = @"";
            _flow.DbOpenConnection39.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_connect.png";
            _flow.DbOpenConnection39.Name = @"连接到mysql数据库";
            _flow.DbFetchData79.QueryString = @"select count(*) as 'Row' from tb_getschoolinfo_verification";
            _flow.DbFetchData79.Timeout = (int)30;
            _flow.DbFetchData79.Comment = @"";
            _flow.DbFetchData79.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData79.Name = @"获取tb_getSchoolInfo_verification有效行数";
            VTDPropertyInfoBase pi3085 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1567 = new VTDObjectGetter(pi3085);
            VTDPropertyInfoBase pi3086 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1519 = new VTDObjectSetter(pi3086);
            bind_dir1519 = new BindDirection(_flow.DbOpenConnection39,binding_getter1567,binding_setter1519,BindTargetType.ToInProperty);
            _flow.DbFetchData79.InDirections.Add(bind_dir1519);
            XmlDocument DbFetchData79_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData79_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData79_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><Row /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData79.ExpectedOutputProperties = DbFetchData79_ExpectedOutputProperties_Document;
            _flow.DbFetchData248.QueryString = @"select ResponseXsid from tb_global_table where TestCase = 1";
            _flow.DbFetchData248.Timeout = (int)30;
            _flow.DbFetchData248.Comment = @"";
            _flow.DbFetchData248.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData248.Name = @"查询tb_global_table表中ResponseXsid值";
            VTDPropertyInfoBase pi3087 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1568 = new VTDObjectGetter(pi3087);
            VTDPropertyInfoBase pi3088 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1520 = new VTDObjectSetter(pi3088);
            bind_dir1520 = new BindDirection(_flow.DbOpenConnection39,binding_getter1568,binding_setter1520,BindTargetType.ToInProperty);
            _flow.DbFetchData248.InDirections.Add(bind_dir1520);
            XmlDocument DbFetchData248_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData248_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData248_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><ResponseXsid /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData248.ExpectedOutputProperties = DbFetchData248_ExpectedOutputProperties_Document;
            _flow.DbFetchData250.QueryString = @"select LoginTeacherUsername from tb_global_table where TestCase = 1";
            _flow.DbFetchData250.Timeout = (int)30;
            _flow.DbFetchData250.Comment = @"";
            _flow.DbFetchData250.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData250.Name = @"查询tb_global_table表中LoginTeacherUsername值";
            VTDPropertyInfoBase pi3089 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1569 = new VTDObjectGetter(pi3089);
            VTDPropertyInfoBase pi3090 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1521 = new VTDObjectSetter(pi3090);
            bind_dir1521 = new BindDirection(_flow.DbOpenConnection39,binding_getter1569,binding_setter1521,BindTargetType.ToInProperty);
            _flow.DbFetchData250.InDirections.Add(bind_dir1521);
            XmlDocument DbFetchData250_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData250_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData250_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><LoginTeacherUsername /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData250.ExpectedOutputProperties = DbFetchData250_ExpectedOutputProperties_Document;
            _flow.Loop78.ConditionAsString = @"Run for 1 iteration";
            _flow.Loop78.NumberOfIterations = (int)1;
            _flow.Loop78.Comment = @"";
            _flow.Loop78.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_loop.png";
            _flow.Loop78.Name = @"循环执行tb_getSchoolInfo_verification中的测试用例";
            VTDPropertyInfoBase pi3091 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='Row'][1]");
            VTDBaseGetter binding_getter1570 = new VTDXPathGetter(pi3091,XmlTypeCode.Long);
            binding_getter1570 = new XPathGetterDecorator(binding_getter1570,"{Array0}",1);
            VTDPropertyInfoBase pi3092 = new VTDPropertyInfoBase("NumberOfIterations");
            VTDBaseSetter binding_setter1522 = new VTDObjectSetter(pi3092);
            bind_dir1522 = new BindDirection(_flow.DbFetchData79,binding_getter1570,binding_setter1522,BindTargetType.ToInProperty);
            _flow.Loop78.InDirections.Add(bind_dir1522);
            _flow.Loop78.Activities.Add (this.DataCursorActivity270);
            _flow.Loop78.Activities.Add (_flow.Sequence261);
            _flow.DbFetchData93.QueryString = @"update tb_global_table set EncryptionStr = '{DataSource.tb_global_table.LoginTeacherUsername}@365ime.comDeVawMFWs6' where TestCase = 1";
            _flow.DbFetchData93.Timeout = (int)30;
            _flow.DbFetchData93.Comment = @"";
            _flow.DbFetchData93.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData93.Name = @"对/jxt/school.php接口token实行加密";
            VTDPropertyInfoBase pi3093 = new VTDPropertyInfoBase("LoginTeacherUsername");
            VTDBaseGetter binding_getter1571 = new VTDObjectGetter(pi3093);
            VTDPropertyInfoBase pi3094 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1523 = new VTDObjectSetter(pi3094);
            binding_setter1523 = new StringFormaterDecorator(binding_setter1523,"{DataSource.tb_global_table.LoginTeacherUsername}");
            bind_dir1523 = new BindDirection(this.DataCursorActivity269,binding_getter1571,binding_setter1523,BindTargetType.ToInProperty);
            _flow.DbFetchData93.InDirections.Add(bind_dir1523);
            VTDPropertyInfoBase pi3095 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1572 = new VTDObjectGetter(pi3095);
            VTDPropertyInfoBase pi3096 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1524 = new VTDObjectSetter(pi3096);
            bind_dir1524 = new BindDirection(_flow.DbOpenConnection39,binding_getter1572,binding_setter1524,BindTargetType.ToInProperty);
            _flow.DbFetchData93.InDirections.Add(bind_dir1524);
            XmlDocument DbFetchData93_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData93_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData93_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData93.ExpectedOutputProperties = DbFetchData93_ExpectedOutputProperties_Document;
            _flow.CallQTPTest94.Comment = @"";
            _flow.CallQTPTest94.IconPath = @"AddIns\ServiceTest\UFT\toolbox_qtp.png";
            _flow.CallQTPTest94.Name = @"Encryption";
            _flow.CallQTPTest94.ScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest94.ScriptPath}")) ? @"..\Encryption" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest94.ScriptPath}");
            _flow.CallQTPTest94.ActionName = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest94.ActionName}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest94.ActionName}");
            _flow.CallQTPTest94.Description = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest94.Description}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest94.Description}");
            _flow.CallQTPTest94.IsActionSelected = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest94.IsActionSelected}")) ? @"True" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest94.IsActionSelected}");
            _flow.CallQTPTest94.ResultLocation = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest94.ResultLocation}")) ? @"RunQTPReport\" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest94.ResultLocation}");
            _flow.CallQTPTest94.QCScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest94.QCScriptPath}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest94.QCScriptPath}");
            _flow.DbFetchData95.QueryString = @"select EncryptionResult from tb_global_table where TestCase = 1";
            _flow.DbFetchData95.Timeout = (int)30;
            _flow.DbFetchData95.Comment = @"";
            _flow.DbFetchData95.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData95.Name = @"查询出加密后EncryptionResult字段的值";
            VTDPropertyInfoBase pi3097 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1573 = new VTDObjectGetter(pi3097);
            VTDPropertyInfoBase pi3098 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1525 = new VTDObjectSetter(pi3098);
            bind_dir1525 = new BindDirection(_flow.DbOpenConnection39,binding_getter1573,binding_setter1525,BindTargetType.ToInProperty);
            _flow.DbFetchData95.InDirections.Add(bind_dir1525);
            XmlDocument DbFetchData95_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData95_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData95_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><EncryptionResult /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData95.ExpectedOutputProperties = DbFetchData95_ExpectedOutputProperties_Document;
            _flow.DbFetchData246.QueryString = @"select ResponseXsid from tb_global_table where TestCase = 1";
            _flow.DbFetchData246.Timeout = (int)30;
            _flow.DbFetchData246.Comment = @"";
            _flow.DbFetchData246.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData246.Name = @"查询tb_global_table表中ResponseXsid值";
            VTDPropertyInfoBase pi3099 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1574 = new VTDObjectGetter(pi3099);
            VTDPropertyInfoBase pi3100 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1526 = new VTDObjectSetter(pi3100);
            bind_dir1526 = new BindDirection(_flow.DbOpenConnection39,binding_getter1574,binding_setter1526,BindTargetType.ToInProperty);
            _flow.DbFetchData246.InDirections.Add(bind_dir1526);
            XmlDocument DbFetchData246_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData246_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData246_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><ResponseXsid /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData246.ExpectedOutputProperties = DbFetchData246_ExpectedOutputProperties_Document;
            _flow.HTTPActivity92.TextBody = @"xsid={Step.OutputProperties.DbFetchData246.ResultTable.Row[1].ResponseXsid}&myJid={DataSource.tb_global_table.LoginTeacherUsername}@365ime.com&token={Step.OutputProperties.DbFetchData95.ResultTable.Row[1].EncryptionResult}&identity=1";
            _flow.HTTPActivity92.TextXmlBody = @"";
            _flow.HTTPActivity92.FileBody = @"";
            _flow.HTTPActivity92.PostBody = @"";
            _flow.HTTPActivity92.Url = @"{DataSource.tb_global_table.IQHost}{DataSource.tb_global_table.getSchoolInfo}";
            _flow.HTTPActivity92.HttpMethod = @"POST";
            _flow.HTTPActivity92.HttpVersion = @"1.1";
            _flow.HTTPActivity92.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity92.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity92.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity92.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity92.Comment = @"";
            _flow.HTTPActivity92.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity92.RequestBodyType = @"Text";
            _flow.HTTPActivity92.ResponseType = @"Text";
            _flow.HTTPActivity92.Name = @"调用/jxt/school.php";
            _flow.HTTPActivity92.Proxy.Server = @"";
            _flow.HTTPActivity92.Proxy.Username = @"";
            _flow.HTTPActivity92.Proxy.Password = @"";
            _flow.HTTPActivity92.Authentication.Username = @"";
            _flow.HTTPActivity92.Authentication.Password = @"";
            _flow.HTTPActivity92.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity92.Timeout = (int)100000;
            _flow.HTTPActivity92.ClientCertificate.Password = @"";
            _flow.HTTPActivity92.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity92.UseClientCertificate = false;
            _flow.HTTPActivity92.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity92.AllowRedirections = true;
            _flow.HTTPActivity92.ReuseCookies = false;
            _flow.HTTPActivity92.ExpectServerError = false;
            XmlDocument HTTPActivity92_XMLBody_Document = new XmlDocument();
            HTTPActivity92_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity92_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity92.XMLBody = HTTPActivity92_XMLBody_Document;
            XmlDocument HTTPActivity92_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity92_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity92_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity92.RequestMultipartInfoXml = HTTPActivity92_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity92.Multipart=false;
            VTDPropertyInfoBase pi3101 = new VTDPropertyInfoBase("IQHost");
            VTDBaseGetter binding_getter1575 = new VTDObjectGetter(pi3101);
            VTDPropertyInfoBase pi3102 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1527 = new VTDObjectSetter(pi3102);
            binding_setter1527 = new StringFormaterDecorator(binding_setter1527,"{DataSource.tb_global_table.IQHost}");
            bind_dir1527 = new BindDirection(this.DataCursorActivity269,binding_getter1575,binding_setter1527,BindTargetType.ToInProperty);
            _flow.HTTPActivity92.InDirections.Add(bind_dir1527);
            VTDPropertyInfoBase pi3103 = new VTDPropertyInfoBase("getSchoolInfo");
            VTDBaseGetter binding_getter1576 = new VTDObjectGetter(pi3103);
            VTDPropertyInfoBase pi3104 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1528 = new VTDObjectSetter(pi3104);
            binding_setter1528 = new StringFormaterDecorator(binding_setter1528,"{DataSource.tb_global_table.getSchoolInfo}");
            bind_dir1528 = new BindDirection(this.DataCursorActivity269,binding_getter1576,binding_setter1528,BindTargetType.ToInProperty);
            _flow.HTTPActivity92.InDirections.Add(bind_dir1528);
            VTDPropertyInfoBase pi3105 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1577 = new VTDObjectGetter(pi3105);
            VTDPropertyInfoBase pi3106 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1529 = new VTDObjectSetter(pi3106);
            binding_setter1529 = new StringFormaterDecorator(binding_setter1529,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1529 = new BindDirection(this.DataCursorActivity269,binding_getter1577,binding_setter1529,BindTargetType.ToInProperty);
            _flow.HTTPActivity92.InDirections.Add(bind_dir1529);
            VTDPropertyInfoBase pi3107 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1578 = new VTDObjectGetter(pi3107);
            VTDPropertyInfoBase pi3108 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1530 = new VTDObjectSetter(pi3108);
            binding_setter1530 = new StringFormaterDecorator(binding_setter1530,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1530 = new BindDirection(this.DataCursorActivity269,binding_getter1578,binding_setter1530,BindTargetType.ToInProperty);
            _flow.HTTPActivity92.InDirections.Add(bind_dir1530);
            VTDPropertyInfoBase pi3109 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1579 = new VTDXPathGetter(pi3109,XmlTypeCode.String);
            binding_getter1579 = new XPathGetterDecorator(binding_getter1579,"{Array0}",1);
            VTDPropertyInfoBase pi3110 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1531 = new VTDObjectSetter(pi3110);
            binding_setter1531 = new StringFormaterDecorator(binding_setter1531,"{Step.OutputProperties.DbFetchData246.ResultTable.Row[1].ResponseXsid}");
            bind_dir1531 = new BindDirection(_flow.DbFetchData246,binding_getter1579,binding_setter1531,BindTargetType.ToInProperty);
            _flow.HTTPActivity92.InDirections.Add(bind_dir1531);
            VTDPropertyInfoBase pi3111 = new VTDPropertyInfoBase("LoginTeacherUsername");
            VTDBaseGetter binding_getter1580 = new VTDObjectGetter(pi3111);
            VTDPropertyInfoBase pi3112 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1532 = new VTDObjectSetter(pi3112);
            binding_setter1532 = new StringFormaterDecorator(binding_setter1532,"{DataSource.tb_global_table.LoginTeacherUsername}");
            bind_dir1532 = new BindDirection(this.DataCursorActivity269,binding_getter1580,binding_setter1532,BindTargetType.ToInProperty);
            _flow.HTTPActivity92.InDirections.Add(bind_dir1532);
            VTDPropertyInfoBase pi3113 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='EncryptionResult'][1]");
            VTDBaseGetter binding_getter1581 = new VTDXPathGetter(pi3113,XmlTypeCode.String);
            binding_getter1581 = new XPathGetterDecorator(binding_getter1581,"{Array0}",1);
            VTDPropertyInfoBase pi3114 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1533 = new VTDObjectSetter(pi3114);
            binding_setter1533 = new StringFormaterDecorator(binding_setter1533,"{Step.OutputProperties.DbFetchData95.ResultTable.Row[1].EncryptionResult}");
            bind_dir1533 = new BindDirection(_flow.DbFetchData95,binding_getter1581,binding_setter1533,BindTargetType.ToInProperty);
            _flow.HTTPActivity92.InDirections.Add(bind_dir1533);
            XmlDocument HTTPActivity92_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity92_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity92_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity92.ExpectedResponseXmlBody = HTTPActivity92_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity92_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity92_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity92_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity92.ExpectedResponseJsonBody = HTTPActivity92_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity92_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity92_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity92_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity92.ExpectedOutputProperties = HTTPActivity92_ExpectedOutputProperties_Document;
            _flow.ReplaceStringActivity259.SourceString = @"{Step.OutputProperties.HTTPActivity92.ResponseBody}";
            _flow.ReplaceStringActivity259.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity259.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity259.SearchReplaceString[0].Key = @"'";
            _flow.ReplaceStringActivity259.SearchReplaceString[0].Value = @"\'";
            _flow.ReplaceStringActivity259.CaseSensitive = true;
            _flow.ReplaceStringActivity259.Comment = @"";
            _flow.ReplaceStringActivity259.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity259.Name = @"Response替换'";
            VTDPropertyInfoBase pi3115 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1582 = new VTDObjectGetter(pi3115);
            VTDPropertyInfoBase pi3116 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1534 = new VTDObjectSetter(pi3116);
            binding_setter1534 = new StringFormaterDecorator(binding_setter1534,"{Step.OutputProperties.HTTPActivity92.ResponseBody}");
            bind_dir1534 = new BindDirection(_flow.HTTPActivity92,binding_getter1582,binding_setter1534,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity259.InDirections.Add(bind_dir1534);
            _flow.StringToJsonActivity115.InputString = @"{Step.OutputProperties.HTTPActivity92.ResponseBody}";
            _flow.StringToJsonActivity115.Comment = @"";
            _flow.StringToJsonActivity115.IconPath = @"AddIns\ServiceTest\TransformJson\ictb_string_to_json_16.png";
            _flow.StringToJsonActivity115.Name = @"获取返回值转换为JSON";
            VTDPropertyInfoBase pi3117 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1583 = new VTDObjectGetter(pi3117);
            VTDPropertyInfoBase pi3118 = new VTDPropertyInfoBase("InputString");
            VTDBaseSetter binding_setter1535 = new VTDObjectSetter(pi3118);
            binding_setter1535 = new StringFormaterDecorator(binding_setter1535,"{Step.OutputProperties.HTTPActivity92.ResponseBody}");
            bind_dir1535 = new BindDirection(_flow.HTTPActivity92,binding_getter1583,binding_setter1535,BindTargetType.ToInProperty);
            _flow.StringToJsonActivity115.InDirections.Add(bind_dir1535);
            _flow.DbFetchData247.QueryString = @"update tb_global_table set schoolCode = '{Step.JsonContent.StringToJsonActivity115.data.Object.schoolCode}' where TestCase = 1";
            _flow.DbFetchData247.Timeout = (int)30;
            _flow.DbFetchData247.Comment = @"";
            _flow.DbFetchData247.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData247.Name = @"将schoolCode更新到全局表";
            VTDPropertyInfoBase pi3119 = new VTDPropertyInfoBase("JsonContent","/*[local-name(.)='Object'][1]/*[local-name(.)='data'][1]/*[local-name(.)='Object'][1]/*[local-name(.)='schoolCode'][1]");
            VTDBaseGetter binding_getter1584 = new VTDJsonGetter(pi3119);
            VTDPropertyInfoBase pi3120 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1536 = new VTDObjectSetter(pi3120);
            binding_setter1536 = new StringFormaterDecorator(binding_setter1536,"{Step.JsonContent.StringToJsonActivity115.data.Object.schoolCode}");
            bind_dir1536 = new BindDirection(_flow.StringToJsonActivity115,binding_getter1584,binding_setter1536,BindTargetType.ToInProperty);
            _flow.DbFetchData247.InDirections.Add(bind_dir1536);
            VTDPropertyInfoBase pi3121 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1585 = new VTDObjectGetter(pi3121);
            VTDPropertyInfoBase pi3122 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1537 = new VTDObjectSetter(pi3122);
            bind_dir1537 = new BindDirection(_flow.DbOpenConnection39,binding_getter1585,binding_setter1537,BindTargetType.ToInProperty);
            _flow.DbFetchData247.InDirections.Add(bind_dir1537);
            XmlDocument DbFetchData247_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData247_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData247_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData247.ExpectedOutputProperties = DbFetchData247_ExpectedOutputProperties_Document;
            _flow.DbFetchData96.QueryString = @"update tb_result_table set ResponseJson = '{Step.OutputProperties.ReplaceStringActivity259.Result}' where InterfaceName = '/jxt/school.php'";
            _flow.DbFetchData96.Timeout = (int)30;
            _flow.DbFetchData96.Comment = @"";
            _flow.DbFetchData96.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData96.Name = @"将接口返回的Json更新至tb_result_table";
            VTDPropertyInfoBase pi3123 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1586 = new VTDObjectGetter(pi3123);
            VTDPropertyInfoBase pi3124 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1538 = new VTDObjectSetter(pi3124);
            binding_setter1538 = new StringFormaterDecorator(binding_setter1538,"{Step.OutputProperties.ReplaceStringActivity259.Result}");
            bind_dir1538 = new BindDirection(_flow.ReplaceStringActivity259,binding_getter1586,binding_setter1538,BindTargetType.ToInProperty);
            _flow.DbFetchData96.InDirections.Add(bind_dir1538);
            VTDPropertyInfoBase pi3125 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1587 = new VTDObjectGetter(pi3125);
            VTDPropertyInfoBase pi3126 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1539 = new VTDObjectSetter(pi3126);
            bind_dir1539 = new BindDirection(_flow.DbOpenConnection39,binding_getter1587,binding_setter1539,BindTargetType.ToInProperty);
            _flow.DbFetchData96.InDirections.Add(bind_dir1539);
            XmlDocument DbFetchData96_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData96_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData96_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData96.ExpectedOutputProperties = DbFetchData96_ExpectedOutputProperties_Document;
            this.DataCursorActivity270.Comment = @"";
            this.DataCursorActivity270.IconPath = @"";
            VTDPropertyInfoBase pi3127 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1588 = new VTDObjectGetter(pi3127);
            VTDPropertyInfoBase pi3128 = new VTDPropertyInfoBase("InTable");
            VTDBaseSetter binding_setter1540 = new VTDObjectSetter(pi3128);
            binding_setter1540 = new StringFormaterDecorator(binding_setter1540,"{Step.DataFetchActivity262.OutTable}");
            bind_dir1540 = new BindDirection(_flow.DataFetchActivity262,binding_getter1588,binding_setter1540,BindTargetType.ToInProperty);
            this.DataCursorActivity270.InDirections.Add(bind_dir1540);
            this.DataCursorActivity270_Policy.StartPosition = CursorStartPosition.FirstRecord;
            this.DataCursorActivity270_Policy.StartAtSpecificRow = 1;
            this.DataCursorActivity270_Policy.StartCondition.ColumnName = "";
            this.DataCursorActivity270_Policy.StartCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity270_Policy.StartCondition.Value = "";
            this.DataCursorActivity270_Policy.EndPosition = CursorEndPosition.LastRecord;
            this.DataCursorActivity270_Policy.EndAtSpecificRow = 1;
            this.DataCursorActivity270_Policy.EndCondition.ColumnName = "";
            this.DataCursorActivity270_Policy.EndCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity270_Policy.EndCondition.Value = "";
            this.DataCursorActivity270_Policy.StepType = CursorStepType.Forward;
            this.DataCursorActivity270_Policy.StepSize = 1;
            this.DataCursorActivity270_Policy.ActionAfterLastRecord = CursorActionAfterLastRecord.Wraparound;
            this.DataCursorActivity270.Policy = this.DataCursorActivity270_Policy;
            this.DataCursorActivity270.ReportStepData = false;
            _flow.Loop78.BeforeExecuteStepEvent += this.DataCursorActivity270.ResetCursor;
            _flow.Sequence261.Comment = @"";
            _flow.Sequence261.IconPath = @"";
            _flow.Sequence261.Name = @"序列261";
            _flow.Sequence261.Activities.Add (_flow.DbFetchData80);
            _flow.Sequence261.Activities.Add (_flow.ReplaceStringActivity249);
            _flow.Sequence261.Activities.Add (_flow.ReplaceStringActivity251);
            _flow.Sequence261.Activities.Add (_flow.DbFetchData253);
            _flow.Sequence261.Activities.Add (_flow.CallQTPTest254);
            _flow.Sequence261.Activities.Add (_flow.DbFetchData255);
            _flow.Sequence261.Activities.Add (_flow.ReplaceStringActivity252);
            _flow.Sequence261.Activities.Add (_flow.HTTPActivity81);
            _flow.Sequence261.Activities.Add (_flow.StringToJsonActivity82);
            _flow.Sequence261.Activities.Add (_flow.ReplaceStringActivity258);
            _flow.Sequence261.Activities.Add (_flow.DbFetchData83);
            _flow.Sequence261.Activities.Add (_flow.DbFetchData84);
            _flow.Sequence261.Activities.Add (_flow.DbFetchData85);
            _flow.Sequence261.Activities.Add (_flow.DbFetchData86);
            _flow.Sequence261.Activities.Add (_flow.IfElse87);
            _flow.DbFetchData80.QueryString = @"select xsid,jid,identity,myJid,token from tb_getschoolinfo_verification where TestCase = {Step.OutputProperties.Loop78.CurrentIterationNumber}";
            _flow.DbFetchData80.Timeout = (int)30;
            _flow.DbFetchData80.Comment = @"";
            _flow.DbFetchData80.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData80.Name = @"查询tb_getSchoolInfo_verification表中数据";
            VTDPropertyInfoBase pi3129 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1589 = new VTDObjectGetter(pi3129);
            VTDPropertyInfoBase pi3130 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1541 = new VTDObjectSetter(pi3130);
            binding_setter1541 = new StringFormaterDecorator(binding_setter1541,"{Step.OutputProperties.Loop78.CurrentIterationNumber}");
            bind_dir1541 = new BindDirection(_flow.Loop78,binding_getter1589,binding_setter1541,BindTargetType.ToInProperty);
            _flow.DbFetchData80.InDirections.Add(bind_dir1541);
            VTDPropertyInfoBase pi3131 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1590 = new VTDObjectGetter(pi3131);
            VTDPropertyInfoBase pi3132 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1542 = new VTDObjectSetter(pi3132);
            bind_dir1542 = new BindDirection(_flow.DbOpenConnection39,binding_getter1590,binding_setter1542,BindTargetType.ToInProperty);
            _flow.DbFetchData80.InDirections.Add(bind_dir1542);
            XmlDocument DbFetchData80_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData80_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData80_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><xsid /><jid /><identity /><myJid /><token /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData80.ExpectedOutputProperties = DbFetchData80_ExpectedOutputProperties_Document;
            _flow.ReplaceStringActivity249.SourceString = @"{Step.OutputProperties.DbFetchData80.ResultTable.Row[1].xsid}";
            _flow.ReplaceStringActivity249.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity249.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity249.SearchReplaceString[0].Key = @"x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00";
            _flow.ReplaceStringActivity249.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData248.ResultTable.Row[1].ResponseXsid}";
            _flow.ReplaceStringActivity249.CaseSensitive = true;
            _flow.ReplaceStringActivity249.Comment = @"";
            _flow.ReplaceStringActivity249.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity249.Name = @"将xsid更新至最新值";
            VTDPropertyInfoBase pi3133 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='xsid'][1]");
            VTDBaseGetter binding_getter1591 = new VTDXPathGetter(pi3133,XmlTypeCode.String);
            binding_getter1591 = new XPathGetterDecorator(binding_getter1591,"{Array0}",1);
            VTDPropertyInfoBase pi3134 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1543 = new VTDObjectSetter(pi3134);
            binding_setter1543 = new StringFormaterDecorator(binding_setter1543,"{Step.OutputProperties.DbFetchData80.ResultTable.Row[1].xsid}");
            bind_dir1543 = new BindDirection(_flow.DbFetchData80,binding_getter1591,binding_setter1543,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity249.InDirections.Add(bind_dir1543);
            VTDPropertyInfoBase pi3135 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ResponseXsid'][1]");
            VTDBaseGetter binding_getter1592 = new VTDXPathGetter(pi3135,XmlTypeCode.String);
            binding_getter1592 = new XPathGetterDecorator(binding_getter1592,"{Array0}",1);
            VTDPropertyInfoBase pi3136 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1544 = new VTDObjectSetter(pi3136);
            binding_setter1544 = new StringFormaterDecorator(binding_setter1544,"{Step.OutputProperties.DbFetchData248.ResultTable.Row[1].ResponseXsid}");
            bind_dir1544 = new BindDirection(_flow.DbFetchData248,binding_getter1592,binding_setter1544,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity249.InDirections.Add(bind_dir1544);
            _flow.ReplaceStringActivity251.SourceString = @"{Step.OutputProperties.DbFetchData80.ResultTable.Row[1].myJid}";
            _flow.ReplaceStringActivity251.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity251.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity251.SearchReplaceString[0].Key = @"77401169";
            _flow.ReplaceStringActivity251.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData250.ResultTable.Row[1].LoginTeacherUsername}";
            _flow.ReplaceStringActivity251.CaseSensitive = true;
            _flow.ReplaceStringActivity251.Comment = @"";
            _flow.ReplaceStringActivity251.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity251.Name = @"将Myjid更新至最新";
            VTDPropertyInfoBase pi3137 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='myJid'][1]");
            VTDBaseGetter binding_getter1593 = new VTDXPathGetter(pi3137,XmlTypeCode.String);
            binding_getter1593 = new XPathGetterDecorator(binding_getter1593,"{Array0}",1);
            VTDPropertyInfoBase pi3138 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1545 = new VTDObjectSetter(pi3138);
            binding_setter1545 = new StringFormaterDecorator(binding_setter1545,"{Step.OutputProperties.DbFetchData80.ResultTable.Row[1].myJid}");
            bind_dir1545 = new BindDirection(_flow.DbFetchData80,binding_getter1593,binding_setter1545,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity251.InDirections.Add(bind_dir1545);
            VTDPropertyInfoBase pi3139 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='LoginTeacherUsername'][1]");
            VTDBaseGetter binding_getter1594 = new VTDXPathGetter(pi3139,XmlTypeCode.String);
            binding_getter1594 = new XPathGetterDecorator(binding_getter1594,"{Array0}",1);
            VTDPropertyInfoBase pi3140 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1546 = new VTDObjectSetter(pi3140);
            binding_setter1546 = new StringFormaterDecorator(binding_setter1546,"{Step.OutputProperties.DbFetchData250.ResultTable.Row[1].LoginTeacherUsername}");
            bind_dir1546 = new BindDirection(_flow.DbFetchData250,binding_getter1594,binding_setter1546,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity251.InDirections.Add(bind_dir1546);
            _flow.DbFetchData253.QueryString = @"update tb_global_table set EncryptionStr = '{Step.OutputProperties.ReplaceStringActivity251.Result}DeVawMFWs6' where TestCase = 1";
            _flow.DbFetchData253.Timeout = (int)30;
            _flow.DbFetchData253.Comment = @"";
            _flow.DbFetchData253.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData253.Name = @"将加密信息更新至EncryptionStr";
            VTDPropertyInfoBase pi3141 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1595 = new VTDObjectGetter(pi3141);
            VTDPropertyInfoBase pi3142 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1547 = new VTDObjectSetter(pi3142);
            binding_setter1547 = new StringFormaterDecorator(binding_setter1547,"{Step.OutputProperties.ReplaceStringActivity251.Result}");
            bind_dir1547 = new BindDirection(_flow.ReplaceStringActivity251,binding_getter1595,binding_setter1547,BindTargetType.ToInProperty);
            _flow.DbFetchData253.InDirections.Add(bind_dir1547);
            VTDPropertyInfoBase pi3143 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1596 = new VTDObjectGetter(pi3143);
            VTDPropertyInfoBase pi3144 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1548 = new VTDObjectSetter(pi3144);
            bind_dir1548 = new BindDirection(_flow.DbOpenConnection39,binding_getter1596,binding_setter1548,BindTargetType.ToInProperty);
            _flow.DbFetchData253.InDirections.Add(bind_dir1548);
            XmlDocument DbFetchData253_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData253_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData253_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData253.ExpectedOutputProperties = DbFetchData253_ExpectedOutputProperties_Document;
            _flow.CallQTPTest254.Comment = @"";
            _flow.CallQTPTest254.IconPath = @"AddIns\ServiceTest\UFT\toolbox_qtp.png";
            _flow.CallQTPTest254.Name = @"Encryption.SHA1";
            _flow.CallQTPTest254.ScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest254.ScriptPath}")) ? @"..\Encryption" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest254.ScriptPath}");
            _flow.CallQTPTest254.ActionName = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest254.ActionName}")) ? @"SHA1" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest254.ActionName}");
            _flow.CallQTPTest254.Description = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest254.Description}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest254.Description}");
            _flow.CallQTPTest254.IsActionSelected = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest254.IsActionSelected}")) ? @"True" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest254.IsActionSelected}");
            _flow.CallQTPTest254.ResultLocation = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest254.ResultLocation}")) ? @"RunQTPReport\" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest254.ResultLocation}");
            _flow.CallQTPTest254.QCScriptPath = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest254.QCScriptPath}")) ? @"" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.CallQTPTest254.QCScriptPath}");
            _flow.DbFetchData255.QueryString = @"select EncryptionResult from tb_global_table where TestCase = 1";
            _flow.DbFetchData255.Timeout = (int)30;
            _flow.DbFetchData255.Comment = @"";
            _flow.DbFetchData255.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData255.Name = @"查询出加密后的信息";
            VTDPropertyInfoBase pi3145 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1597 = new VTDObjectGetter(pi3145);
            VTDPropertyInfoBase pi3146 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1549 = new VTDObjectSetter(pi3146);
            bind_dir1549 = new BindDirection(_flow.DbOpenConnection39,binding_getter1597,binding_setter1549,BindTargetType.ToInProperty);
            _flow.DbFetchData255.InDirections.Add(bind_dir1549);
            XmlDocument DbFetchData255_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData255_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData255_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><EncryptionResult /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData255.ExpectedOutputProperties = DbFetchData255_ExpectedOutputProperties_Document;
            _flow.ReplaceStringActivity252.SourceString = @"{Step.OutputProperties.DbFetchData80.ResultTable.Row[1].token}";
            _flow.ReplaceStringActivity252.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity252.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity252.SearchReplaceString[0].Key = @"c8255e8536d1e44751f74febe483384537fc6206";
            _flow.ReplaceStringActivity252.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData255.ResultTable.Row[1].EncryptionResult}";
            _flow.ReplaceStringActivity252.CaseSensitive = true;
            _flow.ReplaceStringActivity252.Comment = @"";
            _flow.ReplaceStringActivity252.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity252.Name = @"将token更新至最新";
            VTDPropertyInfoBase pi3147 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='token'][1]");
            VTDBaseGetter binding_getter1598 = new VTDXPathGetter(pi3147,XmlTypeCode.String);
            binding_getter1598 = new XPathGetterDecorator(binding_getter1598,"{Array0}",1);
            VTDPropertyInfoBase pi3148 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1550 = new VTDObjectSetter(pi3148);
            binding_setter1550 = new StringFormaterDecorator(binding_setter1550,"{Step.OutputProperties.DbFetchData80.ResultTable.Row[1].token}");
            bind_dir1550 = new BindDirection(_flow.DbFetchData80,binding_getter1598,binding_setter1550,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity252.InDirections.Add(bind_dir1550);
            VTDPropertyInfoBase pi3149 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='EncryptionResult'][1]");
            VTDBaseGetter binding_getter1599 = new VTDXPathGetter(pi3149,XmlTypeCode.String);
            binding_getter1599 = new XPathGetterDecorator(binding_getter1599,"{Array0}",1);
            VTDPropertyInfoBase pi3150 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1551 = new VTDObjectSetter(pi3150);
            binding_setter1551 = new StringFormaterDecorator(binding_setter1551,"{Step.OutputProperties.DbFetchData255.ResultTable.Row[1].EncryptionResult}");
            bind_dir1551 = new BindDirection(_flow.DbFetchData255,binding_getter1599,binding_setter1551,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity252.InDirections.Add(bind_dir1551);
            _flow.HTTPActivity81.TextBody = @"xsid={Step.OutputProperties.ReplaceStringActivity249.Result}&myJid={Step.OutputProperties.ReplaceStringActivity251.Result}&token={Step.OutputProperties.ReplaceStringActivity252.Result}&identity={Step.OutputProperties.DbFetchData80.ResultTable.Row[1].identity}&jid={Step.OutputProperties.DbFetchData80.ResultTable.Row[1].jid}";
            _flow.HTTPActivity81.TextXmlBody = @"";
            _flow.HTTPActivity81.FileBody = @"";
            _flow.HTTPActivity81.PostBody = @"";
            _flow.HTTPActivity81.Url = @"{DataSource.tb_global_table.IQHost}{DataSource.tb_global_table.getSchoolInfo}";
            _flow.HTTPActivity81.HttpMethod = @"POST";
            _flow.HTTPActivity81.HttpVersion = @"1.1";
            _flow.HTTPActivity81.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity81.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity81.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity81.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity81.Comment = @"";
            _flow.HTTPActivity81.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity81.RequestBodyType = @"Text";
            _flow.HTTPActivity81.ResponseType = @"Text";
            _flow.HTTPActivity81.Name = @"调用/jxt/school.php";
            _flow.HTTPActivity81.Proxy.Server = @"";
            _flow.HTTPActivity81.Proxy.Username = @"";
            _flow.HTTPActivity81.Proxy.Password = @"";
            _flow.HTTPActivity81.Authentication.Username = @"";
            _flow.HTTPActivity81.Authentication.Password = @"";
            _flow.HTTPActivity81.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity81.Timeout = (int)100000;
            _flow.HTTPActivity81.ClientCertificate.Password = @"";
            _flow.HTTPActivity81.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity81.UseClientCertificate = false;
            _flow.HTTPActivity81.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity81.AllowRedirections = true;
            _flow.HTTPActivity81.ReuseCookies = false;
            _flow.HTTPActivity81.ExpectServerError = false;
            XmlDocument HTTPActivity81_XMLBody_Document = new XmlDocument();
            HTTPActivity81_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity81_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity81.XMLBody = HTTPActivity81_XMLBody_Document;
            XmlDocument HTTPActivity81_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity81_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity81_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity81.RequestMultipartInfoXml = HTTPActivity81_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity81.Multipart=false;
            VTDPropertyInfoBase pi3151 = new VTDPropertyInfoBase("IQHost");
            VTDBaseGetter binding_getter1600 = new VTDObjectGetter(pi3151);
            VTDPropertyInfoBase pi3152 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1552 = new VTDObjectSetter(pi3152);
            binding_setter1552 = new StringFormaterDecorator(binding_setter1552,"{DataSource.tb_global_table.IQHost}");
            bind_dir1552 = new BindDirection(this.DataCursorActivity270,binding_getter1600,binding_setter1552,BindTargetType.ToInProperty);
            _flow.HTTPActivity81.InDirections.Add(bind_dir1552);
            VTDPropertyInfoBase pi3153 = new VTDPropertyInfoBase("getSchoolInfo");
            VTDBaseGetter binding_getter1601 = new VTDObjectGetter(pi3153);
            VTDPropertyInfoBase pi3154 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1553 = new VTDObjectSetter(pi3154);
            binding_setter1553 = new StringFormaterDecorator(binding_setter1553,"{DataSource.tb_global_table.getSchoolInfo}");
            bind_dir1553 = new BindDirection(this.DataCursorActivity270,binding_getter1601,binding_setter1553,BindTargetType.ToInProperty);
            _flow.HTTPActivity81.InDirections.Add(bind_dir1553);
            VTDPropertyInfoBase pi3155 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1602 = new VTDObjectGetter(pi3155);
            VTDPropertyInfoBase pi3156 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1554 = new VTDObjectSetter(pi3156);
            binding_setter1554 = new StringFormaterDecorator(binding_setter1554,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1554 = new BindDirection(this.DataCursorActivity270,binding_getter1602,binding_setter1554,BindTargetType.ToInProperty);
            _flow.HTTPActivity81.InDirections.Add(bind_dir1554);
            VTDPropertyInfoBase pi3157 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1603 = new VTDObjectGetter(pi3157);
            VTDPropertyInfoBase pi3158 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1555 = new VTDObjectSetter(pi3158);
            binding_setter1555 = new StringFormaterDecorator(binding_setter1555,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1555 = new BindDirection(this.DataCursorActivity270,binding_getter1603,binding_setter1555,BindTargetType.ToInProperty);
            _flow.HTTPActivity81.InDirections.Add(bind_dir1555);
            VTDPropertyInfoBase pi3159 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1604 = new VTDObjectGetter(pi3159);
            VTDPropertyInfoBase pi3160 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1556 = new VTDObjectSetter(pi3160);
            binding_setter1556 = new StringFormaterDecorator(binding_setter1556,"{Step.OutputProperties.ReplaceStringActivity249.Result}");
            bind_dir1556 = new BindDirection(_flow.ReplaceStringActivity249,binding_getter1604,binding_setter1556,BindTargetType.ToInProperty);
            _flow.HTTPActivity81.InDirections.Add(bind_dir1556);
            VTDPropertyInfoBase pi3161 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1605 = new VTDObjectGetter(pi3161);
            VTDPropertyInfoBase pi3162 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1557 = new VTDObjectSetter(pi3162);
            binding_setter1557 = new StringFormaterDecorator(binding_setter1557,"{Step.OutputProperties.ReplaceStringActivity251.Result}");
            bind_dir1557 = new BindDirection(_flow.ReplaceStringActivity251,binding_getter1605,binding_setter1557,BindTargetType.ToInProperty);
            _flow.HTTPActivity81.InDirections.Add(bind_dir1557);
            VTDPropertyInfoBase pi3163 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1606 = new VTDObjectGetter(pi3163);
            VTDPropertyInfoBase pi3164 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1558 = new VTDObjectSetter(pi3164);
            binding_setter1558 = new StringFormaterDecorator(binding_setter1558,"{Step.OutputProperties.ReplaceStringActivity252.Result}");
            bind_dir1558 = new BindDirection(_flow.ReplaceStringActivity252,binding_getter1606,binding_setter1558,BindTargetType.ToInProperty);
            _flow.HTTPActivity81.InDirections.Add(bind_dir1558);
            VTDPropertyInfoBase pi3165 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='identity'][1]");
            VTDBaseGetter binding_getter1607 = new VTDXPathGetter(pi3165,XmlTypeCode.String);
            binding_getter1607 = new XPathGetterDecorator(binding_getter1607,"{Array0}",1);
            VTDPropertyInfoBase pi3166 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1559 = new VTDObjectSetter(pi3166);
            binding_setter1559 = new StringFormaterDecorator(binding_setter1559,"{Step.OutputProperties.DbFetchData80.ResultTable.Row[1].identity}");
            bind_dir1559 = new BindDirection(_flow.DbFetchData80,binding_getter1607,binding_setter1559,BindTargetType.ToInProperty);
            _flow.HTTPActivity81.InDirections.Add(bind_dir1559);
            VTDPropertyInfoBase pi3167 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='jid'][1]");
            VTDBaseGetter binding_getter1608 = new VTDXPathGetter(pi3167,XmlTypeCode.String);
            binding_getter1608 = new XPathGetterDecorator(binding_getter1608,"{Array0}",1);
            VTDPropertyInfoBase pi3168 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1560 = new VTDObjectSetter(pi3168);
            binding_setter1560 = new StringFormaterDecorator(binding_setter1560,"{Step.OutputProperties.DbFetchData80.ResultTable.Row[1].jid}");
            bind_dir1560 = new BindDirection(_flow.DbFetchData80,binding_getter1608,binding_setter1560,BindTargetType.ToInProperty);
            _flow.HTTPActivity81.InDirections.Add(bind_dir1560);
            XmlDocument HTTPActivity81_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity81_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity81_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity81.ExpectedResponseXmlBody = HTTPActivity81_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity81_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity81_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity81_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity81.ExpectedResponseJsonBody = HTTPActivity81_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity81_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity81_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity81_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity81.ExpectedOutputProperties = HTTPActivity81_ExpectedOutputProperties_Document;
            _flow.StringToJsonActivity82.InputString = @"{Step.OutputProperties.HTTPActivity81.ResponseBody}";
            _flow.StringToJsonActivity82.Comment = @"";
            _flow.StringToJsonActivity82.IconPath = @"AddIns\ServiceTest\TransformJson\ictb_string_to_json_16.png";
            _flow.StringToJsonActivity82.Name = @"将获取的Response转换为JSON";
            VTDPropertyInfoBase pi3169 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1609 = new VTDObjectGetter(pi3169);
            VTDPropertyInfoBase pi3170 = new VTDPropertyInfoBase("InputString");
            VTDBaseSetter binding_setter1561 = new VTDObjectSetter(pi3170);
            binding_setter1561 = new StringFormaterDecorator(binding_setter1561,"{Step.OutputProperties.HTTPActivity81.ResponseBody}");
            bind_dir1561 = new BindDirection(_flow.HTTPActivity81,binding_getter1609,binding_setter1561,BindTargetType.ToInProperty);
            _flow.StringToJsonActivity82.InDirections.Add(bind_dir1561);
            _flow.ReplaceStringActivity258.SourceString = @"{Step.OutputProperties.HTTPActivity81.ResponseBody}";
            _flow.ReplaceStringActivity258.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity258.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity258.SearchReplaceString[0].Key = @"'";
            _flow.ReplaceStringActivity258.SearchReplaceString[0].Value = @"\'";
            _flow.ReplaceStringActivity258.CaseSensitive = true;
            _flow.ReplaceStringActivity258.Comment = @"";
            _flow.ReplaceStringActivity258.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity258.Name = @"Response替换'";
            VTDPropertyInfoBase pi3171 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1610 = new VTDObjectGetter(pi3171);
            VTDPropertyInfoBase pi3172 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1562 = new VTDObjectSetter(pi3172);
            binding_setter1562 = new StringFormaterDecorator(binding_setter1562,"{Step.OutputProperties.HTTPActivity81.ResponseBody}");
            bind_dir1562 = new BindDirection(_flow.HTTPActivity81,binding_getter1610,binding_setter1562,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity258.InDirections.Add(bind_dir1562);
            _flow.DbFetchData83.QueryString = @"update tb_getschoolinfo_verification set InterfaceResponse = '{Step.OutputProperties.ReplaceStringActivity258.Result}' where TestCase = {Step.OutputProperties.Loop78.CurrentIterationNumber}";
            _flow.DbFetchData83.Timeout = (int)30;
            _flow.DbFetchData83.Comment = @"";
            _flow.DbFetchData83.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData83.Name = @"将Response插入到InterfaceResponse字段中";
            VTDPropertyInfoBase pi3173 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1611 = new VTDObjectGetter(pi3173);
            VTDPropertyInfoBase pi3174 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1563 = new VTDObjectSetter(pi3174);
            binding_setter1563 = new StringFormaterDecorator(binding_setter1563,"{Step.OutputProperties.ReplaceStringActivity258.Result}");
            bind_dir1563 = new BindDirection(_flow.ReplaceStringActivity258,binding_getter1611,binding_setter1563,BindTargetType.ToInProperty);
            _flow.DbFetchData83.InDirections.Add(bind_dir1563);
            VTDPropertyInfoBase pi3175 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1612 = new VTDObjectGetter(pi3175);
            VTDPropertyInfoBase pi3176 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1564 = new VTDObjectSetter(pi3176);
            binding_setter1564 = new StringFormaterDecorator(binding_setter1564,"{Step.OutputProperties.Loop78.CurrentIterationNumber}");
            bind_dir1564 = new BindDirection(_flow.Loop78,binding_getter1612,binding_setter1564,BindTargetType.ToInProperty);
            _flow.DbFetchData83.InDirections.Add(bind_dir1564);
            VTDPropertyInfoBase pi3177 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1613 = new VTDObjectGetter(pi3177);
            VTDPropertyInfoBase pi3178 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1565 = new VTDObjectSetter(pi3178);
            bind_dir1565 = new BindDirection(_flow.DbOpenConnection39,binding_getter1613,binding_setter1565,BindTargetType.ToInProperty);
            _flow.DbFetchData83.InDirections.Add(bind_dir1565);
            XmlDocument DbFetchData83_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData83_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData83_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData83.ExpectedOutputProperties = DbFetchData83_ExpectedOutputProperties_Document;
            _flow.DbFetchData84.QueryString = @"update tb_getschoolinfo_verification set OutputValue = 'errorCode={Step.JsonContent.StringToJsonActivity82.errorCode}' where TestCase = {Step.OutputProperties.Loop78.CurrentIterationNumber}";
            _flow.DbFetchData84.Timeout = (int)30;
            _flow.DbFetchData84.Comment = @"";
            _flow.DbFetchData84.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData84.Name = @"将errorcode更新到sql中";
            VTDPropertyInfoBase pi3179 = new VTDPropertyInfoBase("JsonContent","/*[local-name(.)='Object'][1]/*[local-name(.)='errorCode'][1]");
            VTDBaseGetter binding_getter1614 = new VTDJsonGetter(pi3179);
            VTDPropertyInfoBase pi3180 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1566 = new VTDObjectSetter(pi3180);
            binding_setter1566 = new StringFormaterDecorator(binding_setter1566,"{Step.JsonContent.StringToJsonActivity82.errorCode}");
            bind_dir1566 = new BindDirection(_flow.StringToJsonActivity82,binding_getter1614,binding_setter1566,BindTargetType.ToInProperty);
            _flow.DbFetchData84.InDirections.Add(bind_dir1566);
            VTDPropertyInfoBase pi3181 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1615 = new VTDObjectGetter(pi3181);
            VTDPropertyInfoBase pi3182 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1567 = new VTDObjectSetter(pi3182);
            binding_setter1567 = new StringFormaterDecorator(binding_setter1567,"{Step.OutputProperties.Loop78.CurrentIterationNumber}");
            bind_dir1567 = new BindDirection(_flow.Loop78,binding_getter1615,binding_setter1567,BindTargetType.ToInProperty);
            _flow.DbFetchData84.InDirections.Add(bind_dir1567);
            VTDPropertyInfoBase pi3183 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1616 = new VTDObjectGetter(pi3183);
            VTDPropertyInfoBase pi3184 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1568 = new VTDObjectSetter(pi3184);
            bind_dir1568 = new BindDirection(_flow.DbOpenConnection39,binding_getter1616,binding_setter1568,BindTargetType.ToInProperty);
            _flow.DbFetchData84.InDirections.Add(bind_dir1568);
            XmlDocument DbFetchData84_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData84_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData84_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData84.ExpectedOutputProperties = DbFetchData84_ExpectedOutputProperties_Document;
            _flow.DbFetchData85.QueryString = @"select OutputValue from tb_getschoolinfo_verification where TestCase = {Step.OutputProperties.Loop78.CurrentIterationNumber}";
            _flow.DbFetchData85.Timeout = (int)30;
            _flow.DbFetchData85.Comment = @"";
            _flow.DbFetchData85.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData85.Name = @"获取当前Case的实际值";
            VTDPropertyInfoBase pi3185 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1617 = new VTDObjectGetter(pi3185);
            VTDPropertyInfoBase pi3186 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1569 = new VTDObjectSetter(pi3186);
            binding_setter1569 = new StringFormaterDecorator(binding_setter1569,"{Step.OutputProperties.Loop78.CurrentIterationNumber}");
            bind_dir1569 = new BindDirection(_flow.Loop78,binding_getter1617,binding_setter1569,BindTargetType.ToInProperty);
            _flow.DbFetchData85.InDirections.Add(bind_dir1569);
            VTDPropertyInfoBase pi3187 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1618 = new VTDObjectGetter(pi3187);
            VTDPropertyInfoBase pi3188 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1570 = new VTDObjectSetter(pi3188);
            bind_dir1570 = new BindDirection(_flow.DbOpenConnection39,binding_getter1618,binding_setter1570,BindTargetType.ToInProperty);
            _flow.DbFetchData85.InDirections.Add(bind_dir1570);
            XmlDocument DbFetchData85_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData85_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData85_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><OutputValue /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData85.ExpectedOutputProperties = DbFetchData85_ExpectedOutputProperties_Document;
            _flow.DbFetchData86.QueryString = @"select ExpectationValue from tb_getschoolinfo_verification where TestCase = {Step.OutputProperties.Loop78.CurrentIterationNumber}";
            _flow.DbFetchData86.Timeout = (int)30;
            _flow.DbFetchData86.Comment = @"";
            _flow.DbFetchData86.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData86.Name = @"获取当前Case的期待值";
            VTDPropertyInfoBase pi3189 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1619 = new VTDObjectGetter(pi3189);
            VTDPropertyInfoBase pi3190 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1571 = new VTDObjectSetter(pi3190);
            binding_setter1571 = new StringFormaterDecorator(binding_setter1571,"{Step.OutputProperties.Loop78.CurrentIterationNumber}");
            bind_dir1571 = new BindDirection(_flow.Loop78,binding_getter1619,binding_setter1571,BindTargetType.ToInProperty);
            _flow.DbFetchData86.InDirections.Add(bind_dir1571);
            VTDPropertyInfoBase pi3191 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1620 = new VTDObjectGetter(pi3191);
            VTDPropertyInfoBase pi3192 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1572 = new VTDObjectSetter(pi3192);
            bind_dir1572 = new BindDirection(_flow.DbOpenConnection39,binding_getter1620,binding_setter1572,BindTargetType.ToInProperty);
            _flow.DbFetchData86.InDirections.Add(bind_dir1572);
            XmlDocument DbFetchData86_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData86_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData86_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><ExpectationValue /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData86.ExpectedOutputProperties = DbFetchData86_ExpectedOutputProperties_Document;
            _flow.IfElse87.ConditionAsString = @"{Step.OutputProperties.DbFetchData85.ResultTable.Row[1].OutputValue} Equal {Step.OutputProperties.DbFetchData86.ResultTable.Row[1].ExpectationValue}";
            _flow.IfElse87.Comment = @"";
            _flow.IfElse87.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_if_else.png";
            _flow.IfElse87.Name = @"填写Result";
            _flow.IfElse87.Activities.Add (_flow.IfElseBranch88);
            _flow.IfElse87.Activities.Add (_flow.IfElseBranch89);
            _flow.IfElseBranch88.Condition += delegate(object sender,EventArgs e)
            {
            	try
            	{
            VTDPropertyInfoBase pi3193 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='OutputValue'][1]");
            VTDBaseGetter binding_getter1621 = new VTDXPathGetter(pi3193,XmlTypeCode.String);
            binding_getter1621 = new XPathGetterDecorator(binding_getter1621,"{Array0}",1);
            		System.String expr00 = (System.String)HP.ST.Fwk.RunTimeFWK.Utilities.Utils.ConvertValue(_flow.DbFetchData85.GetParam(binding_getter1621),typeof(System.String));
            		var result0 = expr00;
            VTDPropertyInfoBase pi3194 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ExpectationValue'][1]");
            VTDBaseGetter binding_getter1622 = new VTDXPathGetter(pi3194,XmlTypeCode.String);
            binding_getter1622 = new XPathGetterDecorator(binding_getter1622,"{Array0}",1);
            		System.String expr10 = (System.String)HP.ST.Fwk.RunTimeFWK.Utilities.Utils.ConvertValue(_flow.DbFetchData86.GetParam(binding_getter1622),typeof(System.String));
            		var result1 = expr10;
            		return (result0 == result1);
            	}
            	catch(Exception exp)
            	{
            		if (exp is System.InvalidCastException)
            		{
            			throw;
            		}
            		else
            		{
            			return false;
            		}
            	};
            };
            _flow.IfElseBranch88.Comment = @"";
            _flow.IfElseBranch88.IconPath = @"";
            _flow.IfElseBranch88.Name = @"是";
            _flow.IfElseBranch88.Activities.Add (_flow.DbFetchData90);
            _flow.IfElseBranch89.Condition += delegate(object sender,EventArgs e)
            {
            return true;
            };
            _flow.IfElseBranch89.Comment = @"";
            _flow.IfElseBranch89.IconPath = @"";
            _flow.IfElseBranch89.Name = @"否";
            _flow.IfElseBranch89.Activities.Add (_flow.DbFetchData91);
            _flow.DbFetchData90.QueryString = @"update tb_getschoolinfo_verification set Result = 'True' where TestCase = {Step.OutputProperties.Loop78.CurrentIterationNumber}";
            _flow.DbFetchData90.Timeout = (int)30;
            _flow.DbFetchData90.Comment = @"";
            _flow.DbFetchData90.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData90.Name = @"在Result字段插入True";
            VTDPropertyInfoBase pi3195 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1623 = new VTDObjectGetter(pi3195);
            VTDPropertyInfoBase pi3196 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1573 = new VTDObjectSetter(pi3196);
            binding_setter1573 = new StringFormaterDecorator(binding_setter1573,"{Step.OutputProperties.Loop78.CurrentIterationNumber}");
            bind_dir1573 = new BindDirection(_flow.Loop78,binding_getter1623,binding_setter1573,BindTargetType.ToInProperty);
            _flow.DbFetchData90.InDirections.Add(bind_dir1573);
            VTDPropertyInfoBase pi3197 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1624 = new VTDObjectGetter(pi3197);
            VTDPropertyInfoBase pi3198 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1574 = new VTDObjectSetter(pi3198);
            bind_dir1574 = new BindDirection(_flow.DbOpenConnection39,binding_getter1624,binding_setter1574,BindTargetType.ToInProperty);
            _flow.DbFetchData90.InDirections.Add(bind_dir1574);
            XmlDocument DbFetchData90_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData90_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData90_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData90.ExpectedOutputProperties = DbFetchData90_ExpectedOutputProperties_Document;
            _flow.DbFetchData91.QueryString = @"update tb_getschoolinfo_verification set Result = 'False' where TestCase = {Step.OutputProperties.Loop78.CurrentIterationNumber}";
            _flow.DbFetchData91.Timeout = (int)30;
            _flow.DbFetchData91.Comment = @"";
            _flow.DbFetchData91.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData91.Name = @"在Result字段插入False";
            VTDPropertyInfoBase pi3199 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1625 = new VTDObjectGetter(pi3199);
            VTDPropertyInfoBase pi3200 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1575 = new VTDObjectSetter(pi3200);
            binding_setter1575 = new StringFormaterDecorator(binding_setter1575,"{Step.OutputProperties.Loop78.CurrentIterationNumber}");
            bind_dir1575 = new BindDirection(_flow.Loop78,binding_getter1625,binding_setter1575,BindTargetType.ToInProperty);
            _flow.DbFetchData91.InDirections.Add(bind_dir1575);
            VTDPropertyInfoBase pi3201 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1626 = new VTDObjectGetter(pi3201);
            VTDPropertyInfoBase pi3202 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1576 = new VTDObjectSetter(pi3202);
            bind_dir1576 = new BindDirection(_flow.DbOpenConnection39,binding_getter1626,binding_setter1576,BindTargetType.ToInProperty);
            _flow.DbFetchData91.InDirections.Add(bind_dir1576);
            XmlDocument DbFetchData91_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData91_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData91_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData91.ExpectedOutputProperties = DbFetchData91_ExpectedOutputProperties_Document;
            
        }
        
        internal void InitializeEncryptionManagerValues()
        {
        
        }
        	
    	bool useReport = true;
    
    	protected override STExecutionResult ExecuteStep()
        {
            return base.ExecuteStep();
        }
    
        public void Start()
        {
    	    try
    		{
    		  Workflow_Executing();
    		  this.ExecuteStep();
    		}
    		finally
    		{
    		  WorkFlowScript_Completed();
    		}
        }
    
    	private void InitReport()
    	{
    		if (useReport)
    		{	
    			// Intialize Reporter
    			string reportDBDir = Path.Combine(this._context.ReportDirectory, @"Report");
    			CleanupReport(reportDBDir);        	
    			string reportDBPath = Path.Combine(reportDBDir, "VTDReport.mdb");        	
    			if (reporter == null)
    			{
    				reporter = new Reporter(reportDBPath);
    			}
    			_context.Reporter = reporter;
    		}
    	}
    
        public static void CopyDirectory(string Src, string Dst)
        {
            String[] Files;
    
            if (Dst[Dst.Length - 1] != Path.DirectorySeparatorChar)
                Dst += Path.DirectorySeparatorChar;
            if (!Directory.Exists(Dst)) Directory.CreateDirectory(Dst);
            Files = Directory.GetFileSystemEntries(Src);
            foreach (string Element in Files)
            {
                // Sub directories
                if (Directory.Exists(Element))
                    CopyDirectory(Element, Dst + Path.GetFileName(Element));
                // Files in directory
                else
                    File.Copy(Element, Dst + Path.GetFileName(Element), true);
            }
        }
        
        private void CleanupReport(string reportDBDir)
        {   
    		if (useReport)
    		{             
    			string reportTemplateDir = Path.Combine(ServiceTestRunner.GetInstallPath(),@"bin\ReportResources");                
    			try
    			{
            		CopyDirectory(reportTemplateDir, reportDBDir);
    			}
    			catch //(Exception ex)
    			{
    				//ToDo: LoggingService.Warn("Report Cleanup Error", ex);
    			}
    		}
        }
    
        void Workflow_Executing()
        {   
        	InitReportNode();
                       
        }
    
    	private void InitReportNode()
    	{
    		if (useReport)
    		{	
        		// Init report creator
    			this.reportCreator = new HP.ST.Fwk.ReportCreator.QTPEngine.QTPEngineReportCreator();
    			this.reportLevelInTree = reportCreator.Init(_context.EnvironmentProfile.GetVariableValue("TestName"), _context);
                
    			STActivityBase activity = this;
    			string workflowID = activity.GetHashCode().ToString();
    			ReportNodeCreationData newNodeData =
    			new ReportNodeCreationData(workflowID, workflowID, DateTime.Now);
    			reporter.CreateReportNode(newNodeData);
            
    			ReportInfoData newReportData = new ReportInfoData(workflowID, ReportKeywords.TypeKeywordTag, this.GetType().ToString());
    			reporter.SendReportData(newReportData);
    			newReportData = new ReportInfoData(workflowID, ReportKeywords.NameKeywordTag, this.Name);
    			//TrackData(ReportInfoData.InfoDataTag, newReportData);
    			reporter.SendReportData(newReportData);            
            }
    	}
        
        void WorkFlowScript_Completed()
        {   
    		
    
    		CreateReportFiles();
    					
        	// Write all snapshots to disk
    		this._context.SnapshotManager.WriteSnapshotsToDisk();
    			
    		
    
    		OnExecutionCompleted();
    		
        }
    
    	private void CreateReportFiles()
    	{
    		if (useReport)
    		{	
    			//Dispose reporter inorder to close connection to report DB
           		this._context.Reporter.Dispose();
            	
           		// Run report creator
    			reportCreator.RunOnDBAndCreateFiles();
    		}
    	}
    
        
        void Workflow_Faulting()
        {
    		
    
    		CreateReportFiles();
            // Write all snapshots to disk
    		this._context.SnapshotManager.WriteSnapshotsToDisk();
           
    		OnExecutionCompleted();
        }
    
    	protected override QcSystemVariables GetRuntimeQcVariables(ISTRunTimeContext context)
    	{
    		return new HP.ST.Ext.BasicActivities.RuntimeQcVariables(this._context);
    	}
            
    	protected override TestSystemVariables GetTestSystemVariables(ISTRunTimeContext context)
    	{
    		return new HP.ST.Ext.BasicActivities.RuntimeTestVariables(this._context);
    	}
    
    	private void UpdateTestSettings(ISTRunTimeContext ctx)
        {
    		ctx.PropertyBag["StopTestOnStepFailure"] = true;
    	}
    
    protected override void OnThreadStart()
    {
    
    }
    }
    
    public partial class VuserClass
    {
    	public static string[] CommandLineArguments;
    	public static string[] DotNetResolverPaths;
    	
    	
    	public static void InitJavaEnv(string classPath, string additionalVMargs)
    	{
    		JVMLoader.LoadJVM(classPath, additionalVMargs);
    	}
    	
    	
    		
        public VuserClass()
        {
    				
    		AssemblyResolver.AddSTPathsToResolutionPaths();
    		AssemblyResolver.AttachToAppdomain();
        }
    
        private void AddAssemblyResolver()
        {
    		AssemblyResolver.AddTestPathToResolutionPaths(GetTestPath());
    		AssemblyResolver.AddPathsForAssemblyResolution(DotNetResolverPaths);
        }
    	
        public int STAction()
        {	
            AddAssemblyResolver();
            STRunTimeContext ctx = new STRunTimeContext(Directory.GetParent(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)).FullName, string.Empty);
            WorkFlowScript script = new WorkFlowScript(ctx);
            script.InitializeComponent();
            script.Start();       
            
            return 0;
        }
        
        public void NotifyLicenseException(string msg)
        {
        		
    		try
    		{
    		    STRunTimeContext ctx = new STRunTimeContext(Directory.GetParent(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)).FullName, string.Empty);
                WorkFlowScript script = new WorkFlowScript(ctx);
                script.InitializeComponent();
                script.Context.ReplayClient.OnLicenseFailure(msg);
                
            }
            catch (Exception)
            {
    			// ToDo: log the error message
            }        
        }
    
    	 protected string GetTestPath()
            {
                if (CommandLineArguments != null)
                {
                    for (int i = 0; i < CommandLineArguments.Length; i++)
                    {
                        if (CommandLineArguments[i].Equals("-test", StringComparison.OrdinalIgnoreCase))
                        {
                            return CommandLineArguments[i + 1];
                        }
                    }
                }
                return String.Empty;
            }
        
    }
    
    }
    