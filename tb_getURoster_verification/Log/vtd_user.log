2015-08-07 15:53:03,482 [8] INFO  - 步骤“开始”: 步骤“开始”已启动
2015-08-07 15:53:03,499 [8] INFO  - 步骤“开始”已成功结束
2015-08-07 15:53:03,501 [8] INFO  - 步骤“测试流”: 步骤“测试流”已启动
2015-08-07 15:53:03,554 [8] INFO  - 步骤“迭代 1”: 步骤“迭代 1”已启动
2015-08-07 15:53:03,556 [8] INFO  - 步骤“连接到mysql数据库”: 步骤“连接到mysql数据库”已启动
2015-08-07 15:53:03,559 [8] INFO  - 步骤“连接到mysql数据库”: Connection string: DSN=localhost;Uid=root;Pwd={PWD};
2015-08-07 15:53:03,574 [8] INFO  - 步骤“连接到mysql数据库”已成功结束
2015-08-07 15:53:03,575 [8] INFO  - 步骤“获取到tb_getURoster_verification表有效行数”: 步骤“获取到tb_getURoster_verification表有效行数”已启动
2015-08-07 15:53:03,593 [8] ERROR - Checkpoint 2: "16" = "37" 失败
2015-08-07 15:53:03,598 [8] INFO  - 步骤“获取到tb_getURoster_verification表有效行数”已成功结束
2015-08-07 15:53:03,599 [8] INFO  - 步骤“查询全局表中xsid”: 步骤“查询全局表中xsid”已启动
2015-08-07 15:53:03,602 [8] INFO  - 步骤“查询全局表中xsid”已成功结束
2015-08-07 15:53:03,603 [8] INFO  - 步骤“循环执行tb_getURoster_verification中的测试用例”: 步骤“循环执行tb_getURoster_verification中的测试用例”已启动
2015-08-07 15:53:03,606 [8] INFO  - 步骤“迭代 1”: 步骤“迭代 1”已启动
2015-08-07 15:53:03,607 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 15:53:03,610 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 15:53:03,612 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 15:53:03,613 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 15:53:03,617 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“”
2015-08-07 15:53:03,620 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 15:53:03,621 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 15:53:03,622 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“区分大小写”，值:“True”
2015-08-07 15:53:03,623 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“”
2015-08-07 15:53:03,625 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 15:53:03,626 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 15:53:03,686 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 15:53:03,688 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 15:54:16,516 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 15:54:16,517 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 15:54:16,520 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 15:54:16,521 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 15:54:16,522 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 15:54:16,524 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 15:54:16,525 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'dd64dc267454dd4ca6f0b9fb89d136febcc55de3'”
2015-08-07 15:54:16,525 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“dd64dc267454dd4ca6f0b9fb89d136febcc55de3”
2015-08-07 15:54:16,527 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 15:54:16,527 [8] INFO  - 步骤“调用/iq/getURoster.php”: 步骤“调用/iq/getURoster.php”已启动
2015-08-07 15:54:16,545 [8] INFO  - 步骤“调用/iq/getURoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getURoster.php'
2015-08-07 15:54:17,101 [8] INFO  - 步骤“调用/iq/getURoster.php”: 服务器返回了状态代码: 200
2015-08-07 15:54:17,102 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始请求:
2015-08-07 15:54:17,103 [8] INFO  - 步骤“调用/iq/getURoster.php”: POST http://test-iq.365ime.com:8082/iq/getURoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 76
Expect: 100-continue
Connection: Keep-Alive
xsid=&Jid=77401169@365ime.com&token=dd64dc267454dd4ca6f0b9fb89d136febcc55de3

2015-08-07 15:54:17,105 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始响应:
2015-08-07 15:54:17,107 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Transfer-Encoding: chunked
Content-Type: text/html;charset=UTF-8
Date: Fri, 07 Aug 2015 07:51:37 GMT
Server: Apache-Coyote/1.1
{"message":"","data":{"userArray":[{"username":"文件助手","category":2,"subscription":"none","nickname":"","jid":"xm_file_assistant@365ime.com"},{"username":"张坤老师2","category":0,"subscription":"none","nickname":"123.abcD测试","jid":"77401170@365ime.com"},{"username":"张坤老师3","category":0,"subscription":"none","nickname":"测试修改其昵称","jid":"77401171@365ime.com"}]},"errorCode":"0"}

2015-08-07 15:54:17,114 [8] INFO  - 步骤“调用/iq/getURoster.php”已成功结束
2015-08-07 15:54:17,115 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 15:54:17,137 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 15:54:17,138 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 15:54:17,200 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 15:54:17,201 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 15:54:17,286 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 15:54:17,287 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 15:54:17,290 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 15:54:17,291 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 15:54:17,294 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 15:54:17,295 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 15:54:17,297 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 15:54:17,298 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 15:54:17,299 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 15:54:17,363 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 15:54:17,365 [8] INFO  - 步骤“否”已成功结束
2015-08-07 15:54:17,367 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 15:54:17,369 [8] INFO  - 步骤“迭代 1”已成功结束
2015-08-07 15:54:17,373 [8] INFO  - 步骤“迭代 2”: 步骤“迭代 2”已启动
2015-08-07 15:54:17,374 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 15:54:17,377 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 15:54:17,379 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 15:54:17,381 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 15:54:17,383 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“123”
2015-08-07 15:54:17,384 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 15:54:17,385 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 15:54:17,386 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“123”
2015-08-07 15:54:17,388 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 15:54:17,389 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 15:54:17,465 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 15:54:17,466 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 15:55:28,735 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 15:55:28,738 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 15:55:28,741 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 15:55:28,743 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 15:55:28,745 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 15:55:28,757 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 15:55:28,758 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'dd64dc267454dd4ca6f0b9fb89d136febcc55de3'”
2015-08-07 15:55:28,759 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“dd64dc267454dd4ca6f0b9fb89d136febcc55de3”
2015-08-07 15:55:28,775 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 15:55:28,776 [8] INFO  - 步骤“调用/iq/getURoster.php”: 步骤“调用/iq/getURoster.php”已启动
2015-08-07 15:55:28,778 [8] INFO  - 步骤“调用/iq/getURoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getURoster.php'
2015-08-07 15:55:31,518 [8] INFO  - 步骤“调用/iq/getURoster.php”: 服务器返回了状态代码: 200
2015-08-07 15:55:31,521 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始请求:
2015-08-07 15:55:31,524 [8] INFO  - 步骤“调用/iq/getURoster.php”: POST http://test-iq.365ime.com:8082/iq/getURoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 79
Expect: 100-continue
xsid=123&Jid=77401169@365ime.com&token=dd64dc267454dd4ca6f0b9fb89d136febcc55de3

2015-08-07 15:55:31,526 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始响应:
2015-08-07 15:55:31,529 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Transfer-Encoding: chunked
Content-Type: text/html;charset=UTF-8
Date: Fri, 07 Aug 2015 07:52:52 GMT
Server: Apache-Coyote/1.1
{"message":"invalid  xsid ! Timeout waiting for value: waited 2,500 ms. Node status: Connection Status { 0378927382e911e4.m.cnqdalicm9pub001.ocs.aliyuncs.com/10.157.212.8:11211 active: false, authed: false, last read: 91,676,164 ms ago }","data":{},"errorCode":"1"}

2015-08-07 15:55:31,536 [8] INFO  - 步骤“调用/iq/getURoster.php”已成功结束
2015-08-07 15:55:31,538 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 15:55:31,543 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 15:55:31,546 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 15:55:31,623 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 15:55:31,626 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 15:55:31,676 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 15:55:31,679 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 15:55:31,686 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 15:55:31,688 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 15:55:31,696 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 15:55:31,698 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 15:55:31,708 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 15:55:31,710 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 15:55:31,715 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 15:55:31,756 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 15:55:31,760 [8] INFO  - 步骤“否”已成功结束
2015-08-07 15:55:31,764 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 15:55:31,769 [8] INFO  - 步骤“迭代 2”已成功结束
2015-08-07 15:55:31,774 [8] INFO  - 步骤“迭代 3”: 步骤“迭代 3”已启动
2015-08-07 15:55:31,777 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 15:55:31,784 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 15:55:31,789 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 15:55:31,789 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 15:55:31,791 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“abc”
2015-08-07 15:55:31,792 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 15:55:31,794 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 15:55:31,795 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“abc”
2015-08-07 15:55:31,797 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 15:55:31,799 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 15:55:31,866 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 15:55:31,869 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 15:56:33,291 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 15:56:33,292 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 15:56:33,294 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 15:56:33,295 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 15:56:33,297 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 15:56:33,298 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 15:56:33,299 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'dd64dc267454dd4ca6f0b9fb89d136febcc55de3'”
2015-08-07 15:56:33,300 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“dd64dc267454dd4ca6f0b9fb89d136febcc55de3”
2015-08-07 15:56:33,302 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 15:56:33,303 [8] INFO  - 步骤“调用/iq/getURoster.php”: 步骤“调用/iq/getURoster.php”已启动
2015-08-07 15:56:33,307 [8] INFO  - 步骤“调用/iq/getURoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getURoster.php'
2015-08-07 15:56:36,016 [8] INFO  - 步骤“调用/iq/getURoster.php”: 服务器返回了状态代码: 200
2015-08-07 15:56:36,018 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始请求:
2015-08-07 15:56:36,019 [8] INFO  - 步骤“调用/iq/getURoster.php”: POST http://test-iq.365ime.com:8082/iq/getURoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 79
Expect: 100-continue
xsid=abc&Jid=77401169@365ime.com&token=dd64dc267454dd4ca6f0b9fb89d136febcc55de3

2015-08-07 15:56:36,020 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始响应:
2015-08-07 15:56:36,021 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Transfer-Encoding: chunked
Content-Type: text/html;charset=UTF-8
Date: Fri, 07 Aug 2015 07:53:56 GMT
Server: Apache-Coyote/1.1
{"message":"invalid  xsid ! Timeout waiting for value: waited 2,500 ms. Node status: Connection Status { 0378927382e911e4.m.cnqdalicm9pub001.ocs.aliyuncs.com/10.157.212.8:11211 active: false, authed: false, last read: 91,740,659 ms ago }","data":{},"errorCode":"1"}

2015-08-07 15:56:36,024 [8] INFO  - 步骤“调用/iq/getURoster.php”已成功结束
2015-08-07 15:56:36,025 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 15:56:36,027 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 15:56:36,028 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 15:56:36,099 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 15:56:36,101 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 15:56:36,158 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 15:56:36,161 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 15:56:36,168 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 15:56:36,169 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 15:56:36,174 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 15:56:36,175 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 15:56:36,178 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 15:56:36,180 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 15:56:36,182 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 15:56:36,215 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 15:56:36,218 [8] INFO  - 步骤“否”已成功结束
2015-08-07 15:56:36,221 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 15:56:36,224 [8] INFO  - 步骤“迭代 3”已成功结束
2015-08-07 15:56:36,227 [8] INFO  - 步骤“迭代 4”: 步骤“迭代 4”已启动
2015-08-07 15:56:36,230 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 15:56:36,234 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 15:56:36,237 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 15:56:36,239 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 15:56:36,244 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“!@#$%^&”
2015-08-07 15:56:36,246 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 15:56:36,247 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 15:56:36,249 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“!@#$%^&”
2015-08-07 15:56:36,251 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 15:56:36,253 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 15:56:36,292 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 15:56:36,295 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 15:56:58,317 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 15:56:58,318 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 15:56:58,321 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 15:56:58,322 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 15:56:58,323 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 15:56:58,324 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 15:56:58,325 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'dd64dc267454dd4ca6f0b9fb89d136febcc55de3'”
2015-08-07 15:56:58,325 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“dd64dc267454dd4ca6f0b9fb89d136febcc55de3”
2015-08-07 15:56:58,326 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 15:56:58,327 [8] INFO  - 步骤“调用/iq/getURoster.php”: 步骤“调用/iq/getURoster.php”已启动
2015-08-07 15:56:58,329 [8] INFO  - 步骤“调用/iq/getURoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getURoster.php'
2015-08-07 15:56:59,531 [8] INFO  - 步骤“调用/iq/getURoster.php”: 服务器返回了状态代码: 200
2015-08-07 15:56:59,533 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始请求:
2015-08-07 15:56:59,534 [8] INFO  - 步骤“调用/iq/getURoster.php”: POST http://test-iq.365ime.com:8082/iq/getURoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 83
Expect: 100-continue
xsid=!@#$%^&&Jid=77401169@365ime.com&token=dd64dc267454dd4ca6f0b9fb89d136febcc55de3

2015-08-07 15:56:59,535 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始响应:
2015-08-07 15:56:59,536 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Transfer-Encoding: chunked
Content-Type: text/html;charset=UTF-8
Date: Fri, 07 Aug 2015 07:54:19 GMT
Server: Apache-Coyote/1.1
{"message":"","data":{"userArray":[{"username":"文件助手","category":2,"subscription":"none","nickname":"","jid":"xm_file_assistant@365ime.com"},{"username":"张坤老师2","category":0,"subscription":"none","nickname":"123.abcD测试","jid":"77401170@365ime.com"},{"username":"张坤老师3","category":0,"subscription":"none","nickname":"测试修改其昵称","jid":"77401171@365ime.com"}]},"errorCode":"0"}

2015-08-07 15:56:59,542 [8] INFO  - 步骤“调用/iq/getURoster.php”已成功结束
2015-08-07 15:56:59,544 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 15:56:59,553 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 15:56:59,556 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 15:56:59,616 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 15:56:59,618 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 15:56:59,662 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 15:56:59,665 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 15:56:59,670 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 15:56:59,672 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 15:56:59,681 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 15:56:59,683 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 15:56:59,686 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 15:56:59,688 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 15:56:59,690 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 15:56:59,784 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 15:56:59,790 [8] INFO  - 步骤“否”已成功结束
2015-08-07 15:56:59,794 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 15:56:59,801 [8] INFO  - 步骤“迭代 4”已成功结束
2015-08-07 15:56:59,807 [8] INFO  - 步骤“迭代 5”: 步骤“迭代 5”已启动
2015-08-07 15:56:59,809 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 15:56:59,813 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 15:56:59,817 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 15:56:59,819 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 15:56:59,821 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“123.abc”
2015-08-07 15:56:59,822 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 15:56:59,824 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 15:56:59,825 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“123.abc”
2015-08-07 15:56:59,827 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 15:56:59,828 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 15:56:59,870 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 15:56:59,872 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 15:57:34,258 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 15:57:34,260 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 15:57:34,264 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 15:57:34,264 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 15:57:34,268 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 15:57:34,268 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 15:57:34,269 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'dd64dc267454dd4ca6f0b9fb89d136febcc55de3'”
2015-08-07 15:57:34,270 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“dd64dc267454dd4ca6f0b9fb89d136febcc55de3”
2015-08-07 15:57:34,272 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 15:57:34,272 [8] INFO  - 步骤“调用/iq/getURoster.php”: 步骤“调用/iq/getURoster.php”已启动
2015-08-07 15:57:34,274 [8] INFO  - 步骤“调用/iq/getURoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getURoster.php'
2015-08-07 15:57:37,030 [8] INFO  - 步骤“调用/iq/getURoster.php”: 服务器返回了状态代码: 200
2015-08-07 15:57:37,033 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始请求:
2015-08-07 15:57:37,035 [8] INFO  - 步骤“调用/iq/getURoster.php”: POST http://test-iq.365ime.com:8082/iq/getURoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 83
Expect: 100-continue
xsid=123.abc&Jid=77401169@365ime.com&token=dd64dc267454dd4ca6f0b9fb89d136febcc55de3

2015-08-07 15:57:37,038 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始响应:
2015-08-07 15:57:37,041 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Transfer-Encoding: chunked
Content-Type: text/html;charset=UTF-8
Date: Fri, 07 Aug 2015 07:54:57 GMT
Server: Apache-Coyote/1.1
{"message":"invalid  xsid ! Timeout waiting for value: waited 2,500 ms. Node status: Connection Status { 0378927382e911e4.m.cnqdalicm9pub001.ocs.aliyuncs.com/10.157.212.8:11211 active: false, authed: false, last read: 91,801,673 ms ago }","data":{},"errorCode":"1"}

2015-08-07 15:57:37,047 [8] INFO  - 步骤“调用/iq/getURoster.php”已成功结束
2015-08-07 15:57:37,050 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 15:57:37,055 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 15:57:37,059 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 15:57:37,121 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 15:57:37,123 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 15:57:37,167 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 15:57:37,169 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 15:57:37,175 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 15:57:37,177 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 15:57:37,184 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 15:57:37,187 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 15:57:37,190 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 15:57:37,192 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 15:57:37,196 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 15:57:37,242 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 15:57:37,245 [8] INFO  - 步骤“否”已成功结束
2015-08-07 15:57:37,248 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 15:57:37,252 [8] INFO  - 步骤“迭代 5”已成功结束
2015-08-07 15:57:37,258 [8] INFO  - 步骤“迭代 6”: 步骤“迭代 6”已启动
2015-08-07 15:57:37,261 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 15:57:37,268 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 15:57:37,274 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 15:57:37,276 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 15:57:37,278 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 15:57:37,280 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 15:57:37,281 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 15:57:37,282 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 15:57:37,284 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 15:57:37,285 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 15:57:37,355 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 15:57:37,357 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 15:57:59,139 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 15:57:59,140 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 15:57:59,144 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 15:57:59,145 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 15:57:59,147 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 15:57:59,149 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 15:57:59,150 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'4ab76ba374ed0208e450acff23f63c4eda279b32'”
2015-08-07 15:57:59,151 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“4ab76ba374ed0208e450acff23f63c4eda279b32”
2015-08-07 15:57:59,153 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 15:57:59,154 [8] INFO  - 步骤“调用/iq/getURoster.php”: 步骤“调用/iq/getURoster.php”已启动
2015-08-07 15:57:59,156 [8] INFO  - 步骤“调用/iq/getURoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getURoster.php'
2015-08-07 15:57:59,254 [8] INFO  - 步骤“调用/iq/getURoster.php”: 服务器返回了状态代码: 200
2015-08-07 15:57:59,255 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始请求:
2015-08-07 15:57:59,256 [8] INFO  - 步骤“调用/iq/getURoster.php”: POST http://test-iq.365ime.com:8082/iq/getURoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 140
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=77401170@365ime.com&token=4ab76ba374ed0208e450acff23f63c4eda279b32

2015-08-07 15:57:59,257 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始响应:
2015-08-07 15:57:59,257 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Transfer-Encoding: chunked
Content-Type: text/html;charset=UTF-8
Date: Fri, 07 Aug 2015 07:55:19 GMT
Server: Apache-Coyote/1.1
{"message":"invalid  xsid !","data":{},"errorCode":"1"}

2015-08-07 15:57:59,260 [8] INFO  - 步骤“调用/iq/getURoster.php”已成功结束
2015-08-07 15:57:59,260 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 15:57:59,264 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 15:57:59,265 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 15:57:59,427 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 15:57:59,430 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 15:57:59,525 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 15:57:59,527 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 15:57:59,534 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 15:57:59,540 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 15:57:59,546 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 15:57:59,549 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 15:57:59,552 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 15:57:59,554 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 15:57:59,556 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 15:57:59,635 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 15:57:59,636 [8] INFO  - 步骤“否”已成功结束
2015-08-07 15:57:59,638 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 15:57:59,639 [8] INFO  - 步骤“迭代 6”已成功结束
2015-08-07 15:57:59,641 [8] INFO  - 步骤“迭代 7”: 步骤“迭代 7”已启动
2015-08-07 15:57:59,642 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 15:57:59,645 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 15:57:59,647 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 15:57:59,648 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 15:57:59,649 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 15:57:59,650 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 15:57:59,652 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 15:57:59,653 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 15:57:59,655 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 15:57:59,656 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 15:57:59,757 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 15:57:59,759 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 15:58:57,916 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 15:58:57,917 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 15:58:57,921 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 15:58:57,922 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 15:58:57,923 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 15:58:57,924 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 15:58:57,926 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'5586697b0087fd6c2f46a507022c3ee1e9599d81'”
2015-08-07 15:58:57,927 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“5586697b0087fd6c2f46a507022c3ee1e9599d81”
2015-08-07 15:58:57,929 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 15:58:57,930 [8] INFO  - 步骤“调用/iq/getURoster.php”: 步骤“调用/iq/getURoster.php”已启动
2015-08-07 15:58:57,932 [8] INFO  - 步骤“调用/iq/getURoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getURoster.php'
2015-08-07 15:58:58,026 [8] INFO  - 步骤“调用/iq/getURoster.php”: 服务器返回了状态代码: 200
2015-08-07 15:58:58,027 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始请求:
2015-08-07 15:58:58,029 [8] INFO  - 步骤“调用/iq/getURoster.php”: POST http://test-iq.365ime.com:8082/iq/getURoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 129
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=77401169&token=5586697b0087fd6c2f46a507022c3ee1e9599d81

2015-08-07 15:58:58,030 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始响应:
2015-08-07 15:58:58,031 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Transfer-Encoding: chunked
Content-Type: text/html;charset=UTF-8
Date: Fri, 07 Aug 2015 07:56:17 GMT
Server: Apache-Coyote/1.1
{"message":"invalid  xsid !","data":{},"errorCode":"1"}

2015-08-07 15:58:58,034 [8] INFO  - 步骤“调用/iq/getURoster.php”已成功结束
2015-08-07 15:58:58,036 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 15:58:58,038 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 15:58:58,039 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 15:58:58,097 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 15:58:58,100 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 15:58:58,140 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 15:58:58,143 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 15:58:58,151 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 15:58:58,153 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 15:58:58,160 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 15:58:58,163 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 15:58:58,167 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 15:58:58,170 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 15:58:58,173 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 15:58:58,209 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 15:58:58,213 [8] INFO  - 步骤“否”已成功结束
2015-08-07 15:58:58,217 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 15:58:58,220 [8] INFO  - 步骤“迭代 7”已成功结束
2015-08-07 15:58:58,223 [8] INFO  - 步骤“迭代 8”: 步骤“迭代 8”已启动
2015-08-07 15:58:58,226 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 15:58:58,229 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 15:58:58,232 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 15:58:58,235 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 15:58:58,237 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 15:58:58,239 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 15:58:58,242 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 15:58:58,244 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 15:58:58,247 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 15:58:58,249 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 15:58:58,295 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 15:58:58,296 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 15:59:20,054 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 15:59:20,055 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 15:59:20,059 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 15:59:20,061 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 15:59:20,064 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 15:59:20,065 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 15:59:20,066 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'643841e0d271d3b6a26c86c904b02e9a7b3ed55c'”
2015-08-07 15:59:20,067 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“643841e0d271d3b6a26c86c904b02e9a7b3ed55c”
2015-08-07 15:59:20,070 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 15:59:20,072 [8] INFO  - 步骤“调用/iq/getURoster.php”: 步骤“调用/iq/getURoster.php”已启动
2015-08-07 15:59:20,074 [8] INFO  - 步骤“调用/iq/getURoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getURoster.php'
2015-08-07 15:59:20,163 [8] INFO  - 步骤“调用/iq/getURoster.php”: 服务器返回了状态代码: 200
2015-08-07 15:59:20,164 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始请求:
2015-08-07 15:59:20,165 [8] INFO  - 步骤“调用/iq/getURoster.php”: POST http://test-iq.365ime.com:8082/iq/getURoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 132
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=@365ime.com&token=643841e0d271d3b6a26c86c904b02e9a7b3ed55c

2015-08-07 15:59:20,168 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始响应:
2015-08-07 15:59:20,169 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Transfer-Encoding: chunked
Content-Type: text/html;charset=UTF-8
Date: Fri, 07 Aug 2015 07:56:40 GMT
Server: Apache-Coyote/1.1
{"message":"invalid  xsid !","data":{},"errorCode":"1"}

2015-08-07 15:59:20,172 [8] INFO  - 步骤“调用/iq/getURoster.php”已成功结束
2015-08-07 15:59:20,172 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 15:59:20,177 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 15:59:20,179 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 15:59:20,258 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 15:59:20,260 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 15:59:20,367 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 15:59:20,369 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 15:59:20,372 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 15:59:20,373 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 15:59:20,378 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 15:59:20,380 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 15:59:20,382 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 15:59:20,383 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 15:59:20,384 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 15:59:20,437 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 15:59:20,439 [8] INFO  - 步骤“否”已成功结束
2015-08-07 15:59:20,441 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 15:59:20,443 [8] INFO  - 步骤“迭代 8”已成功结束
2015-08-07 15:59:20,445 [8] INFO  - 步骤“迭代 9”: 步骤“迭代 9”已启动
2015-08-07 15:59:20,447 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 15:59:20,450 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 15:59:20,452 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 15:59:20,453 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 15:59:20,456 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 15:59:20,467 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 15:59:20,468 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 15:59:20,469 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 15:59:20,471 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 15:59:20,472 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 15:59:20,578 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 15:59:20,579 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 15:59:52,871 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 15:59:52,872 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 15:59:52,876 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 15:59:52,877 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 15:59:52,879 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 15:59:52,880 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 15:59:52,881 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'028d933228526dc9f83eaf48f277931eefff6078'”
2015-08-07 15:59:52,882 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“028d933228526dc9f83eaf48f277931eefff6078”
2015-08-07 15:59:52,888 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 15:59:52,889 [8] INFO  - 步骤“调用/iq/getURoster.php”: 步骤“调用/iq/getURoster.php”已启动
2015-08-07 15:59:52,891 [8] INFO  - 步骤“调用/iq/getURoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getURoster.php'
2015-08-07 15:59:53,089 [8] INFO  - 步骤“调用/iq/getURoster.php”: 服务器返回了状态代码: 200
2015-08-07 15:59:53,090 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始请求:
2015-08-07 15:59:53,091 [8] INFO  - 步骤“调用/iq/getURoster.php”: POST http://test-iq.365ime.com:8082/iq/getURoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 128
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=!@#$%^&&token=028d933228526dc9f83eaf48f277931eefff6078

2015-08-07 15:59:53,091 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始响应:
2015-08-07 15:59:53,092 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Transfer-Encoding: chunked
Content-Type: text/html;charset=UTF-8
Date: Fri, 07 Aug 2015 07:57:13 GMT
Server: Apache-Coyote/1.1
{"message":"Parameter is error !","data":{},"errorCode":"2"}

2015-08-07 15:59:53,094 [8] INFO  - 步骤“调用/iq/getURoster.php”已成功结束
2015-08-07 15:59:53,095 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 15:59:53,097 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 15:59:53,098 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 15:59:53,148 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 15:59:53,149 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 15:59:53,245 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 15:59:53,246 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 15:59:53,248 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 15:59:53,249 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 15:59:53,251 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 15:59:53,252 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 15:59:53,253 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 15:59:53,254 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 15:59:53,255 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 15:59:53,292 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 15:59:53,294 [8] INFO  - 步骤“否”已成功结束
2015-08-07 15:59:53,295 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 15:59:53,297 [8] INFO  - 步骤“迭代 9”已成功结束
2015-08-07 15:59:53,298 [8] INFO  - 步骤“迭代 10”: 步骤“迭代 10”已启动
2015-08-07 15:59:53,299 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 15:59:53,301 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 15:59:53,305 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 15:59:53,305 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 15:59:53,307 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 15:59:53,308 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 15:59:53,309 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 15:59:53,309 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 15:59:53,311 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 15:59:53,312 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 15:59:53,379 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 15:59:53,395 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 16:00:55,800 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 16:00:55,804 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 16:00:55,808 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 16:00:55,809 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 16:00:55,811 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 16:00:55,813 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 16:00:55,814 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'8a423da82cca63394bc1c2d6c0e0b9ebc5dae2c7'”
2015-08-07 16:00:55,815 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“8a423da82cca63394bc1c2d6c0e0b9ebc5dae2c7”
2015-08-07 16:00:55,816 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 16:00:55,817 [8] INFO  - 步骤“调用/iq/getURoster.php”: 步骤“调用/iq/getURoster.php”已启动
2015-08-07 16:00:55,819 [8] INFO  - 步骤“调用/iq/getURoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getURoster.php'
2015-08-07 16:00:55,915 [8] INFO  - 步骤“调用/iq/getURoster.php”: 服务器返回了状态代码: 200
2015-08-07 16:00:55,916 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始请求:
2015-08-07 16:00:55,917 [8] INFO  - 步骤“调用/iq/getURoster.php”: POST http://test-iq.365ime.com:8082/iq/getURoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 121
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=&token=8a423da82cca63394bc1c2d6c0e0b9ebc5dae2c7

2015-08-07 16:00:55,918 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始响应:
2015-08-07 16:00:55,919 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Transfer-Encoding: chunked
Content-Type: text/html;charset=UTF-8
Date: Fri, 07 Aug 2015 07:58:15 GMT
Server: Apache-Coyote/1.1
{"message":"Parameter is error !","data":{},"errorCode":"2"}

2015-08-07 16:00:55,922 [8] INFO  - 步骤“调用/iq/getURoster.php”已成功结束
2015-08-07 16:00:55,923 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 16:00:55,926 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 16:00:55,926 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 16:00:55,983 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 16:00:55,987 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 16:00:56,078 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 16:00:56,082 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 16:00:56,090 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 16:00:56,092 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 16:00:56,099 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 16:00:56,102 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 16:00:56,107 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 16:00:56,109 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 16:00:56,113 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 16:00:56,167 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 16:00:56,169 [8] INFO  - 步骤“否”已成功结束
2015-08-07 16:00:56,170 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 16:00:56,173 [8] INFO  - 步骤“迭代 10”已成功结束
2015-08-07 16:00:56,175 [8] INFO  - 步骤“迭代 11”: 步骤“迭代 11”已启动
2015-08-07 16:00:56,176 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 16:00:56,179 [8] ERROR - Checkpoint 5: "305bbc2b43542b3d0203daffe9073c3cba5b47d9" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 16:00:56,182 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 16:00:56,183 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 16:00:56,185 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 16:00:56,186 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 16:00:56,187 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 16:00:56,188 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 16:00:56,190 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 16:00:56,192 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 16:00:56,236 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 16:00:56,237 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 16:01:18,141 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 16:01:18,142 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 16:01:18,145 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 16:01:18,146 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 16:01:18,147 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“305bbc2b43542b3d0203daffe9073c3cba5b47d9”
2015-08-07 16:01:18,148 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 16:01:18,149 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'acf033da2780ea7299059f1926399cf0c3622ce9'”
2015-08-07 16:01:18,149 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“acf033da2780ea7299059f1926399cf0c3622ce9”
2015-08-07 16:01:18,151 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 16:01:18,152 [8] INFO  - 步骤“调用/iq/getURoster.php”: 步骤“调用/iq/getURoster.php”已启动
2015-08-07 16:01:18,155 [8] INFO  - 步骤“调用/iq/getURoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getURoster.php'
2015-08-07 16:01:18,279 [8] INFO  - 步骤“调用/iq/getURoster.php”: 服务器返回了状态代码: 200
2015-08-07 16:01:18,280 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始请求:
2015-08-07 16:01:18,281 [8] INFO  - 步骤“调用/iq/getURoster.php”: POST http://test-iq.365ime.com:8082/iq/getURoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 160
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=77401169@365ime.com,77401170@365ime.com&token=acf033da2780ea7299059f1926399cf0c3622ce9

2015-08-07 16:01:18,281 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始响应:
2015-08-07 16:01:18,282 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Transfer-Encoding: chunked
Content-Type: text/html;charset=UTF-8
Date: Fri, 07 Aug 2015 07:58:38 GMT
Server: Apache-Coyote/1.1
{"message":"invalid  xsid !","data":{},"errorCode":"1"}

2015-08-07 16:01:18,285 [8] INFO  - 步骤“调用/iq/getURoster.php”已成功结束
2015-08-07 16:01:18,286 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 16:01:18,290 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 16:01:18,291 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 16:01:18,431 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 16:01:18,433 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 16:01:18,530 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 16:01:18,533 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 16:01:18,537 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 16:01:18,539 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 16:01:18,545 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 16:01:18,546 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 16:01:18,548 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 16:01:18,549 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 16:01:18,551 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 16:01:18,616 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 16:01:18,618 [8] INFO  - 步骤“否”已成功结束
2015-08-07 16:01:18,620 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 16:01:18,622 [8] INFO  - 步骤“迭代 11”已成功结束
2015-08-07 16:01:18,625 [8] INFO  - 步骤“迭代 12”: 步骤“迭代 12”已启动
2015-08-07 16:01:18,627 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 16:01:18,630 [8] ERROR - Checkpoint 5: "Arguments[1]/ResultTable[1]/Row[1]/token[1]" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 16:01:18,633 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 16:01:18,634 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 16:01:18,636 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 16:01:18,637 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 16:01:18,638 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 16:01:18,640 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 16:01:18,641 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 16:01:18,642 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 16:01:18,796 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 16:01:18,846 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 16:01:41,833 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 16:01:41,835 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 16:01:41,838 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 16:01:41,839 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 16:01:41,845 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“”
2015-08-07 16:01:41,846 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 16:01:41,847 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'dd64dc267454dd4ca6f0b9fb89d136febcc55de3'”
2015-08-07 16:01:41,848 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“区分大小写”，值:“True”
2015-08-07 16:01:41,852 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“”
2015-08-07 16:01:41,857 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 16:01:41,859 [8] INFO  - 步骤“调用/iq/getURoster.php”: 步骤“调用/iq/getURoster.php”已启动
2015-08-07 16:01:41,861 [8] INFO  - 步骤“调用/iq/getURoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getURoster.php'
2015-08-07 16:01:41,969 [8] INFO  - 步骤“调用/iq/getURoster.php”: 服务器返回了状态代码: 200
2015-08-07 16:01:41,970 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始请求:
2015-08-07 16:01:41,971 [8] INFO  - 步骤“调用/iq/getURoster.php”: POST http://test-iq.365ime.com:8082/iq/getURoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 100
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=77401169@365ime.com&token=

2015-08-07 16:01:41,972 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始响应:
2015-08-07 16:01:41,973 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Transfer-Encoding: chunked
Content-Type: text/html;charset=UTF-8
Date: Fri, 07 Aug 2015 07:59:02 GMT
Server: Apache-Coyote/1.1
{"message":"Parameter is error !","data":{},"errorCode":"2"}

2015-08-07 16:01:41,977 [8] INFO  - 步骤“调用/iq/getURoster.php”已成功结束
2015-08-07 16:01:41,978 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 16:01:41,981 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 16:01:41,982 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 16:01:42,109 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 16:01:42,110 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 16:01:42,179 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 16:01:42,183 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 16:01:42,189 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 16:01:42,193 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 16:01:42,198 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 16:01:42,199 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 16:01:42,201 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 16:01:42,202 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 16:01:42,203 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 16:01:42,294 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 16:01:42,295 [8] INFO  - 步骤“否”已成功结束
2015-08-07 16:01:42,297 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 16:01:42,299 [8] INFO  - 步骤“迭代 12”已成功结束
2015-08-07 16:01:42,301 [8] INFO  - 步骤“迭代 13”: 步骤“迭代 13”已启动
2015-08-07 16:01:42,302 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 16:01:42,305 [8] ERROR - Checkpoint 5: "902ca048a73c5c8f2ad2e2ebe9ffebeb" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 16:01:42,307 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 16:01:42,308 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 16:01:42,310 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 16:01:42,311 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 16:01:42,311 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 16:01:42,314 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 16:01:42,316 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 16:01:42,316 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 16:01:42,385 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 16:01:42,388 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 16:02:56,569 [8] INFO  - 步骤“Encryption.SHA1”已成功结束
2015-08-07 16:02:56,570 [8] INFO  - 步骤“查询出加密后的token信息”: 步骤“查询出加密后的token信息”已启动
2015-08-07 16:02:56,573 [8] INFO  - 步骤“查询出加密后的token信息”已成功结束
2015-08-07 16:02:56,575 [8] INFO  - 步骤“将token更新至最新值”: 步骤“将token更新至最新值”已启动
2015-08-07 16:02:56,577 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“源字符串”，值:“902ca048a73c5c8f2ad2e2ebe9ffebeb”
2015-08-07 16:02:56,578 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“搜索字符串 1”，值:“'305bbc2b43542b3d0203daffe9073c3cba5b47d9'”
2015-08-07 16:02:56,579 [8] INFO  - 步骤“将token更新至最新值”: 输入参数“替换字符串 1”，值:“'dd64dc267454dd4ca6f0b9fb89d136febcc55de3'”
2015-08-07 16:02:56,580 [8] INFO  - 步骤“将token更新至最新值”: 输出参数“结果”，值:“902ca048a73c5c8f2ad2e2ebe9ffebeb”
2015-08-07 16:02:56,581 [8] INFO  - 步骤“将token更新至最新值”已成功结束
2015-08-07 16:02:56,582 [8] INFO  - 步骤“调用/iq/getURoster.php”: 步骤“调用/iq/getURoster.php”已启动
2015-08-07 16:02:56,592 [8] INFO  - 步骤“调用/iq/getURoster.php”: 提取 HTTP URL: 'http://test-iq.365ime.com:8082/iq/getURoster.php'
2015-08-07 16:02:56,682 [8] INFO  - 步骤“调用/iq/getURoster.php”: 服务器返回了状态代码: 200
2015-08-07 16:02:56,683 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始请求:
2015-08-07 16:02:56,684 [8] INFO  - 步骤“调用/iq/getURoster.php”: POST http://test-iq.365ime.com:8082/iq/getURoster.php 1.1
Content-Type: application/x-www-form-urlencoded
Host: test-iq.365ime.com:8082
Content-Length: 132
Expect: 100-continue
xsid=x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib&Jid=77401169@365ime.com&token=902ca048a73c5c8f2ad2e2ebe9ffebeb

2015-08-07 16:02:56,685 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP 原始响应:
2015-08-07 16:02:56,686 [8] INFO  - 步骤“调用/iq/getURoster.php”: HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Transfer-Encoding: chunked
Content-Type: text/html;charset=UTF-8
Date: Fri, 07 Aug 2015 08:00:17 GMT
Server: Apache-Coyote/1.1
{"message":"invalid token !","data":{},"errorCode":"1"}

2015-08-07 16:02:56,688 [8] INFO  - 步骤“调用/iq/getURoster.php”已成功结束
2015-08-07 16:02:56,689 [8] INFO  - 步骤“获取返回值转换为JSON”: 步骤“获取返回值转换为JSON”已启动
2015-08-07 16:02:56,691 [8] INFO  - 步骤“获取返回值转换为JSON”已成功结束
2015-08-07 16:02:56,692 [8] INFO  - 步骤“将获取到的JSON插入到sql中”: 步骤“将获取到的JSON插入到sql中”已启动
2015-08-07 16:02:56,908 [8] INFO  - 步骤“将获取到的JSON插入到sql中”已成功结束
2015-08-07 16:02:56,910 [8] INFO  - 步骤“将errorcode更新到sql中”: 步骤“将errorcode更新到sql中”已启动
2015-08-07 16:02:57,094 [8] INFO  - 步骤“将errorcode更新到sql中”已成功结束
2015-08-07 16:02:57,096 [8] INFO  - 步骤“获取当前Case的实际值”: 步骤“获取当前Case的实际值”已启动
2015-08-07 16:02:57,110 [8] INFO  - 步骤“获取当前Case的实际值”已成功结束
2015-08-07 16:02:57,113 [8] INFO  - 步骤“获取当前Case的期待值”: 步骤“获取当前Case的期待值”已启动
2015-08-07 16:02:57,119 [8] INFO  - 步骤“获取当前Case的期待值”已成功结束
2015-08-07 16:02:57,121 [8] INFO  - 步骤“填写Result”: 步骤“填写Result”已启动
2015-08-07 16:02:57,126 [8] INFO  - 步骤“IfElse64”: 计算方式: 使用条件
2015-08-07 16:02:57,129 [8] INFO  - 步骤“否”: 步骤“否”已启动
2015-08-07 16:02:57,132 [8] INFO  - 步骤“在Result字段插入False”: 步骤“在Result字段插入False”已启动
2015-08-07 16:02:57,262 [8] INFO  - 步骤“在Result字段插入False”已成功结束
2015-08-07 16:02:57,265 [8] INFO  - 步骤“否”已成功结束
2015-08-07 16:02:57,269 [8] INFO  - 步骤“填写Result”已成功结束
2015-08-07 16:02:57,272 [8] INFO  - 步骤“迭代 13”已成功结束
2015-08-07 16:02:57,277 [8] INFO  - 步骤“迭代 14”: 步骤“迭代 14”已启动
2015-08-07 16:02:57,281 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”: 步骤“查询tb_getRoster_verification表中字段信息”已启动
2015-08-07 16:02:57,286 [8] ERROR - Checkpoint 5: "77401169@365ime.com" = "61f048fc016c13ea5cdfa6416c6e6ef9532716b8" 失败
2015-08-07 16:02:57,295 [8] INFO  - 步骤“查询tb_getRoster_verification表中字段信息”已成功结束
2015-08-07 16:02:57,297 [8] INFO  - 步骤“将本地表的xsid更新”: 步骤“将本地表的xsid更新”已启动
2015-08-07 16:02:57,302 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“源字符串”，值:“x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00”
2015-08-07 16:02:57,310 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“搜索字符串 1”，值:“'x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00'”
2015-08-07 16:02:57,311 [8] INFO  - 步骤“将本地表的xsid更新”: 输入参数“替换字符串 1”，值:“'x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib'”
2015-08-07 16:02:57,313 [8] INFO  - 步骤“将本地表的xsid更新”: 输出参数“结果”，值:“x_0e1a5657n865d20b8aifxeafq394a1idub0a0b096du0t6j08ac112hb64t3ib”
2015-08-07 16:02:57,314 [8] INFO  - 步骤“将本地表的xsid更新”已成功结束
2015-08-07 16:02:57,319 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”: 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已启动
2015-08-07 16:02:57,426 [8] INFO  - 步骤“将需要加密的数据赋值到全局表EncryptionStr字段中”已成功结束
2015-08-07 16:02:57,426 [8] INFO  - 步骤“Encryption.SHA1”: 步骤“Encryption.SHA1”已启动
2015-08-07 16:09:39,128 [8] INFO  - Execution Stop requested
