/***************************************************************
    *  DO NOT EDIT THIS FILE!
    *         
    *  This file is automatically generated by HP Service Test.
    *  Manually changing the contents of this file may result in 
    *  loss of information.
    *          
    *  To edit the test, open the file ‘tb_setmessagestatus_verification.st’ 
    *  in HP Service Test.
     ***************************************************************/
    
    namespace Script
    {
    using System;
    using System.Text;
    using System.Threading;
    using System.Xml;
    using System.Xml.Schema;
    using HP.ST.Fwk.ReporterFWK;
    using HP.ST.Shared.Utilities;
    using HP.ST.Ext.BindingImpl.Getters;
    using HP.ST.Ext.BindingImpl.Setters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.PropInfo;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Getters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Setters;
    using HP.ST.Fwk.RunTimeFWK;
    using HP.ST.Fwk.RunTimeFWK.Utilities;
    using HP.ST.Fwk.RunTimeFWK.HelperClasses;
    using HP.ST.Fwk.RunTimeFWK.CompositeActivities;
    using HP.ST.Ext.BindingImpl.Setters.DataSourceSetters;
    using HP.ST.Fwk.JVMLoader;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using HP.ST.Fwk.SOAReplayAPI;
    using HP.ST.Fwk.UFTLicensing;
    
    
    
    public partial class WorkFlowScript : STWorkFlowScriptBase
    {    
    	TestUserCode _userCode = null;
    	TestEntities _flow = null;
    	static Reporter reporter;
    	int reportLevelInTree;
        HP.ST.Fwk.ReportCreator.QTPEngine.QTPEngineReportCreator reportCreator;
    	
    	public BindDirection bind_dir1270 = null;
        public BindDirection bind_dir1271 = null;
        public HP.ST.Ext.BasicActivities.DataCursorActivity DataCursorActivity37 = null;
        public BindDirection bind_dir1272 = null;
        public HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy DataCursorActivity37_Policy = null;
        public BindDirection bind_dir1273 = null;
        public BindDirection bind_dir1274 = null;
        public BindDirection bind_dir1275 = null;
        public BindDirection bind_dir1276 = null;
        public BindDirection bind_dir1277 = null;
        public BindDirection bind_dir1278 = null;
        public BindDirection bind_dir1279 = null;
        public BindDirection bind_dir1280 = null;
        public BindDirection bind_dir1281 = null;
        public BindDirection bind_dir1282 = null;
        public BindDirection bind_dir1283 = null;
        public BindDirection bind_dir1284 = null;
        public BindDirection bind_dir1285 = null;
        public BindDirection bind_dir1286 = null;
        public BindDirection bind_dir1287 = null;
        public BindDirection bind_dir1288 = null;
        public HP.ST.Ext.BasicActivities.DataCursorActivity DataCursorActivity38 = null;
        public BindDirection bind_dir1289 = null;
        public HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy DataCursorActivity38_Policy = null;
        public BindDirection bind_dir1290 = null;
        public BindDirection bind_dir1291 = null;
        public BindDirection bind_dir1292 = null;
        public BindDirection bind_dir1293 = null;
        public BindDirection bind_dir1294 = null;
        public BindDirection bind_dir1295 = null;
        public BindDirection bind_dir1296 = null;
        public BindDirection bind_dir1297 = null;
        public BindDirection bind_dir1298 = null;
        public BindDirection bind_dir1299 = null;
        public BindDirection bind_dir1300 = null;
        public BindDirection bind_dir1301 = null;
        public BindDirection bind_dir1302 = null;
        public BindDirection bind_dir1303 = null;
        public BindDirection bind_dir1304 = null;
        public BindDirection bind_dir1305 = null;
        public BindDirection bind_dir1306 = null;
        public BindDirection bind_dir1307 = null;
        public BindDirection bind_dir1308 = null;
        public BindDirection bind_dir1309 = null;
        public BindDirection bind_dir1310 = null;
        public BindDirection bind_dir1311 = null;
        public BindDirection bind_dir1312 = null;
        public BindDirection bind_dir1313 = null;
        public BindDirection bind_dir1314 = null;
        public BindDirection bind_dir1315 = null;
        public BindDirection bind_dir1316 = null;
        public BindDirection bind_dir1317 = null;
        public BindDirection bind_dir1318 = null;
        public BindDirection bind_dir1319 = null;
        public BindDirection bind_dir1320 = null;
        public BindDirection bind_dir1321 = null;
        public BindDirection bind_dir1322 = null;
        
        public IEnumerable<FeaturesGroup> LicensedFeatures
        {
        
        get
        {
        List<FeaturesGroup> features = new List<FeaturesGroup>();
        return features;
        
        }
        
        }
        
        public WorkFlowScript()
            : base(VuserClass.CommandLineArguments, new STRunTimeContext(), "test")
        {	
        	UpdateContextWithActionFolder(String.Empty);
        	
        }
        
        public WorkFlowScript(ISTRunTimeContext ctx)
            : base(VuserClass.CommandLineArguments, ctx, "test")
            
        {
        	this._context = ctx;
        	UpdateContextWithActionFolder(String.Empty);
        	UpdateTestSettings(ctx);
        }
        
        internal void InitializeComponent()
        {
        	LoadInput();
        	
        	InitReport();
        	
        	InitializeEncryptionManagerValues();
        
        	_userCode = new TestUserCode();
            _flow = _userCode;
            _flow.Context=this._context;
            
            
        
        	_flow.DataFetchActivity33 = new HP.ST.Ext.BasicActivities.DataFetchActivity(_context,"DataFetchActivity33");
            _flow.StartActivity1 = new HP.ST.Ext.BasicActivities.StartActivity(_context,"StartActivity1");
            _flow.Loop2 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Loop<Loop2Input>(_context,"Loop2",LoopType.For);
            _flow.DataExporterActivity35 = new HP.ST.Ext.BasicActivities.DataExporterActivity(_context,"DataExporterActivity35");
            _flow.DataExporterCloseActivity36 = new HP.ST.Ext.BasicActivities.DataExporterCloseActivity(_context,"DataExporterCloseActivity36");
            _flow.EndActivity3 = new HP.ST.Ext.BasicActivities.EndActivity(_context,"EndActivity3");
            _flow.DataDisconnectActivity34 = new HP.ST.Ext.BasicActivities.DataDisconnectActivity(_context,"DataDisconnectActivity34");
            this.DataCursorActivity37 = new HP.ST.Ext.BasicActivities.DataCursorActivity(_context,"DataCursorActivity37");
            this.DataCursorActivity37_Policy = new HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy();
            _flow.Sequence31 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Sequence(_context,"Sequence31");
            _flow.DbOpenConnection5 = new HP.ST.Ext.DatabaseRunTime.DbOpenConnection(_context,"DbOpenConnection5");
            _flow.DbFetchData4 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData4");
            _flow.DbFetchData6 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData6");
            _flow.DbFetchData7 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData7");
            _flow.DbFetchData8 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData8");
            _flow.DbFetchData28 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData28");
            _flow.Loop9 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Loop<Loop9Input>(_context,"Loop9",LoopType.For);
            _flow.HTTPActivity27 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity27");
            _flow.DbFetchData30 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData30");
            this.DataCursorActivity38 = new HP.ST.Ext.BasicActivities.DataCursorActivity(_context,"DataCursorActivity38");
            this.DataCursorActivity38_Policy = new HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy();
            _flow.Sequence32 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Sequence(_context,"Sequence32");
            _flow.DbFetchData10 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData10");
            _flow.ReplaceStringActivity12 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity12");
            _flow.ReplaceStringActivity13 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity13");
            _flow.ReplaceStringActivity14 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity14");
            _flow.ReplaceStringActivity29 = new HP.ST.Ext.BasicActivities.ReplaceStringActivity(_context,"ReplaceStringActivity29");
            _flow.HTTPActivity16 = new HP.ST.Ext.HTTPActivity.HTTPActivity(_context,"HTTPActivity16");
            _flow.StringToJsonActivity17 = new HP.ST.Ext.TransformJsonActivity.StringToJsonActivity(_context,"StringToJsonActivity17");
            _flow.DbFetchData18 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData18");
            _flow.DbFetchData19 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData19");
            _flow.DbFetchData20 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData20");
            _flow.DbFetchData21 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData21");
            _flow.IfElse22 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.IfElse<IfElse22Input>(_context,"IfElse22");
            _flow.IfElseBranch23 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.IfElseBranch(_context,"IfElseBranch23");
            _flow.IfElseBranch24 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.IfElseBranch(_context,"IfElseBranch24");
            _flow.DbFetchData25 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData25");
            _flow.DbFetchData26 = new HP.ST.Ext.DatabaseRunTime.DbFetchData(_context,"DbFetchData26");
            _flow.DataFetchActivity33.Comment = @"";
            _flow.DataFetchActivity33.IconPath = @"";
            _flow.DataFetchActivity33.AssemblyPath = @"AddIns\ServiceTest\BaseDataProviders\HP.ST.Ext.CustomDataProviders.dll";
            _flow.DataFetchActivity33.QueryClassName = @"HP.ST.Ext.CustomDataProviders.DbDataQuery";
            XmlDocument DataFetchActivity33_QueryParameters_Document = new XmlDocument();
            DataFetchActivity33_QueryParameters_Document.PreserveWhitespace = true;
            string xmlDataFetchActivity33Params = @"<Arguments><QueryParametersContainer><QueryParameter><Name>Id</Name><Value>fa762dfb-1bfe-4e78-8d14-d9858c447cbc</Value></QueryParameter><QueryParameter><Name>QueryName</Name><Value>tb_global_table</Value></QueryParameter><QueryParameter><Name>IsEmbedded</Name><Value>True</Value></QueryParameter><QueryParameter><Name>Externalized</Name><Value>False</Value></QueryParameter><QueryParameter><Name>GroupText</Name><Value></Value></QueryParameter><QueryParameter><Name>ConnectionString</Name><Value>DSN=192.168.50.11;Uid=ime;Pwd=www.365ime.com!;</Value></QueryParameter><QueryParameter><Name>SqlStatement</Name><Value>select * from tb_global_table where TestCase = '1'</Value></QueryParameter><QueryParameter><Name>Password</Name><Value>nS9jToOb4zLJent8hCRcVg==</Value></QueryParameter><QueryParameter><Name>DatabaseType</Name><Value>ODBC</Value></QueryParameter></QueryParametersContainer></Arguments>";
            DataFetchActivity33_QueryParameters_Document.LoadXml(xmlDataFetchActivity33Params);
            _flow.DataFetchActivity33.QueryParameters = DataFetchActivity33_QueryParameters_Document;
            _flow.dataSourceNameToDataSource.Add("tb_global_table", _flow.DataFetchActivity33);
            this.Activities.Add (_flow.DataFetchActivity33);
            _flow.StartActivity1.Comment = @"";
            _flow.StartActivity1.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_code_activity.png";
            _flow.StartActivity1.Name = @"开始";
            this.Activities.Add (_flow.StartActivity1);
            _flow.Loop2.ConditionAsString = @"Run for 1 iteration";
            _flow.Loop2.NumberOfIterations = (int)1;
            _flow.Loop2.Comment = @"";
            _flow.Loop2.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_loop.png";
            _flow.Loop2.Name = @"测试流";
            _flow.Loop2.Activities.Add (this.DataCursorActivity37);
            _flow.Loop2.Activities.Add (_flow.Sequence31);
            this.Activities.Add (_flow.Loop2);
            _flow.DataExporterActivity35.Comment = @"";
            _flow.DataExporterActivity35.IconPath = @"";
            VTDPropertyInfoBase pi2579 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1310 = new VTDObjectGetter(pi2579);
            VTDPropertyInfoBase pi2580 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter1270 = new VTDObjectSetter(pi2580);
            binding_setter1270 = new StringFormaterDecorator(binding_setter1270,"{Step.DataFetchActivity33.OutTable}");
            bind_dir1270 = new BindDirection(_flow.DataFetchActivity33,binding_getter1310,binding_setter1270,BindTargetType.ToInProperty);
            _flow.DataExporterActivity35.InDirections.Add(bind_dir1270);
            this.Activities.Add (_flow.DataExporterActivity35);
            _flow.DataExporterCloseActivity36.Comment = @"";
            _flow.DataExporterCloseActivity36.IconPath = @"";
            this.Activities.Add (_flow.DataExporterCloseActivity36);
            _flow.EndActivity3.Comment = @"";
            _flow.EndActivity3.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_code_activity.png";
            _flow.EndActivity3.Name = @"结束";
            this.Activities.Add (_flow.EndActivity3);
            _flow.DataDisconnectActivity34.Comment = @"";
            _flow.DataDisconnectActivity34.IconPath = @"";
            VTDPropertyInfoBase pi2581 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1311 = new VTDObjectGetter(pi2581);
            VTDPropertyInfoBase pi2582 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter1271 = new VTDObjectSetter(pi2582);
            binding_setter1271 = new StringFormaterDecorator(binding_setter1271,"{Step.DataFetchActivity33.OutTable}");
            bind_dir1271 = new BindDirection(_flow.DataFetchActivity33,binding_getter1311,binding_setter1271,BindTargetType.ToInProperty);
            _flow.DataDisconnectActivity34.InDirections.Add(bind_dir1271);
            this.Activities.Add (_flow.DataDisconnectActivity34);
            this.DataCursorActivity37.Comment = @"";
            this.DataCursorActivity37.IconPath = @"";
            VTDPropertyInfoBase pi2583 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1312 = new VTDObjectGetter(pi2583);
            VTDPropertyInfoBase pi2584 = new VTDPropertyInfoBase("InTable");
            VTDBaseSetter binding_setter1272 = new VTDObjectSetter(pi2584);
            binding_setter1272 = new StringFormaterDecorator(binding_setter1272,"{Step.DataFetchActivity33.OutTable}");
            bind_dir1272 = new BindDirection(_flow.DataFetchActivity33,binding_getter1312,binding_setter1272,BindTargetType.ToInProperty);
            this.DataCursorActivity37.InDirections.Add(bind_dir1272);
            this.DataCursorActivity37_Policy.StartPosition = CursorStartPosition.FirstRecord;
            this.DataCursorActivity37_Policy.StartAtSpecificRow = 1;
            this.DataCursorActivity37_Policy.StartCondition.ColumnName = "";
            this.DataCursorActivity37_Policy.StartCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity37_Policy.StartCondition.Value = "";
            this.DataCursorActivity37_Policy.EndPosition = CursorEndPosition.LastRecord;
            this.DataCursorActivity37_Policy.EndAtSpecificRow = 1;
            this.DataCursorActivity37_Policy.EndCondition.ColumnName = "";
            this.DataCursorActivity37_Policy.EndCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity37_Policy.EndCondition.Value = "";
            this.DataCursorActivity37_Policy.StepType = CursorStepType.Forward;
            this.DataCursorActivity37_Policy.StepSize = 1;
            this.DataCursorActivity37_Policy.ActionAfterLastRecord = CursorActionAfterLastRecord.Wraparound;
            this.DataCursorActivity37.Policy = this.DataCursorActivity37_Policy;
            this.DataCursorActivity37.ReportStepData = true;
            _flow.Loop2.BeforeExecuteStepEvent += this.DataCursorActivity37.ResetCursor;
            _flow.Sequence31.Comment = @"";
            _flow.Sequence31.IconPath = @"";
            _flow.Sequence31.Name = @"序列31";
            _flow.Sequence31.Activities.Add (_flow.DbOpenConnection5);
            _flow.Sequence31.Activities.Add (_flow.DbFetchData4);
            _flow.Sequence31.Activities.Add (_flow.DbFetchData6);
            _flow.Sequence31.Activities.Add (_flow.DbFetchData7);
            _flow.Sequence31.Activities.Add (_flow.DbFetchData8);
            _flow.Sequence31.Activities.Add (_flow.DbFetchData28);
            _flow.Sequence31.Activities.Add (_flow.Loop9);
            _flow.Sequence31.Activities.Add (_flow.HTTPActivity27);
            _flow.Sequence31.Activities.Add (_flow.DbFetchData30);
            _flow.DbOpenConnection5.ConnectionString = @"DSN=192.168.50.11;Uid=ime;Pwd=www.365ime.com!;";
            _flow.DbOpenConnection5.Password = @"";
            _flow.DbOpenConnection5.DatabaseType = HP.ST.Shared.Utilities.DB.DatabaseType.ODBC;
            _flow.DbOpenConnection5.Comment = @"";
            _flow.DbOpenConnection5.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_connect.png";
            _flow.DbOpenConnection5.Name = @"连接到Mysql数据库";
            _flow.DbFetchData4.QueryString = @"select count(*) as 'Row' from tb_setmessagestatus_verification";
            _flow.DbFetchData4.Timeout = (int)30;
            _flow.DbFetchData4.Comment = @"";
            _flow.DbFetchData4.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData4.Name = @"查询tb_setmessagestatus_verification表有多少行数据";
            VTDPropertyInfoBase pi2585 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1313 = new VTDObjectGetter(pi2585);
            VTDPropertyInfoBase pi2586 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1273 = new VTDObjectSetter(pi2586);
            bind_dir1273 = new BindDirection(_flow.DbOpenConnection5,binding_getter1313,binding_setter1273,BindTargetType.ToInProperty);
            _flow.DbFetchData4.InDirections.Add(bind_dir1273);
            XmlDocument DbFetchData4_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData4_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData4_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><Row /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData4.ExpectedOutputProperties = DbFetchData4_ExpectedOutputProperties_Document;
            _flow.DbFetchData6.QueryString = @"select LoginTeacherUsername from tb_global_table where TestCase = 1";
            _flow.DbFetchData6.Timeout = (int)30;
            _flow.DbFetchData6.Comment = @"";
            _flow.DbFetchData6.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData6.Name = @"查询tb_global_table表中LoginTeacherUsername的值";
            VTDPropertyInfoBase pi2587 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1314 = new VTDObjectGetter(pi2587);
            VTDPropertyInfoBase pi2588 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1274 = new VTDObjectSetter(pi2588);
            bind_dir1274 = new BindDirection(_flow.DbOpenConnection5,binding_getter1314,binding_setter1274,BindTargetType.ToInProperty);
            _flow.DbFetchData6.InDirections.Add(bind_dir1274);
            XmlDocument DbFetchData6_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData6_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData6_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><LoginTeacherUsername /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData6.ExpectedOutputProperties = DbFetchData6_ExpectedOutputProperties_Document;
            _flow.DbFetchData7.QueryString = @"select LoginStudentUsername from tb_global_table where TestCase = 1";
            _flow.DbFetchData7.Timeout = (int)30;
            _flow.DbFetchData7.Comment = @"";
            _flow.DbFetchData7.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData7.Name = @"查询tb_global_table表中LoginStudentUsername的值";
            VTDPropertyInfoBase pi2589 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1315 = new VTDObjectGetter(pi2589);
            VTDPropertyInfoBase pi2590 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1275 = new VTDObjectSetter(pi2590);
            bind_dir1275 = new BindDirection(_flow.DbOpenConnection5,binding_getter1315,binding_setter1275,BindTargetType.ToInProperty);
            _flow.DbFetchData7.InDirections.Add(bind_dir1275);
            XmlDocument DbFetchData7_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData7_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData7_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><LoginStudentUsername /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData7.ExpectedOutputProperties = DbFetchData7_ExpectedOutputProperties_Document;
            _flow.DbFetchData8.QueryString = @"select StudentsXsid from tb_global_table where TestCase = 1";
            _flow.DbFetchData8.Timeout = (int)30;
            _flow.DbFetchData8.Comment = @"";
            _flow.DbFetchData8.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData8.Name = @"查询tb_global_table表中StudentsXsid的值";
            VTDPropertyInfoBase pi2591 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1316 = new VTDObjectGetter(pi2591);
            VTDPropertyInfoBase pi2592 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1276 = new VTDObjectSetter(pi2592);
            bind_dir1276 = new BindDirection(_flow.DbOpenConnection5,binding_getter1316,binding_setter1276,BindTargetType.ToInProperty);
            _flow.DbFetchData8.InDirections.Add(bind_dir1276);
            XmlDocument DbFetchData8_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData8_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData8_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><StudentsXsid /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData8.ExpectedOutputProperties = DbFetchData8_ExpectedOutputProperties_Document;
            _flow.DbFetchData28.QueryString = @"select xmid from tb_global_table where TestCase = 1";
            _flow.DbFetchData28.Timeout = (int)30;
            _flow.DbFetchData28.Comment = @"";
            _flow.DbFetchData28.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData28.Name = @"查询tb_global_table表中xmid的值";
            VTDPropertyInfoBase pi2593 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1317 = new VTDObjectGetter(pi2593);
            VTDPropertyInfoBase pi2594 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1277 = new VTDObjectSetter(pi2594);
            bind_dir1277 = new BindDirection(_flow.DbOpenConnection5,binding_getter1317,binding_setter1277,BindTargetType.ToInProperty);
            _flow.DbFetchData28.InDirections.Add(bind_dir1277);
            XmlDocument DbFetchData28_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData28_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData28_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><xmid /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData28.ExpectedOutputProperties = DbFetchData28_ExpectedOutputProperties_Document;
            _flow.Loop9.ConditionAsString = @"Run for 1 iteration";
            _flow.Loop9.NumberOfIterations = (int)1;
            _flow.Loop9.Comment = @"";
            _flow.Loop9.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_loop.png";
            _flow.Loop9.Name = @"循环查询出tb_setmessagestatus_verification的值";
            VTDPropertyInfoBase pi2595 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='Row'][1]");
            VTDBaseGetter binding_getter1318 = new VTDXPathGetter(pi2595,XmlTypeCode.Long);
            binding_getter1318 = new XPathGetterDecorator(binding_getter1318,"{Array0}",1);
            VTDPropertyInfoBase pi2596 = new VTDPropertyInfoBase("NumberOfIterations");
            VTDBaseSetter binding_setter1278 = new VTDObjectSetter(pi2596);
            bind_dir1278 = new BindDirection(_flow.DbFetchData4,binding_getter1318,binding_setter1278,BindTargetType.ToInProperty);
            _flow.Loop9.InDirections.Add(bind_dir1278);
            _flow.Loop9.Activities.Add (this.DataCursorActivity38);
            _flow.Loop9.Activities.Add (_flow.Sequence32);
            _flow.HTTPActivity27.TextBody = @"xsid={Step.OutputProperties.DbFetchData8.ResultTable.Row[1].StudentsXsid}&jid={Step.OutputProperties.DbFetchData7.ResultTable.Row[1].LoginStudentUsername}@365ime.com&fromJid={Step.OutputProperties.DbFetchData6.ResultTable.Row[1].LoginTeacherUsername}@365ime.com&xmid={Step.OutputProperties.DbFetchData28.ResultTable.Row[1].xmid}";
            _flow.HTTPActivity27.TextXmlBody = @"";
            _flow.HTTPActivity27.FileBody = @"";
            _flow.HTTPActivity27.PostBody = @"";
            _flow.HTTPActivity27.Url = @"{DataSource.tb_global_table.msgHost}{DataSource.tb_global_table.setMessageStatus}";
            _flow.HTTPActivity27.HttpMethod = @"POST";
            _flow.HTTPActivity27.HttpVersion = @"1.1";
            _flow.HTTPActivity27.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity27.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity27.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity27.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity27.Comment = @"";
            _flow.HTTPActivity27.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity27.RequestBodyType = @"Text";
            _flow.HTTPActivity27.ResponseType = @"Text";
            _flow.HTTPActivity27.Name = @"调用setMessageStatus接口";
            _flow.HTTPActivity27.Proxy.Server = @"";
            _flow.HTTPActivity27.Proxy.Username = @"";
            _flow.HTTPActivity27.Proxy.Password = @"";
            _flow.HTTPActivity27.Authentication.Username = @"";
            _flow.HTTPActivity27.Authentication.Password = @"";
            _flow.HTTPActivity27.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity27.Timeout = (int)100000;
            _flow.HTTPActivity27.ClientCertificate.Password = @"";
            _flow.HTTPActivity27.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity27.UseClientCertificate = false;
            _flow.HTTPActivity27.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity27.AllowRedirections = true;
            _flow.HTTPActivity27.ReuseCookies = false;
            _flow.HTTPActivity27.ExpectServerError = false;
            XmlDocument HTTPActivity27_XMLBody_Document = new XmlDocument();
            HTTPActivity27_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity27_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity27.XMLBody = HTTPActivity27_XMLBody_Document;
            XmlDocument HTTPActivity27_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity27_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity27_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity27.RequestMultipartInfoXml = HTTPActivity27_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity27.Multipart=false;
            VTDPropertyInfoBase pi2597 = new VTDPropertyInfoBase("msgHost");
            VTDBaseGetter binding_getter1319 = new VTDObjectGetter(pi2597);
            VTDPropertyInfoBase pi2598 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1279 = new VTDObjectSetter(pi2598);
            binding_setter1279 = new StringFormaterDecorator(binding_setter1279,"{DataSource.tb_global_table.msgHost}");
            bind_dir1279 = new BindDirection(this.DataCursorActivity37,binding_getter1319,binding_setter1279,BindTargetType.ToInProperty);
            _flow.HTTPActivity27.InDirections.Add(bind_dir1279);
            VTDPropertyInfoBase pi2599 = new VTDPropertyInfoBase("setMessageStatus");
            VTDBaseGetter binding_getter1320 = new VTDObjectGetter(pi2599);
            VTDPropertyInfoBase pi2600 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1280 = new VTDObjectSetter(pi2600);
            binding_setter1280 = new StringFormaterDecorator(binding_setter1280,"{DataSource.tb_global_table.setMessageStatus}");
            bind_dir1280 = new BindDirection(this.DataCursorActivity37,binding_getter1320,binding_setter1280,BindTargetType.ToInProperty);
            _flow.HTTPActivity27.InDirections.Add(bind_dir1280);
            VTDPropertyInfoBase pi2601 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1321 = new VTDObjectGetter(pi2601);
            VTDPropertyInfoBase pi2602 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1281 = new VTDObjectSetter(pi2602);
            binding_setter1281 = new StringFormaterDecorator(binding_setter1281,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1281 = new BindDirection(this.DataCursorActivity37,binding_getter1321,binding_setter1281,BindTargetType.ToInProperty);
            _flow.HTTPActivity27.InDirections.Add(bind_dir1281);
            VTDPropertyInfoBase pi2603 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1322 = new VTDObjectGetter(pi2603);
            VTDPropertyInfoBase pi2604 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1282 = new VTDObjectSetter(pi2604);
            binding_setter1282 = new StringFormaterDecorator(binding_setter1282,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1282 = new BindDirection(this.DataCursorActivity37,binding_getter1322,binding_setter1282,BindTargetType.ToInProperty);
            _flow.HTTPActivity27.InDirections.Add(bind_dir1282);
            VTDPropertyInfoBase pi2605 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='StudentsXsid'][1]");
            VTDBaseGetter binding_getter1323 = new VTDXPathGetter(pi2605,XmlTypeCode.String);
            binding_getter1323 = new XPathGetterDecorator(binding_getter1323,"{Array0}",1);
            VTDPropertyInfoBase pi2606 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1283 = new VTDObjectSetter(pi2606);
            binding_setter1283 = new StringFormaterDecorator(binding_setter1283,"{Step.OutputProperties.DbFetchData8.ResultTable.Row[1].StudentsXsid}");
            bind_dir1283 = new BindDirection(_flow.DbFetchData8,binding_getter1323,binding_setter1283,BindTargetType.ToInProperty);
            _flow.HTTPActivity27.InDirections.Add(bind_dir1283);
            VTDPropertyInfoBase pi2607 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='LoginStudentUsername'][1]");
            VTDBaseGetter binding_getter1324 = new VTDXPathGetter(pi2607,XmlTypeCode.String);
            binding_getter1324 = new XPathGetterDecorator(binding_getter1324,"{Array0}",1);
            VTDPropertyInfoBase pi2608 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1284 = new VTDObjectSetter(pi2608);
            binding_setter1284 = new StringFormaterDecorator(binding_setter1284,"{Step.OutputProperties.DbFetchData7.ResultTable.Row[1].LoginStudentUsername}");
            bind_dir1284 = new BindDirection(_flow.DbFetchData7,binding_getter1324,binding_setter1284,BindTargetType.ToInProperty);
            _flow.HTTPActivity27.InDirections.Add(bind_dir1284);
            VTDPropertyInfoBase pi2609 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='LoginTeacherUsername'][1]");
            VTDBaseGetter binding_getter1325 = new VTDXPathGetter(pi2609,XmlTypeCode.String);
            binding_getter1325 = new XPathGetterDecorator(binding_getter1325,"{Array0}",1);
            VTDPropertyInfoBase pi2610 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1285 = new VTDObjectSetter(pi2610);
            binding_setter1285 = new StringFormaterDecorator(binding_setter1285,"{Step.OutputProperties.DbFetchData6.ResultTable.Row[1].LoginTeacherUsername}");
            bind_dir1285 = new BindDirection(_flow.DbFetchData6,binding_getter1325,binding_setter1285,BindTargetType.ToInProperty);
            _flow.HTTPActivity27.InDirections.Add(bind_dir1285);
            VTDPropertyInfoBase pi2611 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='xmid'][1]");
            VTDBaseGetter binding_getter1326 = new VTDXPathGetter(pi2611,XmlTypeCode.String);
            binding_getter1326 = new XPathGetterDecorator(binding_getter1326,"{Array0}",1);
            VTDPropertyInfoBase pi2612 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1286 = new VTDObjectSetter(pi2612);
            binding_setter1286 = new StringFormaterDecorator(binding_setter1286,"{Step.OutputProperties.DbFetchData28.ResultTable.Row[1].xmid}");
            bind_dir1286 = new BindDirection(_flow.DbFetchData28,binding_getter1326,binding_setter1286,BindTargetType.ToInProperty);
            _flow.HTTPActivity27.InDirections.Add(bind_dir1286);
            XmlDocument HTTPActivity27_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity27_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity27_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity27.ExpectedResponseXmlBody = HTTPActivity27_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity27_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity27_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity27_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity27.ExpectedResponseJsonBody = HTTPActivity27_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity27_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity27_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity27_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity27.ExpectedOutputProperties = HTTPActivity27_ExpectedOutputProperties_Document;
            _flow.DbFetchData30.QueryString = @"update tb_result_table set ResponseJson = '{Step.OutputProperties.HTTPActivity27.ResponseBody}' where InterfaceName = '/iq/setMessageStatus.php'";
            _flow.DbFetchData30.Timeout = (int)30;
            _flow.DbFetchData30.Comment = @"";
            _flow.DbFetchData30.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData30.Name = @"将接口返回的Json更新至tb_result_table";
            VTDPropertyInfoBase pi2613 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1327 = new VTDObjectGetter(pi2613);
            VTDPropertyInfoBase pi2614 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1287 = new VTDObjectSetter(pi2614);
            binding_setter1287 = new StringFormaterDecorator(binding_setter1287,"{Step.OutputProperties.HTTPActivity27.ResponseBody}");
            bind_dir1287 = new BindDirection(_flow.HTTPActivity27,binding_getter1327,binding_setter1287,BindTargetType.ToInProperty);
            _flow.DbFetchData30.InDirections.Add(bind_dir1287);
            VTDPropertyInfoBase pi2615 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1328 = new VTDObjectGetter(pi2615);
            VTDPropertyInfoBase pi2616 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1288 = new VTDObjectSetter(pi2616);
            bind_dir1288 = new BindDirection(_flow.DbOpenConnection5,binding_getter1328,binding_setter1288,BindTargetType.ToInProperty);
            _flow.DbFetchData30.InDirections.Add(bind_dir1288);
            XmlDocument DbFetchData30_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData30_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData30_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData30.ExpectedOutputProperties = DbFetchData30_ExpectedOutputProperties_Document;
            this.DataCursorActivity38.Comment = @"";
            this.DataCursorActivity38.IconPath = @"";
            VTDPropertyInfoBase pi2617 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter1329 = new VTDObjectGetter(pi2617);
            VTDPropertyInfoBase pi2618 = new VTDPropertyInfoBase("InTable");
            VTDBaseSetter binding_setter1289 = new VTDObjectSetter(pi2618);
            binding_setter1289 = new StringFormaterDecorator(binding_setter1289,"{Step.DataFetchActivity33.OutTable}");
            bind_dir1289 = new BindDirection(_flow.DataFetchActivity33,binding_getter1329,binding_setter1289,BindTargetType.ToInProperty);
            this.DataCursorActivity38.InDirections.Add(bind_dir1289);
            this.DataCursorActivity38_Policy.StartPosition = CursorStartPosition.FirstRecord;
            this.DataCursorActivity38_Policy.StartAtSpecificRow = 1;
            this.DataCursorActivity38_Policy.StartCondition.ColumnName = "";
            this.DataCursorActivity38_Policy.StartCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity38_Policy.StartCondition.Value = "";
            this.DataCursorActivity38_Policy.EndPosition = CursorEndPosition.LastRecord;
            this.DataCursorActivity38_Policy.EndAtSpecificRow = 1;
            this.DataCursorActivity38_Policy.EndCondition.ColumnName = "";
            this.DataCursorActivity38_Policy.EndCondition.Comparison = ConditionOperator.Equal;
            this.DataCursorActivity38_Policy.EndCondition.Value = "";
            this.DataCursorActivity38_Policy.StepType = CursorStepType.Forward;
            this.DataCursorActivity38_Policy.StepSize = 1;
            this.DataCursorActivity38_Policy.ActionAfterLastRecord = CursorActionAfterLastRecord.Wraparound;
            this.DataCursorActivity38.Policy = this.DataCursorActivity38_Policy;
            this.DataCursorActivity38.ReportStepData = false;
            _flow.Loop9.BeforeExecuteStepEvent += this.DataCursorActivity38.ResetCursor;
            _flow.Sequence32.Comment = @"";
            _flow.Sequence32.IconPath = @"";
            _flow.Sequence32.Name = @"序列32";
            _flow.Sequence32.Activities.Add (_flow.DbFetchData10);
            _flow.Sequence32.Activities.Add (_flow.ReplaceStringActivity12);
            _flow.Sequence32.Activities.Add (_flow.ReplaceStringActivity13);
            _flow.Sequence32.Activities.Add (_flow.ReplaceStringActivity14);
            _flow.Sequence32.Activities.Add (_flow.ReplaceStringActivity29);
            _flow.Sequence32.Activities.Add (_flow.HTTPActivity16);
            _flow.Sequence32.Activities.Add (_flow.StringToJsonActivity17);
            _flow.Sequence32.Activities.Add (_flow.DbFetchData18);
            _flow.Sequence32.Activities.Add (_flow.DbFetchData19);
            _flow.Sequence32.Activities.Add (_flow.DbFetchData20);
            _flow.Sequence32.Activities.Add (_flow.DbFetchData21);
            _flow.Sequence32.Activities.Add (_flow.IfElse22);
            _flow.DbFetchData10.QueryString = @"select xsid,fromJid,jid,xmid from tb_setmessagestatus_verification where TestCase = {Step.OutputProperties.Loop9.CurrentIterationNumber}";
            _flow.DbFetchData10.Timeout = (int)30;
            _flow.DbFetchData10.Comment = @"";
            _flow.DbFetchData10.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData10.Name = @"查询出tb_setmessagestatus_verification表中字段值";
            VTDPropertyInfoBase pi2619 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1330 = new VTDObjectGetter(pi2619);
            VTDPropertyInfoBase pi2620 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1290 = new VTDObjectSetter(pi2620);
            binding_setter1290 = new StringFormaterDecorator(binding_setter1290,"{Step.OutputProperties.Loop9.CurrentIterationNumber}");
            bind_dir1290 = new BindDirection(_flow.Loop9,binding_getter1330,binding_setter1290,BindTargetType.ToInProperty);
            _flow.DbFetchData10.InDirections.Add(bind_dir1290);
            VTDPropertyInfoBase pi2621 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1331 = new VTDObjectGetter(pi2621);
            VTDPropertyInfoBase pi2622 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1291 = new VTDObjectSetter(pi2622);
            bind_dir1291 = new BindDirection(_flow.DbOpenConnection5,binding_getter1331,binding_setter1291,BindTargetType.ToInProperty);
            _flow.DbFetchData10.InDirections.Add(bind_dir1291);
            XmlDocument DbFetchData10_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData10_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData10_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><xsid /><fromJid /><jid /><xmid /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData10.ExpectedOutputProperties = DbFetchData10_ExpectedOutputProperties_Document;
            _flow.ReplaceStringActivity12.SourceString = @"{Step.OutputProperties.DbFetchData10.ResultTable.Row[1].fromJid}";
            _flow.ReplaceStringActivity12.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity12.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity12.SearchReplaceString[0].Key = @"77401169";
            _flow.ReplaceStringActivity12.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData6.ResultTable.Row[1].LoginTeacherUsername}";
            _flow.ReplaceStringActivity12.CaseSensitive = true;
            _flow.ReplaceStringActivity12.Comment = @"";
            _flow.ReplaceStringActivity12.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity12.Name = @"将fromjid更新至最新";
            VTDPropertyInfoBase pi2623 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='fromJid'][1]");
            VTDBaseGetter binding_getter1332 = new VTDXPathGetter(pi2623,XmlTypeCode.String);
            binding_getter1332 = new XPathGetterDecorator(binding_getter1332,"{Array0}",1);
            VTDPropertyInfoBase pi2624 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1292 = new VTDObjectSetter(pi2624);
            binding_setter1292 = new StringFormaterDecorator(binding_setter1292,"{Step.OutputProperties.DbFetchData10.ResultTable.Row[1].fromJid}");
            bind_dir1292 = new BindDirection(_flow.DbFetchData10,binding_getter1332,binding_setter1292,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity12.InDirections.Add(bind_dir1292);
            VTDPropertyInfoBase pi2625 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='LoginTeacherUsername'][1]");
            VTDBaseGetter binding_getter1333 = new VTDXPathGetter(pi2625,XmlTypeCode.String);
            binding_getter1333 = new XPathGetterDecorator(binding_getter1333,"{Array0}",1);
            VTDPropertyInfoBase pi2626 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1293 = new VTDObjectSetter(pi2626);
            binding_setter1293 = new StringFormaterDecorator(binding_setter1293,"{Step.OutputProperties.DbFetchData6.ResultTable.Row[1].LoginTeacherUsername}");
            bind_dir1293 = new BindDirection(_flow.DbFetchData6,binding_getter1333,binding_setter1293,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity12.InDirections.Add(bind_dir1293);
            _flow.ReplaceStringActivity13.SourceString = @"{Step.OutputProperties.DbFetchData10.ResultTable.Row[1].jid}";
            _flow.ReplaceStringActivity13.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity13.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity13.SearchReplaceString[0].Key = @"77401170";
            _flow.ReplaceStringActivity13.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData7.ResultTable.Row[1].LoginStudentUsername}";
            _flow.ReplaceStringActivity13.CaseSensitive = true;
            _flow.ReplaceStringActivity13.Comment = @"";
            _flow.ReplaceStringActivity13.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity13.Name = @"将jid更新至最新";
            VTDPropertyInfoBase pi2627 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='jid'][1]");
            VTDBaseGetter binding_getter1334 = new VTDXPathGetter(pi2627,XmlTypeCode.String);
            binding_getter1334 = new XPathGetterDecorator(binding_getter1334,"{Array0}",1);
            VTDPropertyInfoBase pi2628 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1294 = new VTDObjectSetter(pi2628);
            binding_setter1294 = new StringFormaterDecorator(binding_setter1294,"{Step.OutputProperties.DbFetchData10.ResultTable.Row[1].jid}");
            bind_dir1294 = new BindDirection(_flow.DbFetchData10,binding_getter1334,binding_setter1294,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity13.InDirections.Add(bind_dir1294);
            VTDPropertyInfoBase pi2629 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='LoginStudentUsername'][1]");
            VTDBaseGetter binding_getter1335 = new VTDXPathGetter(pi2629,XmlTypeCode.String);
            binding_getter1335 = new XPathGetterDecorator(binding_getter1335,"{Array0}",1);
            VTDPropertyInfoBase pi2630 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1295 = new VTDObjectSetter(pi2630);
            binding_setter1295 = new StringFormaterDecorator(binding_setter1295,"{Step.OutputProperties.DbFetchData7.ResultTable.Row[1].LoginStudentUsername}");
            bind_dir1295 = new BindDirection(_flow.DbFetchData7,binding_getter1335,binding_setter1295,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity13.InDirections.Add(bind_dir1295);
            _flow.ReplaceStringActivity14.SourceString = @"{Step.OutputProperties.DbFetchData10.ResultTable.Row[1].xsid}";
            _flow.ReplaceStringActivity14.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity14.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity14.SearchReplaceString[0].Key = @"x_1f1a0e62u0t5j480c916h26642tc3didb95f5an861da049516m0y7pd5aiu00";
            _flow.ReplaceStringActivity14.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData8.ResultTable.Row[1].StudentsXsid}";
            _flow.ReplaceStringActivity14.CaseSensitive = true;
            _flow.ReplaceStringActivity14.Comment = @"";
            _flow.ReplaceStringActivity14.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity14.Name = @"将xsid更新至最新";
            VTDPropertyInfoBase pi2631 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='xsid'][1]");
            VTDBaseGetter binding_getter1336 = new VTDXPathGetter(pi2631,XmlTypeCode.String);
            binding_getter1336 = new XPathGetterDecorator(binding_getter1336,"{Array0}",1);
            VTDPropertyInfoBase pi2632 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1296 = new VTDObjectSetter(pi2632);
            binding_setter1296 = new StringFormaterDecorator(binding_setter1296,"{Step.OutputProperties.DbFetchData10.ResultTable.Row[1].xsid}");
            bind_dir1296 = new BindDirection(_flow.DbFetchData10,binding_getter1336,binding_setter1296,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity14.InDirections.Add(bind_dir1296);
            VTDPropertyInfoBase pi2633 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='StudentsXsid'][1]");
            VTDBaseGetter binding_getter1337 = new VTDXPathGetter(pi2633,XmlTypeCode.String);
            binding_getter1337 = new XPathGetterDecorator(binding_getter1337,"{Array0}",1);
            VTDPropertyInfoBase pi2634 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1297 = new VTDObjectSetter(pi2634);
            binding_setter1297 = new StringFormaterDecorator(binding_setter1297,"{Step.OutputProperties.DbFetchData8.ResultTable.Row[1].StudentsXsid}");
            bind_dir1297 = new BindDirection(_flow.DbFetchData8,binding_getter1337,binding_setter1297,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity14.InDirections.Add(bind_dir1297);
            _flow.ReplaceStringActivity29.SourceString = @"{Step.OutputProperties.DbFetchData10.ResultTable.Row[1].xmid}";
            _flow.ReplaceStringActivity29.SearchReplaceString = new Pair<string, string>[1];
            _flow.ReplaceStringActivity29.SearchReplaceString[0] = new Pair<string, string>();
            _flow.ReplaceStringActivity29.SearchReplaceString[0].Key = @"0";
            _flow.ReplaceStringActivity29.SearchReplaceString[0].Value = @"{Step.OutputProperties.DbFetchData28.ResultTable.Row[1].xmid}";
            _flow.ReplaceStringActivity29.CaseSensitive = true;
            _flow.ReplaceStringActivity29.Comment = @"";
            _flow.ReplaceStringActivity29.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_replace_string.png";
            _flow.ReplaceStringActivity29.Name = @"将xmid更新至最新";
            VTDPropertyInfoBase pi2635 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='xmid'][1]");
            VTDBaseGetter binding_getter1338 = new VTDXPathGetter(pi2635,XmlTypeCode.String);
            binding_getter1338 = new XPathGetterDecorator(binding_getter1338,"{Array0}",1);
            VTDPropertyInfoBase pi2636 = new VTDPropertyInfoBase("SourceString");
            VTDBaseSetter binding_setter1298 = new VTDObjectSetter(pi2636);
            binding_setter1298 = new StringFormaterDecorator(binding_setter1298,"{Step.OutputProperties.DbFetchData10.ResultTable.Row[1].xmid}");
            bind_dir1298 = new BindDirection(_flow.DbFetchData10,binding_getter1338,binding_setter1298,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity29.InDirections.Add(bind_dir1298);
            VTDPropertyInfoBase pi2637 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='xmid'][1]");
            VTDBaseGetter binding_getter1339 = new VTDXPathGetter(pi2637,XmlTypeCode.String);
            binding_getter1339 = new XPathGetterDecorator(binding_getter1339,"{Array0}",1);
            VTDPropertyInfoBase pi2638 = new VTDPropertyInfoBase("SearchReplaceString[0].Value");
            VTDBaseSetter binding_setter1299 = new VTDObjectSetter(pi2638);
            binding_setter1299 = new StringFormaterDecorator(binding_setter1299,"{Step.OutputProperties.DbFetchData28.ResultTable.Row[1].xmid}");
            bind_dir1299 = new BindDirection(_flow.DbFetchData28,binding_getter1339,binding_setter1299,BindTargetType.ToInProperty);
            _flow.ReplaceStringActivity29.InDirections.Add(bind_dir1299);
            _flow.HTTPActivity16.TextBody = @"xsid={Step.OutputProperties.ReplaceStringActivity14.Result}&jid={Step.OutputProperties.ReplaceStringActivity13.Result}&fromJid={Step.OutputProperties.ReplaceStringActivity12.Result}&xmid={Step.OutputProperties.ReplaceStringActivity29.Result}";
            _flow.HTTPActivity16.TextXmlBody = @"";
            _flow.HTTPActivity16.FileBody = @"";
            _flow.HTTPActivity16.PostBody = @"";
            _flow.HTTPActivity16.Url = @"{DataSource.tb_global_table.msgHost}{DataSource.tb_global_table.setMessageStatus}";
            _flow.HTTPActivity16.HttpMethod = @"POST";
            _flow.HTTPActivity16.HttpVersion = @"1.1";
            _flow.HTTPActivity16.RequestHeaders = new Pair<string, string>[1];
            _flow.HTTPActivity16.RequestHeaders[0] = new Pair<string, string>();
            _flow.HTTPActivity16.RequestHeaders[0].Key = @"{DataSource.tb_global_table.RequestHeadersName}";
            _flow.HTTPActivity16.RequestHeaders[0].Value = @"{DataSource.tb_global_table.RequestHeadersValue}";
            _flow.HTTPActivity16.Comment = @"";
            _flow.HTTPActivity16.IconPath = @"AddIns\ServiceTest\HTTPActivity\toolbox_http.png";
            _flow.HTTPActivity16.RequestBodyType = @"Text";
            _flow.HTTPActivity16.ResponseType = @"Text";
            _flow.HTTPActivity16.Name = @"调用setMessageStatus接口";
            _flow.HTTPActivity16.Proxy.Server = @"";
            _flow.HTTPActivity16.Proxy.Username = @"";
            _flow.HTTPActivity16.Proxy.Password = @"";
            _flow.HTTPActivity16.Authentication.Username = @"";
            _flow.HTTPActivity16.Authentication.Password = @"";
            _flow.HTTPActivity16.ConnectionType = @"Keep-Alive";
            _flow.HTTPActivity16.Timeout = (int)100000;
            _flow.HTTPActivity16.ClientCertificate.Password = @"";
            _flow.HTTPActivity16.ClientCertificate.FileSystem.Path = @"";
            _flow.HTTPActivity16.UseClientCertificate = false;
            _flow.HTTPActivity16.MaximumAutomaticRedirections = (int)3;
            _flow.HTTPActivity16.AllowRedirections = true;
            _flow.HTTPActivity16.ReuseCookies = false;
            _flow.HTTPActivity16.ExpectServerError = false;
            XmlDocument HTTPActivity16_XMLBody_Document = new XmlDocument();
            HTTPActivity16_XMLBody_Document.PreserveWhitespace = true;
            HTTPActivity16_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity16.XMLBody = HTTPActivity16_XMLBody_Document;
            XmlDocument HTTPActivity16_RequestMultipartInfoXml_Document = new XmlDocument();
            HTTPActivity16_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            HTTPActivity16_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.HTTPActivity16.RequestMultipartInfoXml = HTTPActivity16_RequestMultipartInfoXml_Document;
            _flow.HTTPActivity16.Multipart=false;
            VTDPropertyInfoBase pi2639 = new VTDPropertyInfoBase("msgHost");
            VTDBaseGetter binding_getter1340 = new VTDObjectGetter(pi2639);
            VTDPropertyInfoBase pi2640 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1300 = new VTDObjectSetter(pi2640);
            binding_setter1300 = new StringFormaterDecorator(binding_setter1300,"{DataSource.tb_global_table.msgHost}");
            bind_dir1300 = new BindDirection(this.DataCursorActivity38,binding_getter1340,binding_setter1300,BindTargetType.ToInProperty);
            _flow.HTTPActivity16.InDirections.Add(bind_dir1300);
            VTDPropertyInfoBase pi2641 = new VTDPropertyInfoBase("setMessageStatus");
            VTDBaseGetter binding_getter1341 = new VTDObjectGetter(pi2641);
            VTDPropertyInfoBase pi2642 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter1301 = new VTDObjectSetter(pi2642);
            binding_setter1301 = new StringFormaterDecorator(binding_setter1301,"{DataSource.tb_global_table.setMessageStatus}");
            bind_dir1301 = new BindDirection(this.DataCursorActivity38,binding_getter1341,binding_setter1301,BindTargetType.ToInProperty);
            _flow.HTTPActivity16.InDirections.Add(bind_dir1301);
            VTDPropertyInfoBase pi2643 = new VTDPropertyInfoBase("RequestHeadersValue");
            VTDBaseGetter binding_getter1342 = new VTDObjectGetter(pi2643);
            VTDPropertyInfoBase pi2644 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter1302 = new VTDObjectSetter(pi2644);
            binding_setter1302 = new StringFormaterDecorator(binding_setter1302,"{DataSource.tb_global_table.RequestHeadersValue}");
            bind_dir1302 = new BindDirection(this.DataCursorActivity38,binding_getter1342,binding_setter1302,BindTargetType.ToInProperty);
            _flow.HTTPActivity16.InDirections.Add(bind_dir1302);
            VTDPropertyInfoBase pi2645 = new VTDPropertyInfoBase("RequestHeadersName");
            VTDBaseGetter binding_getter1343 = new VTDObjectGetter(pi2645);
            VTDPropertyInfoBase pi2646 = new VTDPropertyInfoBase("RequestHeaders[0].Key");
            VTDBaseSetter binding_setter1303 = new VTDObjectSetter(pi2646);
            binding_setter1303 = new StringFormaterDecorator(binding_setter1303,"{DataSource.tb_global_table.RequestHeadersName}");
            bind_dir1303 = new BindDirection(this.DataCursorActivity38,binding_getter1343,binding_setter1303,BindTargetType.ToInProperty);
            _flow.HTTPActivity16.InDirections.Add(bind_dir1303);
            VTDPropertyInfoBase pi2647 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1344 = new VTDObjectGetter(pi2647);
            VTDPropertyInfoBase pi2648 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1304 = new VTDObjectSetter(pi2648);
            binding_setter1304 = new StringFormaterDecorator(binding_setter1304,"{Step.OutputProperties.ReplaceStringActivity14.Result}");
            bind_dir1304 = new BindDirection(_flow.ReplaceStringActivity14,binding_getter1344,binding_setter1304,BindTargetType.ToInProperty);
            _flow.HTTPActivity16.InDirections.Add(bind_dir1304);
            VTDPropertyInfoBase pi2649 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1345 = new VTDObjectGetter(pi2649);
            VTDPropertyInfoBase pi2650 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1305 = new VTDObjectSetter(pi2650);
            binding_setter1305 = new StringFormaterDecorator(binding_setter1305,"{Step.OutputProperties.ReplaceStringActivity13.Result}");
            bind_dir1305 = new BindDirection(_flow.ReplaceStringActivity13,binding_getter1345,binding_setter1305,BindTargetType.ToInProperty);
            _flow.HTTPActivity16.InDirections.Add(bind_dir1305);
            VTDPropertyInfoBase pi2651 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1346 = new VTDObjectGetter(pi2651);
            VTDPropertyInfoBase pi2652 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1306 = new VTDObjectSetter(pi2652);
            binding_setter1306 = new StringFormaterDecorator(binding_setter1306,"{Step.OutputProperties.ReplaceStringActivity12.Result}");
            bind_dir1306 = new BindDirection(_flow.ReplaceStringActivity12,binding_getter1346,binding_setter1306,BindTargetType.ToInProperty);
            _flow.HTTPActivity16.InDirections.Add(bind_dir1306);
            VTDPropertyInfoBase pi2653 = new VTDPropertyInfoBase("Result");
            VTDBaseGetter binding_getter1347 = new VTDObjectGetter(pi2653);
            VTDPropertyInfoBase pi2654 = new VTDPropertyInfoBase("TextBody");
            VTDBaseSetter binding_setter1307 = new VTDObjectSetter(pi2654);
            binding_setter1307 = new StringFormaterDecorator(binding_setter1307,"{Step.OutputProperties.ReplaceStringActivity29.Result}");
            bind_dir1307 = new BindDirection(_flow.ReplaceStringActivity29,binding_getter1347,binding_setter1307,BindTargetType.ToInProperty);
            _flow.HTTPActivity16.InDirections.Add(bind_dir1307);
            XmlDocument HTTPActivity16_ExpectedResponseXmlBody_Document = new XmlDocument();
            HTTPActivity16_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            HTTPActivity16_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity16.ExpectedResponseXmlBody = HTTPActivity16_ExpectedResponseXmlBody_Document;
            XmlDocument HTTPActivity16_ExpectedResponseJsonBody_Document = new XmlDocument();
            HTTPActivity16_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            HTTPActivity16_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.HTTPActivity16.ExpectedResponseJsonBody = HTTPActivity16_ExpectedResponseJsonBody_Document;
            XmlDocument HTTPActivity16_ExpectedOutputProperties_Document = new XmlDocument();
            HTTPActivity16_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            HTTPActivity16_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion /><StatusCode /><StatusDescription /><ResponseBody /><ResponseBodyAsBase64 /></Arguments>");
            _flow.HTTPActivity16.ExpectedOutputProperties = HTTPActivity16_ExpectedOutputProperties_Document;
            _flow.StringToJsonActivity17.InputString = @"{Step.OutputProperties.HTTPActivity16.ResponseBody}";
            _flow.StringToJsonActivity17.Comment = @"";
            _flow.StringToJsonActivity17.IconPath = @"AddIns\ServiceTest\TransformJson\ictb_string_to_json_16.png";
            _flow.StringToJsonActivity17.Name = @"将接口返回的response转换为JSON";
            VTDPropertyInfoBase pi2655 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1348 = new VTDObjectGetter(pi2655);
            VTDPropertyInfoBase pi2656 = new VTDPropertyInfoBase("InputString");
            VTDBaseSetter binding_setter1308 = new VTDObjectSetter(pi2656);
            binding_setter1308 = new StringFormaterDecorator(binding_setter1308,"{Step.OutputProperties.HTTPActivity16.ResponseBody}");
            bind_dir1308 = new BindDirection(_flow.HTTPActivity16,binding_getter1348,binding_setter1308,BindTargetType.ToInProperty);
            _flow.StringToJsonActivity17.InDirections.Add(bind_dir1308);
            _flow.DbFetchData18.QueryString = @"update tb_setmessagestatus_verification set InterfaceResponse = '{Step.OutputProperties.HTTPActivity16.ResponseBody}' where TestCase = {Step.OutputProperties.Loop9.CurrentIterationNumber}";
            _flow.DbFetchData18.Timeout = (int)30;
            _flow.DbFetchData18.Comment = @"";
            _flow.DbFetchData18.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData18.Name = @"将接口返回的JSON信息更新到InterfaceResponse字段中";
            VTDPropertyInfoBase pi2657 = new VTDPropertyInfoBase("ResponseBody");
            VTDBaseGetter binding_getter1349 = new VTDObjectGetter(pi2657);
            VTDPropertyInfoBase pi2658 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1309 = new VTDObjectSetter(pi2658);
            binding_setter1309 = new StringFormaterDecorator(binding_setter1309,"{Step.OutputProperties.HTTPActivity16.ResponseBody}");
            bind_dir1309 = new BindDirection(_flow.HTTPActivity16,binding_getter1349,binding_setter1309,BindTargetType.ToInProperty);
            _flow.DbFetchData18.InDirections.Add(bind_dir1309);
            VTDPropertyInfoBase pi2659 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1350 = new VTDObjectGetter(pi2659);
            VTDPropertyInfoBase pi2660 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1310 = new VTDObjectSetter(pi2660);
            binding_setter1310 = new StringFormaterDecorator(binding_setter1310,"{Step.OutputProperties.Loop9.CurrentIterationNumber}");
            bind_dir1310 = new BindDirection(_flow.Loop9,binding_getter1350,binding_setter1310,BindTargetType.ToInProperty);
            _flow.DbFetchData18.InDirections.Add(bind_dir1310);
            VTDPropertyInfoBase pi2661 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1351 = new VTDObjectGetter(pi2661);
            VTDPropertyInfoBase pi2662 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1311 = new VTDObjectSetter(pi2662);
            bind_dir1311 = new BindDirection(_flow.DbOpenConnection5,binding_getter1351,binding_setter1311,BindTargetType.ToInProperty);
            _flow.DbFetchData18.InDirections.Add(bind_dir1311);
            XmlDocument DbFetchData18_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData18_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData18_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData18.ExpectedOutputProperties = DbFetchData18_ExpectedOutputProperties_Document;
            _flow.DbFetchData19.QueryString = @"update tb_setmessagestatus_verification set OutputValue = 'errorcode={Step.JsonContent.StringToJsonActivity17.errorCode}' where TestCase = {Step.OutputProperties.Loop9.CurrentIterationNumber}";
            _flow.DbFetchData19.Timeout = (int)30;
            _flow.DbFetchData19.Comment = @"";
            _flow.DbFetchData19.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData19.Name = @"将errorcode更新到OutputValue字段中";
            VTDPropertyInfoBase pi2663 = new VTDPropertyInfoBase("JsonContent","/*[local-name(.)='Object'][1]/*[local-name(.)='errorCode'][1]");
            VTDBaseGetter binding_getter1352 = new VTDJsonGetter(pi2663);
            VTDPropertyInfoBase pi2664 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1312 = new VTDObjectSetter(pi2664);
            binding_setter1312 = new StringFormaterDecorator(binding_setter1312,"{Step.JsonContent.StringToJsonActivity17.errorCode}");
            bind_dir1312 = new BindDirection(_flow.StringToJsonActivity17,binding_getter1352,binding_setter1312,BindTargetType.ToInProperty);
            _flow.DbFetchData19.InDirections.Add(bind_dir1312);
            VTDPropertyInfoBase pi2665 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1353 = new VTDObjectGetter(pi2665);
            VTDPropertyInfoBase pi2666 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1313 = new VTDObjectSetter(pi2666);
            binding_setter1313 = new StringFormaterDecorator(binding_setter1313,"{Step.OutputProperties.Loop9.CurrentIterationNumber}");
            bind_dir1313 = new BindDirection(_flow.Loop9,binding_getter1353,binding_setter1313,BindTargetType.ToInProperty);
            _flow.DbFetchData19.InDirections.Add(bind_dir1313);
            VTDPropertyInfoBase pi2667 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1354 = new VTDObjectGetter(pi2667);
            VTDPropertyInfoBase pi2668 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1314 = new VTDObjectSetter(pi2668);
            bind_dir1314 = new BindDirection(_flow.DbOpenConnection5,binding_getter1354,binding_setter1314,BindTargetType.ToInProperty);
            _flow.DbFetchData19.InDirections.Add(bind_dir1314);
            XmlDocument DbFetchData19_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData19_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData19_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData19.ExpectedOutputProperties = DbFetchData19_ExpectedOutputProperties_Document;
            _flow.DbFetchData20.QueryString = @"select OutputValue from tb_setmessagestatus_verification where TestCase = {Step.OutputProperties.Loop9.CurrentIterationNumber}";
            _flow.DbFetchData20.Timeout = (int)30;
            _flow.DbFetchData20.Comment = @"";
            _flow.DbFetchData20.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData20.Name = @"查询OutputValue字段的值";
            VTDPropertyInfoBase pi2669 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1355 = new VTDObjectGetter(pi2669);
            VTDPropertyInfoBase pi2670 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1315 = new VTDObjectSetter(pi2670);
            binding_setter1315 = new StringFormaterDecorator(binding_setter1315,"{Step.OutputProperties.Loop9.CurrentIterationNumber}");
            bind_dir1315 = new BindDirection(_flow.Loop9,binding_getter1355,binding_setter1315,BindTargetType.ToInProperty);
            _flow.DbFetchData20.InDirections.Add(bind_dir1315);
            VTDPropertyInfoBase pi2671 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1356 = new VTDObjectGetter(pi2671);
            VTDPropertyInfoBase pi2672 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1316 = new VTDObjectSetter(pi2672);
            bind_dir1316 = new BindDirection(_flow.DbOpenConnection5,binding_getter1356,binding_setter1316,BindTargetType.ToInProperty);
            _flow.DbFetchData20.InDirections.Add(bind_dir1316);
            XmlDocument DbFetchData20_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData20_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData20_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><OutputValue /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData20.ExpectedOutputProperties = DbFetchData20_ExpectedOutputProperties_Document;
            _flow.DbFetchData21.QueryString = @"select ExpectationValue from tb_setmessagestatus_verification where TestCase = {Step.OutputProperties.Loop9.CurrentIterationNumber}";
            _flow.DbFetchData21.Timeout = (int)30;
            _flow.DbFetchData21.Comment = @"";
            _flow.DbFetchData21.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData21.Name = @"查询ExpectationValue字段的值";
            VTDPropertyInfoBase pi2673 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1357 = new VTDObjectGetter(pi2673);
            VTDPropertyInfoBase pi2674 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1317 = new VTDObjectSetter(pi2674);
            binding_setter1317 = new StringFormaterDecorator(binding_setter1317,"{Step.OutputProperties.Loop9.CurrentIterationNumber}");
            bind_dir1317 = new BindDirection(_flow.Loop9,binding_getter1357,binding_setter1317,BindTargetType.ToInProperty);
            _flow.DbFetchData21.InDirections.Add(bind_dir1317);
            VTDPropertyInfoBase pi2675 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1358 = new VTDObjectGetter(pi2675);
            VTDPropertyInfoBase pi2676 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1318 = new VTDObjectSetter(pi2676);
            bind_dir1318 = new BindDirection(_flow.DbOpenConnection5,binding_getter1358,binding_setter1318,BindTargetType.ToInProperty);
            _flow.DbFetchData21.InDirections.Add(bind_dir1318);
            XmlDocument DbFetchData21_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData21_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData21_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row><ExpectationValue /></Row></ResultTable></tns:Arguments>");
            _flow.DbFetchData21.ExpectedOutputProperties = DbFetchData21_ExpectedOutputProperties_Document;
            _flow.IfElse22.ConditionAsString = @"{Step.OutputProperties.DbFetchData20.ResultTable.Row[1].OutputValue} Equal {Step.OutputProperties.DbFetchData21.ResultTable.Row[1].ExpectationValue}";
            _flow.IfElse22.Comment = @"";
            _flow.IfElse22.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_if_else.png";
            _flow.IfElse22.Name = @"填写Result";
            _flow.IfElse22.Activities.Add (_flow.IfElseBranch23);
            _flow.IfElse22.Activities.Add (_flow.IfElseBranch24);
            _flow.IfElseBranch23.Condition += delegate(object sender,EventArgs e)
            {
            	try
            	{
            VTDPropertyInfoBase pi2677 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='OutputValue'][1]");
            VTDBaseGetter binding_getter1359 = new VTDXPathGetter(pi2677,XmlTypeCode.String);
            binding_getter1359 = new XPathGetterDecorator(binding_getter1359,"{Array0}",1);
            		System.String expr00 = (System.String)HP.ST.Fwk.RunTimeFWK.Utilities.Utils.ConvertValue(_flow.DbFetchData20.GetParam(binding_getter1359),typeof(System.String));
            		var result0 = expr00;
            VTDPropertyInfoBase pi2678 = new VTDPropertyInfoBase("OutputProperties","/*[local-name(.)='Arguments'][1]/*[local-name(.)='ResultTable'][1]/*[local-name(.)='Row'][{Array0}]/*[local-name(.)='ExpectationValue'][1]");
            VTDBaseGetter binding_getter1360 = new VTDXPathGetter(pi2678,XmlTypeCode.String);
            binding_getter1360 = new XPathGetterDecorator(binding_getter1360,"{Array0}",1);
            		System.String expr10 = (System.String)HP.ST.Fwk.RunTimeFWK.Utilities.Utils.ConvertValue(_flow.DbFetchData21.GetParam(binding_getter1360),typeof(System.String));
            		var result1 = expr10;
            		return (result0 == result1);
            	}
            	catch(Exception exp)
            	{
            		if (exp is System.InvalidCastException)
            		{
            			throw;
            		}
            		else
            		{
            			return false;
            		}
            	};
            };
            _flow.IfElseBranch23.Comment = @"";
            _flow.IfElseBranch23.IconPath = @"";
            _flow.IfElseBranch23.Name = @"是";
            _flow.IfElseBranch23.Activities.Add (_flow.DbFetchData25);
            _flow.IfElseBranch24.Condition += delegate(object sender,EventArgs e)
            {
            return true;
            };
            _flow.IfElseBranch24.Comment = @"";
            _flow.IfElseBranch24.IconPath = @"";
            _flow.IfElseBranch24.Name = @"否";
            _flow.IfElseBranch24.Activities.Add (_flow.DbFetchData26);
            _flow.DbFetchData25.QueryString = @"update tb_setmessagestatus_verification set Result = 'True' where TestCase = {Step.OutputProperties.Loop9.CurrentIterationNumber}";
            _flow.DbFetchData25.Timeout = (int)30;
            _flow.DbFetchData25.Comment = @"";
            _flow.DbFetchData25.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData25.Name = @"在Result字段插入True";
            VTDPropertyInfoBase pi2679 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1361 = new VTDObjectGetter(pi2679);
            VTDPropertyInfoBase pi2680 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1319 = new VTDObjectSetter(pi2680);
            binding_setter1319 = new StringFormaterDecorator(binding_setter1319,"{Step.OutputProperties.Loop9.CurrentIterationNumber}");
            bind_dir1319 = new BindDirection(_flow.Loop9,binding_getter1361,binding_setter1319,BindTargetType.ToInProperty);
            _flow.DbFetchData25.InDirections.Add(bind_dir1319);
            VTDPropertyInfoBase pi2681 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1362 = new VTDObjectGetter(pi2681);
            VTDPropertyInfoBase pi2682 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1320 = new VTDObjectSetter(pi2682);
            bind_dir1320 = new BindDirection(_flow.DbOpenConnection5,binding_getter1362,binding_setter1320,BindTargetType.ToInProperty);
            _flow.DbFetchData25.InDirections.Add(bind_dir1320);
            XmlDocument DbFetchData25_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData25_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData25_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData25.ExpectedOutputProperties = DbFetchData25_ExpectedOutputProperties_Document;
            _flow.DbFetchData26.QueryString = @"update tb_setmessagestatus_verification set Result='False' where TestCase = {Step.OutputProperties.Loop9.CurrentIterationNumber}";
            _flow.DbFetchData26.Timeout = (int)30;
            _flow.DbFetchData26.Comment = @"";
            _flow.DbFetchData26.IconPath = @"AddIns\ServiceTest\Database\toolbox_db_fetch_data.png";
            _flow.DbFetchData26.Name = @"在Result字段插入False";
            VTDPropertyInfoBase pi2683 = new VTDPropertyInfoBase("CurrentIterationNumber");
            VTDBaseGetter binding_getter1363 = new VTDObjectGetter(pi2683);
            VTDPropertyInfoBase pi2684 = new VTDPropertyInfoBase("QueryString");
            VTDBaseSetter binding_setter1321 = new VTDObjectSetter(pi2684);
            binding_setter1321 = new StringFormaterDecorator(binding_setter1321,"{Step.OutputProperties.Loop9.CurrentIterationNumber}");
            bind_dir1321 = new BindDirection(_flow.Loop9,binding_getter1363,binding_setter1321,BindTargetType.ToInProperty);
            _flow.DbFetchData26.InDirections.Add(bind_dir1321);
            VTDPropertyInfoBase pi2685 = new VTDPropertyInfoBase("Connection");
            VTDBaseGetter binding_getter1364 = new VTDObjectGetter(pi2685);
            VTDPropertyInfoBase pi2686 = new VTDPropertyInfoBase("Connection");
            VTDBaseSetter binding_setter1322 = new VTDObjectSetter(pi2686);
            bind_dir1322 = new BindDirection(_flow.DbOpenConnection5,binding_getter1364,binding_setter1322,BindTargetType.ToInProperty);
            _flow.DbFetchData26.InDirections.Add(bind_dir1322);
            XmlDocument DbFetchData26_ExpectedOutputProperties_Document = new XmlDocument();
            DbFetchData26_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            DbFetchData26_ExpectedOutputProperties_Document.LoadXml(
@"<tns:Arguments xmlns:tns=""hp.dbFetchActivity""><Count /><Result>true</Result><ResultMessage /><ResultTable><Row /></ResultTable></tns:Arguments>");
            _flow.DbFetchData26.ExpectedOutputProperties = DbFetchData26_ExpectedOutputProperties_Document;
            
        }
        
        internal void InitializeEncryptionManagerValues()
        {
        
        }
        	
    	bool useReport = true;
    
    	protected override STExecutionResult ExecuteStep()
        {
            return base.ExecuteStep();
        }
    
        public void Start()
        {
    	    try
    		{
    		  Workflow_Executing();
    		  this.ExecuteStep();
    		}
    		finally
    		{
    		  WorkFlowScript_Completed();
    		}
        }
    
    	private void InitReport()
    	{
    		if (useReport)
    		{	
    			// Intialize Reporter
    			string reportDBDir = Path.Combine(this._context.ReportDirectory, @"Report");
    			CleanupReport(reportDBDir);        	
    			string reportDBPath = Path.Combine(reportDBDir, "VTDReport.mdb");        	
    			if (reporter == null)
    			{
    				reporter = new Reporter(reportDBPath);
    			}
    			_context.Reporter = reporter;
    		}
    	}
    
        public static void CopyDirectory(string Src, string Dst)
        {
            String[] Files;
    
            if (Dst[Dst.Length - 1] != Path.DirectorySeparatorChar)
                Dst += Path.DirectorySeparatorChar;
            if (!Directory.Exists(Dst)) Directory.CreateDirectory(Dst);
            Files = Directory.GetFileSystemEntries(Src);
            foreach (string Element in Files)
            {
                // Sub directories
                if (Directory.Exists(Element))
                    CopyDirectory(Element, Dst + Path.GetFileName(Element));
                // Files in directory
                else
                    File.Copy(Element, Dst + Path.GetFileName(Element), true);
            }
        }
        
        private void CleanupReport(string reportDBDir)
        {   
    		if (useReport)
    		{             
    			string reportTemplateDir = Path.Combine(ServiceTestRunner.GetInstallPath(),@"bin\ReportResources");                
    			try
    			{
            		CopyDirectory(reportTemplateDir, reportDBDir);
    			}
    			catch //(Exception ex)
    			{
    				//ToDo: LoggingService.Warn("Report Cleanup Error", ex);
    			}
    		}
        }
    
        void Workflow_Executing()
        {   
        	InitReportNode();
                       
        }
    
    	private void InitReportNode()
    	{
    		if (useReport)
    		{	
        		// Init report creator
    			this.reportCreator = new HP.ST.Fwk.ReportCreator.QTPEngine.QTPEngineReportCreator();
    			this.reportLevelInTree = reportCreator.Init(_context.EnvironmentProfile.GetVariableValue("TestName"), _context);
                
    			STActivityBase activity = this;
    			string workflowID = activity.GetHashCode().ToString();
    			ReportNodeCreationData newNodeData =
    			new ReportNodeCreationData(workflowID, workflowID, DateTime.Now);
    			reporter.CreateReportNode(newNodeData);
            
    			ReportInfoData newReportData = new ReportInfoData(workflowID, ReportKeywords.TypeKeywordTag, this.GetType().ToString());
    			reporter.SendReportData(newReportData);
    			newReportData = new ReportInfoData(workflowID, ReportKeywords.NameKeywordTag, this.Name);
    			//TrackData(ReportInfoData.InfoDataTag, newReportData);
    			reporter.SendReportData(newReportData);            
            }
    	}
        
        void WorkFlowScript_Completed()
        {   
    		
    
    		CreateReportFiles();
    					
        	// Write all snapshots to disk
    		this._context.SnapshotManager.WriteSnapshotsToDisk();
    			
    		
    
    		OnExecutionCompleted();
    		
        }
    
    	private void CreateReportFiles()
    	{
    		if (useReport)
    		{	
    			//Dispose reporter inorder to close connection to report DB
           		this._context.Reporter.Dispose();
            	
           		// Run report creator
    			reportCreator.RunOnDBAndCreateFiles();
    		}
    	}
    
        
        void Workflow_Faulting()
        {
    		
    
    		CreateReportFiles();
            // Write all snapshots to disk
    		this._context.SnapshotManager.WriteSnapshotsToDisk();
           
    		OnExecutionCompleted();
        }
    
    	protected override QcSystemVariables GetRuntimeQcVariables(ISTRunTimeContext context)
    	{
    		return new HP.ST.Ext.BasicActivities.RuntimeQcVariables(this._context);
    	}
            
    	protected override TestSystemVariables GetTestSystemVariables(ISTRunTimeContext context)
    	{
    		return new HP.ST.Ext.BasicActivities.RuntimeTestVariables(this._context);
    	}
    
    	private void UpdateTestSettings(ISTRunTimeContext ctx)
        {
    		ctx.PropertyBag["StopTestOnStepFailure"] = true;
    	}
    
    protected override void OnThreadStart()
    {
    
    }
    }
    
    public partial class VuserClass
    {
    	public static string[] CommandLineArguments;
    	public static string[] DotNetResolverPaths;
    	
    	
    	public static void InitJavaEnv(string classPath, string additionalVMargs)
    	{
    		JVMLoader.LoadJVM(classPath, additionalVMargs);
    	}
    	
    	
    		
        public VuserClass()
        {
    				
    		AssemblyResolver.AddSTPathsToResolutionPaths();
    		AssemblyResolver.AttachToAppdomain();
        }
    
        private void AddAssemblyResolver()
        {
    		AssemblyResolver.AddTestPathToResolutionPaths(GetTestPath());
    		AssemblyResolver.AddPathsForAssemblyResolution(DotNetResolverPaths);
        }
    	
        public int STAction()
        {	
            AddAssemblyResolver();
            STRunTimeContext ctx = new STRunTimeContext(Directory.GetParent(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)).FullName, string.Empty);
            WorkFlowScript script = new WorkFlowScript(ctx);
            script.InitializeComponent();
            script.Start();       
            
            return 0;
        }
        
        public void NotifyLicenseException(string msg)
        {
        		
    		try
    		{
    		    STRunTimeContext ctx = new STRunTimeContext(Directory.GetParent(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)).FullName, string.Empty);
                WorkFlowScript script = new WorkFlowScript(ctx);
                script.InitializeComponent();
                script.Context.ReplayClient.OnLicenseFailure(msg);
                
            }
            catch (Exception)
            {
    			// ToDo: log the error message
            }        
        }
    
    	 protected string GetTestPath()
            {
                if (CommandLineArguments != null)
                {
                    for (int i = 0; i < CommandLineArguments.Length; i++)
                    {
                        if (CommandLineArguments[i].Equals("-test", StringComparison.OrdinalIgnoreCase))
                        {
                            return CommandLineArguments[i + 1];
                        }
                    }
                }
                return String.Empty;
            }
        
    }
    
    }
    